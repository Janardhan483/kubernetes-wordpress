2021/02/17 06:23:12 [INFO] Terraform version: 0.12.24  
2021/02/17 06:23:12 [INFO] Go runtime version: go1.12.13
2021/02/17 06:23:12 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2021/02/17 06:23:12 [DEBUG] Attempting to open CLI config file: /home/codingdog2020/.terraformrc
2021/02/17 06:23:12 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/17 06:23:12 [DEBUG] checking for credentials in "/home/codingdog2020/.terraform.d/plugins"
2021/02/17 06:23:12 [INFO] CLI command args: []string{"apply"}
2021/02/17 06:23:12 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/17 06:23:12 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/17 06:23:12 [DEBUG] New state was assigned lineage "4e55e836-e8b7-2126-d283-b9b44be3b3b7"
2021/02/17 06:23:12 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/17 06:23:12 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/17 06:23:12 [DEBUG] checking for provider in "."
2021/02/17 06:23:12 [DEBUG] checking for provider in "/usr/local/bin"
2021/02/17 06:23:12 [DEBUG] checking for provider in ".terraform/plugins/linux_amd64"
2021/02/17 06:23:12 [DEBUG] found provider "terraform-provider-google_v3.57.0_x5"
2021/02/17 06:23:12 [DEBUG] found provider "terraform-provider-kubernetes_v1.10.0_x4"
2021/02/17 06:23:12 [DEBUG] checking for provider in "/home/codingdog2020/.terraform.d/plugins"
2021/02/17 06:23:12 [DEBUG] found provider "terraform-provider-kubectl_v1.10.0"
2021/02/17 06:23:12 [DEBUG] found valid plugin: "kubernetes", "1.10.0", "/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.10.0_x4"
2021/02/17 06:23:12 [DEBUG] found valid plugin: "kubectl", "1.10.0", "/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0"
2021/02/17 06:23:12 [DEBUG] found valid plugin: "google", "3.57.0", "/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5"
2021/02/17 06:23:12 [DEBUG] checking for provisioner in "."
2021/02/17 06:23:12 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/17 06:23:12 [DEBUG] checking for provisioner in ".terraform/plugins/linux_amd64"
2021/02/17 06:23:12 [DEBUG] checking for provisioner in "/home/codingdog2020/.terraform.d/plugins"
2021/02/17 06:23:12 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/17 06:23:12 [INFO] backend/local: starting Apply operation
2021/02/17 06:23:12 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/17 06:23:12 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/17 06:23:12 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/17 06:23:12 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/17 06:23:12 [TRACE] statemgr.Filesystem: existing snapshot has lineage "a9983858-2154-f1cb-0df3-23311a0f4a88" serial 53
2021/02/17 06:23:12 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/17 06:23:12 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/17 06:23:12 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/17 06:23:12 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/17 06:23:12 [TRACE] statemgr.Filesystem: read snapshot with lineage "a9983858-2154-f1cb-0df3-23311a0f4a88" serial 53
2021/02/17 06:23:12 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/17 06:23:12 [TRACE] backend/local: building context for current working directory
2021/02/17 06:23:12 [TRACE] terraform.NewContext: starting
2021/02/17 06:23:12 [TRACE] terraform.NewContext: resolving provider version selections
2021/02/17 06:23:13 [TRACE] terraform.NewContext: loading provider schemas
2021/02/17 06:23:13 [TRACE] LoadSchemas: retrieving schema for provider type "google"
2021-02-17T06:23:13.472Z [INFO]  plugin: configuring client automatic mTLS
2021-02-17T06:23:13.517Z [DEBUG] plugin: starting plugin: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5 args=[/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5]
2021-02-17T06:23:13.517Z [DEBUG] plugin: plugin started: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5 pid=69887
2021-02-17T06:23:13.518Z [DEBUG] plugin: waiting for RPC address: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5
2021-02-17T06:23:13.543Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: configuring server automatic mTLS: timestamp=2021-02-17T06:23:13.543Z
2021-02-17T06:23:13.582Z [DEBUG] plugin.terraform-provider-google_v3.57.0_x5: plugin address: network=unix address=/tmp/plugin303921863 timestamp=2021-02-17T06:23:13.581Z
2021-02-17T06:23:13.582Z [DEBUG] plugin: using plugin: version=5
2021/02/17 06:23:13 [TRACE] GRPCProvider: GetSchema
2021/02/17 06:23:13 [TRACE] GRPCProvider: Close
2021-02-17T06:23:13.756Z [DEBUG] plugin: plugin process exited: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5 pid=69887
2021-02-17T06:23:13.756Z [DEBUG] plugin: plugin exited
2021/02/17 06:23:13 [TRACE] LoadSchemas: retrieving schema for provider type "kubectl"
2021-02-17T06:23:13.756Z [INFO]  plugin: configuring client automatic mTLS
2021-02-17T06:23:13.794Z [DEBUG] plugin: starting plugin: path=/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0 args=[/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0]
2021-02-17T06:23:13.794Z [DEBUG] plugin: plugin started: path=/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0 pid=69921
2021-02-17T06:23:13.794Z [DEBUG] plugin: waiting for RPC address: path=/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0
2021-02-17T06:23:13.844Z [INFO]  plugin.terraform-provider-kubectl_v1.10.0: configuring server automatic mTLS: timestamp=2021-02-17T06:23:13.843Z
2021-02-17T06:23:13.881Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: plugin address: address=/tmp/plugin201071432 network=unix timestamp=2021-02-17T06:23:13.880Z
2021-02-17T06:23:13.881Z [DEBUG] plugin: using plugin: version=5
2021/02/17 06:23:13 [TRACE] GRPCProvider: GetSchema
2021/02/17 06:23:13 [TRACE] GRPCProvider: Close
2021-02-17T06:23:13.968Z [DEBUG] plugin: plugin process exited: path=/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0 pid=69921
2021-02-17T06:23:13.968Z [DEBUG] plugin: plugin exited
2021/02/17 06:23:13 [TRACE] LoadSchemas: retrieving schema for provider type "kubernetes"
2021-02-17T06:23:13.968Z [INFO]  plugin: configuring client automatic mTLS
2021-02-17T06:23:14.011Z [DEBUG] plugin: starting plugin: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.10.0_x4 args=[/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.10.0_x4]
2021-02-17T06:23:14.011Z [DEBUG] plugin: plugin started: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.10.0_x4 pid=69938
2021-02-17T06:23:14.011Z [DEBUG] plugin: waiting for RPC address: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.10.0_x4
2021-02-17T06:23:14.038Z [INFO]  plugin.terraform-provider-kubernetes_v1.10.0_x4: configuring server automatic mTLS: timestamp=2021-02-17T06:23:14.037Z
2021-02-17T06:23:14.081Z [DEBUG] plugin.terraform-provider-kubernetes_v1.10.0_x4: plugin address: address=/tmp/plugin963777008 network=unix timestamp=2021-02-17T06:23:14.081Z
2021-02-17T06:23:14.082Z [DEBUG] plugin: using plugin: version=5
2021/02/17 06:23:14 [TRACE] GRPCProvider: GetSchema
2021/02/17 06:23:14 [TRACE] GRPCProvider: Close
2021-02-17T06:23:14.229Z [DEBUG] plugin: plugin process exited: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-kubernetes_v1.10.0_x4 pid=69938
2021-02-17T06:23:14.229Z [DEBUG] plugin: plugin exited
2021/02/17 06:23:14 [TRACE] terraform.NewContext: complete
2021/02/17 06:23:14 [TRACE] backend/local: finished building terraform.Context
2021/02/17 06:23:14 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/17 06:23:14 [TRACE] Context.Input: Prompting for provider arguments
2021/02/17 06:23:14 [TRACE] Context.Input: Provider provider.kubernetes declared at k8s.tf:1,1-22
2021/02/17 06:23:14 [TRACE] Context.Input: Provider provider.google declared at main.tf:1,1-18
2021/02/17 06:23:14 [TRACE] Context.Input: Provider provider.kubectl implied by resource block at k8s.tf:19,1-35
2021/02/17 06:23:14 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/17 06:23:14 [TRACE] Context.Input: Input for provider.google: map[string]cty.Value{}
2021/02/17 06:23:14 [TRACE] Context.Input: Input for provider.kubectl: map[string]cty.Value{}
2021/02/17 06:23:14 [TRACE] backend/local: running validation operation
2021/02/17 06:23:14 [INFO] terraform: building graph: GraphTypeValidate
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/17 06:23:14 [TRACE] ConfigTransformer: Starting for path: 
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  data.google_client_config.current - *terraform.NodeValidatableResource
  data.google_container_engine_versions.default - *terraform.NodeValidatableResource
  data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
  google_compute_address.default - *terraform.NodeValidatableResource
  google_compute_network.default - *terraform.NodeValidatableResource
  google_compute_subnetwork.default - *terraform.NodeValidatableResource
  google_container_cluster.default - *terraform.NodeValidatableResource
  kubectl_manifest.test - *terraform.NodeValidatableResource
  ------
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  data.google_client_config.current - *terraform.NodeValidatableResource
  data.google_container_engine_versions.default - *terraform.NodeValidatableResource
  data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
  google_compute_address.default - *terraform.NodeValidatableResource
  google_compute_network.default - *terraform.NodeValidatableResource
  google_compute_subnetwork.default - *terraform.NodeValidatableResource
  google_container_cluster.default - *terraform.NodeValidatableResource
  kubectl_manifest.test - *terraform.NodeValidatableResource
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  ------
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/17 06:23:14 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/17 06:23:14 [TRACE] AttachResourceConfigTransformer: attaching to "google_compute_subnetwork.default" (*terraform.NodeValidatableResource) config from main.tf:10,1-47
2021/02/17 06:23:14 [TRACE] AttachResourceConfigTransformer: attaching to "google_container_cluster.default" (*terraform.NodeValidatableResource) config from main.tf:25,1-46
2021/02/17 06:23:14 [TRACE] AttachResourceConfigTransformer: attaching to "google_compute_address.default" (*terraform.NodeValidatableResource) config from k8s.tf:10,1-44
2021/02/17 06:23:14 [TRACE] AttachResourceConfigTransformer: attaching to "data.google_client_config.current" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:18, Column:1, Byte:458}, End:hcl.Pos{Line:18, Column:38, Byte:495}}
2021/02/17 06:23:14 [TRACE] AttachResourceConfigTransformer: attaching to "data.google_container_engine_versions.default" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:21, Column:1, Byte:501}, End:hcl.Pos{Line:21, Column:50, Byte:550}}
2021/02/17 06:23:14 [TRACE] AttachResourceConfigTransformer: attaching to "kubectl_manifest.test" (*terraform.NodeValidatableResource) config from k8s.tf:19,1-35
2021/02/17 06:23:14 [TRACE] AttachResourceConfigTransformer: attaching to "google_compute_network.default" (*terraform.NodeValidatableResource) config from main.tf:5,1-44
2021/02/17 06:23:14 [TRACE] AttachResourceConfigTransformer: attaching to "data.kubectl_filename_list.manifests" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"k8s.tf", Start:hcl.Pos{Line:15, Column:1, Byte:569}, End:hcl.Pos{Line:15, Column:41, Byte:609}}
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  data.google_client_config.current - *terraform.NodeValidatableResource
  data.google_container_engine_versions.default - *terraform.NodeValidatableResource
  data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
  google_compute_address.default - *terraform.NodeValidatableResource
  google_compute_network.default - *terraform.NodeValidatableResource
  google_compute_subnetwork.default - *terraform.NodeValidatableResource
  google_container_cluster.default - *terraform.NodeValidatableResource
  kubectl_manifest.test - *terraform.NodeValidatableResource
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/17 06:23:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/17 06:23:14 [TRACE] ProviderConfigTransformer: attaching to "provider.kubernetes" provider configuration from k8s.tf:1,1-22
2021/02/17 06:23:14 [TRACE] ProviderConfigTransformer: attaching to "provider.google" provider configuration from main.tf:1,1-18
2021/02/17 06:23:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  data.google_client_config.current - *terraform.NodeValidatableResource
  data.google_container_engine_versions.default - *terraform.NodeValidatableResource
  data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
  google_compute_address.default - *terraform.NodeValidatableResource
  google_compute_network.default - *terraform.NodeValidatableResource
  google_compute_subnetwork.default - *terraform.NodeValidatableResource
  google_container_cluster.default - *terraform.NodeValidatableResource
  kubectl_manifest.test - *terraform.NodeValidatableResource
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/17 06:23:14 [DEBUG] adding implicit provider configuration provider.kubectl, implied first by kubectl_manifest.test
2021/02/17 06:23:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  data.google_client_config.current - *terraform.NodeValidatableResource
  data.google_container_engine_versions.default - *terraform.NodeValidatableResource
  data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
  google_compute_address.default - *terraform.NodeValidatableResource
  google_compute_network.default - *terraform.NodeValidatableResource
  google_compute_subnetwork.default - *terraform.NodeValidatableResource
  google_container_cluster.default - *terraform.NodeValidatableResource
  kubectl_manifest.test - *terraform.NodeValidatableResource
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/17 06:23:14 [TRACE] ProviderTransformer: google_compute_network.default is provided by provider.google or inherited equivalent
2021/02/17 06:23:14 [TRACE] ProviderTransformer: data.kubectl_filename_list.manifests is provided by provider.kubectl or inherited equivalent
2021/02/17 06:23:14 [TRACE] ProviderTransformer: google_container_cluster.default is provided by provider.google or inherited equivalent
2021/02/17 06:23:14 [TRACE] ProviderTransformer: data.google_container_engine_versions.default is provided by provider.google or inherited equivalent
2021/02/17 06:23:14 [TRACE] ProviderTransformer: kubectl_manifest.test is provided by provider.kubectl or inherited equivalent
2021/02/17 06:23:14 [TRACE] ProviderTransformer: google_compute_subnetwork.default is provided by provider.google or inherited equivalent
2021/02/17 06:23:14 [TRACE] ProviderTransformer: google_compute_address.default is provided by provider.google or inherited equivalent
2021/02/17 06:23:14 [TRACE] ProviderTransformer: data.google_client_config.current is provided by provider.google or inherited equivalent
2021/02/17 06:23:14 [TRACE] ProviderTransformer: exact match for provider.google serving google_compute_subnetwork.default
2021/02/17 06:23:14 [DEBUG] ProviderTransformer: "google_compute_subnetwork.default" (*terraform.NodeValidatableResource) needs provider.google
2021/02/17 06:23:14 [TRACE] ProviderTransformer: exact match for provider.google serving google_compute_address.default
2021/02/17 06:23:14 [DEBUG] ProviderTransformer: "google_compute_address.default" (*terraform.NodeValidatableResource) needs provider.google
2021/02/17 06:23:14 [TRACE] ProviderTransformer: exact match for provider.google serving data.google_client_config.current
2021/02/17 06:23:14 [DEBUG] ProviderTransformer: "data.google_client_config.current" (*terraform.NodeValidatableResource) needs provider.google
2021/02/17 06:23:14 [TRACE] ProviderTransformer: exact match for provider.google serving google_compute_network.default
2021/02/17 06:23:14 [DEBUG] ProviderTransformer: "google_compute_network.default" (*terraform.NodeValidatableResource) needs provider.google
2021/02/17 06:23:14 [TRACE] ProviderTransformer: exact match for provider.kubectl serving data.kubectl_filename_list.manifests
2021/02/17 06:23:14 [DEBUG] ProviderTransformer: "data.kubectl_filename_list.manifests" (*terraform.NodeValidatableResource) needs provider.kubectl
2021/02/17 06:23:14 [TRACE] ProviderTransformer: exact match for provider.google serving google_container_cluster.default
2021/02/17 06:23:14 [DEBUG] ProviderTransformer: "google_container_cluster.default" (*terraform.NodeValidatableResource) needs provider.google
2021/02/17 06:23:14 [TRACE] ProviderTransformer: exact match for provider.google serving data.google_container_engine_versions.default
2021/02/17 06:23:14 [DEBUG] ProviderTransformer: "data.google_container_engine_versions.default" (*terraform.NodeValidatableResource) needs provider.google
2021/02/17 06:23:14 [TRACE] ProviderTransformer: exact match for provider.kubectl serving kubectl_manifest.test
2021/02/17 06:23:14 [DEBUG] ProviderTransformer: "kubectl_manifest.test" (*terraform.NodeValidatableResource) needs provider.kubectl
2021/02/17 06:23:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  data.google_client_config.current - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_network.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_subnetwork.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  google_container_cluster.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  kubectl_manifest.test - *terraform.NodeValidatableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/17 06:23:14 [DEBUG] pruning unused provider.kubernetes
2021/02/17 06:23:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  data.google_client_config.current - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_network.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_subnetwork.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  google_container_cluster.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  kubectl_manifest.test - *terraform.NodeValidatableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/17 06:23:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  data.google_client_config.current - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_network.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_subnetwork.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  google_container_cluster.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  kubectl_manifest.test - *terraform.NodeValidatableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/17 06:23:14 [TRACE] AttachSchemaTransformer: attaching resource schema to google_compute_subnetwork.default
2021/02/17 06:23:14 [TRACE] AttachSchemaTransformer: attaching resource schema to google_compute_address.default
2021/02/17 06:23:14 [TRACE] AttachSchemaTransformer: attaching resource schema to data.google_client_config.current
2021/02/17 06:23:14 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.kubectl
2021/02/17 06:23:14 [TRACE] AttachSchemaTransformer: attaching resource schema to google_compute_network.default
2021/02/17 06:23:14 [TRACE] AttachSchemaTransformer: attaching resource schema to data.kubectl_filename_list.manifests
2021/02/17 06:23:14 [TRACE] AttachSchemaTransformer: attaching resource schema to google_container_cluster.default
2021/02/17 06:23:14 [TRACE] AttachSchemaTransformer: attaching resource schema to data.google_container_engine_versions.default
2021/02/17 06:23:14 [TRACE] AttachSchemaTransformer: attaching resource schema to kubectl_manifest.test
2021/02/17 06:23:14 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.google
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "google_container_cluster.default" references: [google_compute_subnetwork.default google_compute_subnetwork.default var.location data.google_container_engine_versions.default var.network_name]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "data.google_container_engine_versions.default" references: [var.location]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "output.cluster_region" references: [var.region]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "kubectl_manifest.test" references: [data.kubectl_filename_list.manifests data.kubectl_filename_list.manifests]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "provider.google" references: [var.region]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "google_compute_subnetwork.default" references: [var.region var.network_name google_compute_network.default]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "google_compute_address.default" references: [var.network_name var.region]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "data.google_client_config.current" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "output.subnetwork_name" references: [google_compute_subnetwork.default]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "output.cluster_location" references: [google_container_cluster.default]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "var.region" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "var.location" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "provider.kubectl" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "google_compute_network.default" references: [var.network_name]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "data.kubectl_filename_list.manifests" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "output.network" references: [google_compute_subnetwork.default]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "output.cluster_name" references: [google_container_cluster.default]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "var.network_name" references: []
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  data.google_client_config.current - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
  data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_compute_network.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
  google_compute_subnetwork.default - *terraform.NodeValidatableResource
    google_compute_network.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_container_cluster.default - *terraform.NodeValidatableResource
    data.google_container_engine_versions.default - *terraform.NodeValidatableResource
    google_compute_subnetwork.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
    var.network_name - *terraform.NodeRootVariable
  kubectl_manifest.test - *terraform.NodeValidatableResource
    data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  output.cluster_location - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodeValidatableResource
  output.cluster_name - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodeValidatableResource
  output.cluster_region - *terraform.NodeApplyableOutput
    var.region - *terraform.NodeRootVariable
  output.network - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodeValidatableResource
  output.subnetwork_name - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodeValidatableResource
  provider.google - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.kubectl - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  data.google_client_config.current - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
  data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_compute_network.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
  google_compute_subnetwork.default - *terraform.NodeValidatableResource
    google_compute_network.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_container_cluster.default - *terraform.NodeValidatableResource
    data.google_container_engine_versions.default - *terraform.NodeValidatableResource
    google_compute_subnetwork.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
    var.network_name - *terraform.NodeRootVariable
  kubectl_manifest.test - *terraform.NodeValidatableResource
    data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.google_client_config.current - *terraform.NodeValidatableResource
    data.google_container_engine_versions.default - *terraform.NodeValidatableResource
    data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
    google_compute_address.default - *terraform.NodeValidatableResource
    google_compute_network.default - *terraform.NodeValidatableResource
    google_compute_subnetwork.default - *terraform.NodeValidatableResource
    google_container_cluster.default - *terraform.NodeValidatableResource
    kubectl_manifest.test - *terraform.NodeValidatableResource
    output.cluster_location - *terraform.NodeApplyableOutput
    output.cluster_name - *terraform.NodeApplyableOutput
    output.cluster_region - *terraform.NodeApplyableOutput
    output.network - *terraform.NodeApplyableOutput
    output.subnetwork_name - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
    provider.kubectl - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.cluster_location - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodeValidatableResource
  output.cluster_name - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodeValidatableResource
  output.cluster_region - *terraform.NodeApplyableOutput
    var.region - *terraform.NodeRootVariable
  output.network - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodeValidatableResource
  output.subnetwork_name - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodeValidatableResource
  provider.google - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.kubectl - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  data.google_client_config.current - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
  data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_compute_network.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
  google_compute_subnetwork.default - *terraform.NodeValidatableResource
    google_compute_network.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_container_cluster.default - *terraform.NodeValidatableResource
    data.google_container_engine_versions.default - *terraform.NodeValidatableResource
    google_compute_subnetwork.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
    var.network_name - *terraform.NodeRootVariable
  kubectl_manifest.test - *terraform.NodeValidatableResource
    data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.google_client_config.current - *terraform.NodeValidatableResource
    data.google_container_engine_versions.default - *terraform.NodeValidatableResource
    data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
    google_compute_address.default - *terraform.NodeValidatableResource
    google_compute_network.default - *terraform.NodeValidatableResource
    google_compute_subnetwork.default - *terraform.NodeValidatableResource
    google_container_cluster.default - *terraform.NodeValidatableResource
    kubectl_manifest.test - *terraform.NodeValidatableResource
    output.cluster_location - *terraform.NodeApplyableOutput
    output.cluster_name - *terraform.NodeApplyableOutput
    output.cluster_region - *terraform.NodeApplyableOutput
    output.network - *terraform.NodeApplyableOutput
    output.subnetwork_name - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
    provider.kubectl - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.cluster_location - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodeValidatableResource
  output.cluster_name - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodeValidatableResource
  output.cluster_region - *terraform.NodeApplyableOutput
    var.region - *terraform.NodeRootVariable
  output.network - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodeValidatableResource
  output.subnetwork_name - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodeValidatableResource
  provider.google - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.google (close) - *terraform.graphNodeCloseProvider
    data.google_client_config.current - *terraform.NodeValidatableResource
    data.google_container_engine_versions.default - *terraform.NodeValidatableResource
    google_compute_address.default - *terraform.NodeValidatableResource
    google_compute_network.default - *terraform.NodeValidatableResource
    google_compute_subnetwork.default - *terraform.NodeValidatableResource
    google_container_cluster.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubectl (close) - *terraform.graphNodeCloseProvider
    data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
    kubectl_manifest.test - *terraform.NodeValidatableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  data.google_client_config.current - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
  data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_compute_network.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
  google_compute_subnetwork.default - *terraform.NodeValidatableResource
    google_compute_network.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_container_cluster.default - *terraform.NodeValidatableResource
    data.google_container_engine_versions.default - *terraform.NodeValidatableResource
    google_compute_subnetwork.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
    var.network_name - *terraform.NodeRootVariable
  kubectl_manifest.test - *terraform.NodeValidatableResource
    data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.google_client_config.current - *terraform.NodeValidatableResource
    data.google_container_engine_versions.default - *terraform.NodeValidatableResource
    data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
    google_compute_address.default - *terraform.NodeValidatableResource
    google_compute_network.default - *terraform.NodeValidatableResource
    google_compute_subnetwork.default - *terraform.NodeValidatableResource
    google_container_cluster.default - *terraform.NodeValidatableResource
    kubectl_manifest.test - *terraform.NodeValidatableResource
    output.cluster_location - *terraform.NodeApplyableOutput
    output.cluster_name - *terraform.NodeApplyableOutput
    output.cluster_region - *terraform.NodeApplyableOutput
    output.network - *terraform.NodeApplyableOutput
    output.subnetwork_name - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
    provider.kubectl - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.cluster_location - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodeValidatableResource
  output.cluster_name - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodeValidatableResource
  output.cluster_region - *terraform.NodeApplyableOutput
    var.region - *terraform.NodeRootVariable
  output.network - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodeValidatableResource
  output.subnetwork_name - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodeValidatableResource
  provider.google - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.google (close) - *terraform.graphNodeCloseProvider
    data.google_client_config.current - *terraform.NodeValidatableResource
    data.google_container_engine_versions.default - *terraform.NodeValidatableResource
    google_compute_address.default - *terraform.NodeValidatableResource
    google_compute_network.default - *terraform.NodeValidatableResource
    google_compute_subnetwork.default - *terraform.NodeValidatableResource
    google_container_cluster.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubectl (close) - *terraform.graphNodeCloseProvider
    data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
    kubectl_manifest.test - *terraform.NodeValidatableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.google (close) - *terraform.graphNodeCloseProvider
    provider.kubectl (close) - *terraform.graphNodeCloseProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  data.google_client_config.current - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
  data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
  google_compute_network.default - *terraform.NodeValidatableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
  google_compute_subnetwork.default - *terraform.NodeValidatableResource
    google_compute_network.default - *terraform.NodeValidatableResource
  google_container_cluster.default - *terraform.NodeValidatableResource
    data.google_container_engine_versions.default - *terraform.NodeValidatableResource
    google_compute_subnetwork.default - *terraform.NodeValidatableResource
  kubectl_manifest.test - *terraform.NodeValidatableResource
    data.kubectl_filename_list.manifests - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.google_client_config.current - *terraform.NodeValidatableResource
    google_compute_address.default - *terraform.NodeValidatableResource
    kubectl_manifest.test - *terraform.NodeValidatableResource
    output.cluster_location - *terraform.NodeApplyableOutput
    output.cluster_name - *terraform.NodeApplyableOutput
    output.cluster_region - *terraform.NodeApplyableOutput
    output.network - *terraform.NodeApplyableOutput
    output.subnetwork_name - *terraform.NodeApplyableOutput
  output.cluster_location - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodeValidatableResource
  output.cluster_name - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodeValidatableResource
  output.cluster_region - *terraform.NodeApplyableOutput
    var.region - *terraform.NodeRootVariable
  output.network - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodeValidatableResource
  output.subnetwork_name - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodeValidatableResource
  provider.google - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.google (close) - *terraform.graphNodeCloseProvider
    data.google_client_config.current - *terraform.NodeValidatableResource
    google_compute_address.default - *terraform.NodeValidatableResource
    google_container_cluster.default - *terraform.NodeValidatableResource
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubectl (close) - *terraform.graphNodeCloseProvider
    kubectl_manifest.test - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.google (close) - *terraform.graphNodeCloseProvider
    provider.kubectl (close) - *terraform.graphNodeCloseProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [DEBUG] Starting graph walk: walkValidate
2021/02/17 06:23:14 [TRACE] dag/walk: updating graph
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "provider.google"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "var.location"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "google_compute_subnetwork.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "data.kubectl_filename_list.manifests"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "provider.kubectl (close)"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "google_compute_network.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "root"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "google_compute_address.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "output.cluster_location"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "var.region"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "provider.google (close)"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "provider.kubectl"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "output.subnetwork_name"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "output.cluster_name"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "output.cluster_region"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "google_container_cluster.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "data.google_client_config.current"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "output.network"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "var.network_name"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "data.google_container_engine_versions.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "google_container_cluster.default" waiting on "google_compute_subnetwork.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "google_compute_network.default" waiting on "provider.google"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "data.google_container_engine_versions.default" waiting on "provider.google"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.cluster_region"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "google_compute_address.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.network"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "provider.kubectl (close)" waiting on "kubectl_manifest.test"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "provider.google (close)"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "google_compute_address.default" waiting on "provider.google"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "kubectl_manifest.test" waiting on "data.kubectl_filename_list.manifests"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "provider.google (close)" waiting on "data.google_client_config.current"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "google_compute_network.default" waiting on "var.network_name"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "google_compute_address.default" waiting on "var.network_name"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "data.google_client_config.current" waiting on "provider.google"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "data.kubectl_filename_list.manifests" waiting on "provider.kubectl"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "provider.google" waiting on "var.region"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "provider.google (close)" waiting on "google_container_cluster.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "provider.google (close)" waiting on "google_compute_address.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.subnetwork_name"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "data.google_container_engine_versions.default" waiting on "var.location"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "provider.kubectl (close)"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "google_compute_subnetwork.default" waiting on "google_compute_network.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubectl_manifest.test"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.cluster_location"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "output.subnetwork_name" waiting on "google_compute_subnetwork.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "google_container_cluster.default" waiting on "data.google_container_engine_versions.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.google_client_config.current"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "output.cluster_region" waiting on "var.region"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "output.network" waiting on "google_compute_subnetwork.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "output.cluster_location" waiting on "google_container_cluster.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "output.cluster_name" waiting on "google_container_cluster.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.cluster_name"
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "provider.google", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "google_compute_subnetwork.default", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "google_compute_address.default", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "provider.kubectl (close)", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "kubectl_manifest.test", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "provider.google (close)", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "data.google_client_config.current", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "output.cluster_region", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "output.cluster_name", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "google_compute_network.default", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "data.kubectl_filename_list.manifests", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "data.google_container_engine_versions.default", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "output.subnetwork_name", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "output.network", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "output.cluster_location", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "google_container_cluster.default", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "var.location"
2021/02/17 06:23:14 [TRACE] vertex "var.location": starting visit (*terraform.NodeRootVariable)
2021/02/17 06:23:14 [TRACE] vertex "var.location": evaluating
2021/02/17 06:23:14 [TRACE] [walkValidate] Entering eval tree: var.location
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] [walkValidate] Exiting eval tree: var.location
2021/02/17 06:23:14 [TRACE] vertex "var.location": visit complete
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "var.region"
2021/02/17 06:23:14 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2021/02/17 06:23:14 [TRACE] vertex "var.region": evaluating
2021/02/17 06:23:14 [TRACE] [walkValidate] Entering eval tree: var.region
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] [walkValidate] Exiting eval tree: var.region
2021/02/17 06:23:14 [TRACE] vertex "var.region": visit complete
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "provider.google"
2021/02/17 06:23:14 [TRACE] vertex "provider.google": starting visit (*terraform.NodeApplyableProvider)
2021/02/17 06:23:14 [TRACE] vertex "provider.google": evaluating
2021/02/17 06:23:14 [TRACE] [walkValidate] Entering eval tree: provider.google
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021-02-17T06:23:14.236Z [INFO]  plugin: configuring client automatic mTLS
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "provider.kubectl"
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "output.cluster_region"
2021/02/17 06:23:14 [TRACE] vertex "provider.kubectl": starting visit (*terraform.NodeApplyableProvider)
2021/02/17 06:23:14 [TRACE] vertex "output.cluster_region": starting visit (*terraform.NodeApplyableOutput)
2021/02/17 06:23:14 [TRACE] vertex "output.cluster_region": evaluating
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "var.network_name"
2021/02/17 06:23:14 [TRACE] [walkValidate] Entering eval tree: output.cluster_region
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/02/17 06:23:14 [TRACE] vertex "var.network_name": starting visit (*terraform.NodeRootVariable)
2021/02/17 06:23:14 [TRACE] vertex "var.network_name": evaluating
2021/02/17 06:23:14 [TRACE] [walkValidate] Entering eval tree: var.network_name
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] [walkValidate] Exiting eval tree: var.network_name
2021/02/17 06:23:14 [TRACE] vertex "var.network_name": visit complete
2021/02/17 06:23:14 [TRACE] vertex "provider.kubectl": evaluating
2021/02/17 06:23:14 [TRACE] [walkValidate] Entering eval tree: provider.kubectl
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021/02/17 06:23:14 [TRACE] EvalWriteOutput: Removing output.cluster_region from state (it is now null)
2021/02/17 06:23:14 [TRACE] EvalWriteOutput: Saving Create change for output.cluster_region in changeset
2021/02/17 06:23:14 [TRACE] [walkValidate] Exiting eval tree: output.cluster_region
2021/02/17 06:23:14 [TRACE] vertex "output.cluster_region": visit complete
2021-02-17T06:23:14.276Z [DEBUG] plugin: starting plugin: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5 args=[/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5]
2021-02-17T06:23:14.276Z [DEBUG] plugin: plugin started: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5 pid=69953
2021-02-17T06:23:14.276Z [DEBUG] plugin: waiting for RPC address: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5
2021-02-17T06:23:14.300Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: configuring server automatic mTLS: timestamp=2021-02-17T06:23:14.300Z
2021-02-17T06:23:14.340Z [DEBUG] plugin.terraform-provider-google_v3.57.0_x5: plugin address: address=/tmp/plugin412330524 network=unix timestamp=2021-02-17T06:23:14.339Z
2021-02-17T06:23:14.340Z [DEBUG] plugin: using plugin: version=5
2021/02/17 06:23:14 [TRACE] BuiltinEvalContext: Initialized "google" provider for provider.google
2021/02/17 06:23:14 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2021/02/17 06:23:14 [TRACE] buildProviderConfig for provider.google: using explicit config only
2021/02/17 06:23:14 [TRACE] GRPCProvider: GetSchema
2021-02-17T06:23:14.340Z [INFO]  plugin: configuring client automatic mTLS
2021-02-17T06:23:14.384Z [DEBUG] plugin: starting plugin: path=/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0 args=[/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0]
2021-02-17T06:23:14.385Z [DEBUG] plugin: plugin started: path=/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0 pid=69962
2021-02-17T06:23:14.385Z [DEBUG] plugin: waiting for RPC address: path=/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0
2021-02-17T06:23:14.437Z [INFO]  plugin.terraform-provider-kubectl_v1.10.0: configuring server automatic mTLS: timestamp=2021-02-17T06:23:14.437Z
2021-02-17T06:23:14.500Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: plugin address: address=/tmp/plugin404912495 network=unix timestamp=2021-02-17T06:23:14.500Z
2021-02-17T06:23:14.500Z [DEBUG] plugin: using plugin: version=5
2021/02/17 06:23:14 [TRACE] BuiltinEvalContext: Initialized "kubectl" provider for provider.kubectl
2021/02/17 06:23:14 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2021/02/17 06:23:14 [TRACE] buildProviderConfig for provider.kubectl: no configuration at all
2021/02/17 06:23:14 [TRACE] GRPCProvider: GetSchema
2021/02/17 06:23:14 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/17 06:23:14 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:14 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:14 [TRACE] [walkValidate] Exiting eval tree: provider.google
2021/02/17 06:23:14 [TRACE] vertex "provider.google": visit complete
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "google_compute_address.default"
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "data.google_container_engine_versions.default"
2021/02/17 06:23:14 [TRACE] vertex "data.google_container_engine_versions.default": starting visit (*terraform.NodeValidatableResource)
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "google_compute_network.default"
2021/02/17 06:23:14 [TRACE] vertex "google_compute_network.default": starting visit (*terraform.NodeValidatableResource)
2021/02/17 06:23:14 [TRACE] vertex "data.google_container_engine_versions.default": evaluating
2021/02/17 06:23:14 [TRACE] [walkValidate] Entering eval tree: data.google_container_engine_versions.default
2021/02/17 06:23:14 [TRACE] vertex "google_compute_network.default": evaluating
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] [walkValidate] Entering eval tree: google_compute_network.default
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "data.google_client_config.current"
2021/02/17 06:23:14 [TRACE] vertex "data.google_client_config.current": starting visit (*terraform.NodeValidatableResource)
2021/02/17 06:23:14 [TRACE] vertex "data.google_client_config.current": evaluating
2021/02/17 06:23:14 [TRACE] [walkValidate] Entering eval tree: data.google_client_config.current
2021/02/17 06:23:14 [TRACE] vertex "google_compute_address.default": starting visit (*terraform.NodeValidatableResource)
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] vertex "google_compute_address.default": evaluating
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/02/17 06:23:14 [TRACE] [walkValidate] Entering eval tree: google_compute_address.default
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/02/17 06:23:14 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:14 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/02/17 06:23:14 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/02/17 06:23:14 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:14 [TRACE] [walkValidate] Exiting eval tree: data.google_client_config.current
2021/02/17 06:23:14 [TRACE] vertex "data.google_client_config.current": visit complete
2021/02/17 06:23:14 [TRACE] [walkValidate] Exiting eval tree: google_compute_address.default
2021/02/17 06:23:14 [TRACE] vertex "google_compute_address.default": visit complete
2021/02/17 06:23:14 [TRACE] [walkValidate] Exiting eval tree: google_compute_network.default
2021/02/17 06:23:14 [TRACE] [walkValidate] Exiting eval tree: data.google_container_engine_versions.default
2021/02/17 06:23:14 [TRACE] vertex "google_compute_network.default": visit complete
2021/02/17 06:23:14 [TRACE] vertex "data.google_container_engine_versions.default": visit complete
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "google_compute_subnetwork.default"
2021/02/17 06:23:14 [TRACE] vertex "google_compute_subnetwork.default": starting visit (*terraform.NodeValidatableResource)
2021/02/17 06:23:14 [TRACE] vertex "google_compute_subnetwork.default": evaluating
2021/02/17 06:23:14 [TRACE] [walkValidate] Entering eval tree: google_compute_subnetwork.default
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/02/17 06:23:14 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:14 [TRACE] [walkValidate] Exiting eval tree: google_compute_subnetwork.default
2021/02/17 06:23:14 [TRACE] vertex "google_compute_subnetwork.default": visit complete
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "output.subnetwork_name"
2021/02/17 06:23:14 [TRACE] vertex "output.subnetwork_name": starting visit (*terraform.NodeApplyableOutput)
2021/02/17 06:23:14 [TRACE] vertex "output.subnetwork_name": evaluating
2021/02/17 06:23:14 [TRACE] [walkValidate] Entering eval tree: output.subnetwork_name
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "output.network"
2021/02/17 06:23:14 [TRACE] vertex "output.network": starting visit (*terraform.NodeApplyableOutput)
2021/02/17 06:23:14 [TRACE] vertex "output.network": evaluating
2021/02/17 06:23:14 [TRACE] [walkValidate] Entering eval tree: output.network
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/02/17 06:23:14 [TRACE] EvalWriteOutput: Removing output.subnetwork_name from state (it is now null)
2021/02/17 06:23:14 [TRACE] EvalWriteOutput: Saving Create change for output.subnetwork_name in changeset
2021/02/17 06:23:14 [TRACE] [walkValidate] Exiting eval tree: output.subnetwork_name
2021/02/17 06:23:14 [TRACE] vertex "output.subnetwork_name": visit complete
2021/02/17 06:23:14 [TRACE] EvalWriteOutput: Removing output.network from state (it is now null)
2021/02/17 06:23:14 [TRACE] EvalWriteOutput: Saving Create change for output.network in changeset
2021/02/17 06:23:14 [TRACE] [walkValidate] Exiting eval tree: output.network
2021/02/17 06:23:14 [TRACE] vertex "output.network": visit complete
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "google_container_cluster.default"
2021/02/17 06:23:14 [TRACE] vertex "google_container_cluster.default": starting visit (*terraform.NodeValidatableResource)
2021/02/17 06:23:14 [TRACE] vertex "google_container_cluster.default": evaluating
2021/02/17 06:23:14 [TRACE] [walkValidate] Entering eval tree: google_container_cluster.default
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/02/17 06:23:14 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:14 [TRACE] [walkValidate] Exiting eval tree: google_container_cluster.default
2021/02/17 06:23:14 [TRACE] vertex "google_container_cluster.default": visit complete
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "output.cluster_location"
2021/02/17 06:23:14 [TRACE] vertex "output.cluster_location": starting visit (*terraform.NodeApplyableOutput)
2021/02/17 06:23:14 [TRACE] vertex "output.cluster_location": evaluating
2021/02/17 06:23:14 [TRACE] [walkValidate] Entering eval tree: output.cluster_location
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "output.cluster_name"
2021/02/17 06:23:14 [TRACE] vertex "output.cluster_name": starting visit (*terraform.NodeApplyableOutput)
2021/02/17 06:23:14 [TRACE] vertex "output.cluster_name": evaluating
2021/02/17 06:23:14 [TRACE] [walkValidate] Entering eval tree: output.cluster_name
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/02/17 06:23:14 [TRACE] EvalWriteOutput: Removing output.cluster_location from state (it is now null)
2021/02/17 06:23:14 [TRACE] EvalWriteOutput: Saving Create change for output.cluster_location in changeset
2021/02/17 06:23:14 [TRACE] [walkValidate] Exiting eval tree: output.cluster_location
2021/02/17 06:23:14 [TRACE] vertex "output.cluster_location": visit complete
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "provider.google (close)"
2021/02/17 06:23:14 [TRACE] vertex "provider.google (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/17 06:23:14 [TRACE] vertex "provider.google (close)": evaluating
2021/02/17 06:23:14 [TRACE] EvalWriteOutput: Removing output.cluster_name from state (it is now null)
2021/02/17 06:23:14 [TRACE] EvalWriteOutput: Saving Create change for output.cluster_name in changeset
2021/02/17 06:23:14 [TRACE] [walkValidate] Exiting eval tree: output.cluster_name
2021/02/17 06:23:14 [TRACE] vertex "output.cluster_name": visit complete
2021/02/17 06:23:14 [TRACE] [walkValidate] Entering eval tree: provider.google (close)
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2021/02/17 06:23:14 [TRACE] GRPCProvider: Close
2021/02/17 06:23:14 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/17 06:23:14 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:14 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:14 [TRACE] [walkValidate] Exiting eval tree: provider.kubectl
2021/02/17 06:23:14 [TRACE] vertex "provider.kubectl": visit complete
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "data.kubectl_filename_list.manifests"
2021/02/17 06:23:14 [TRACE] vertex "data.kubectl_filename_list.manifests": starting visit (*terraform.NodeValidatableResource)
2021/02/17 06:23:14 [TRACE] vertex "data.kubectl_filename_list.manifests": evaluating
2021/02/17 06:23:14 [TRACE] [walkValidate] Entering eval tree: data.kubectl_filename_list.manifests
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021-02-17T06:23:14.603Z [DEBUG] plugin: plugin process exited: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5 pid=69953
2021-02-17T06:23:14.603Z [DEBUG] plugin: plugin exited
2021/02/17 06:23:14 [TRACE] [walkValidate] Exiting eval tree: provider.google (close)
2021/02/17 06:23:14 [TRACE] vertex "provider.google (close)": visit complete
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/02/17 06:23:14 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/02/17 06:23:14 [TRACE] [walkValidate] Exiting eval tree: data.kubectl_filename_list.manifests
2021/02/17 06:23:14 [TRACE] vertex "data.kubectl_filename_list.manifests": visit complete
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "kubectl_manifest.test"
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test": starting visit (*terraform.NodeValidatableResource)
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test": evaluating
2021/02/17 06:23:14 [TRACE] [walkValidate] Entering eval tree: kubectl_manifest.test
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/02/17 06:23:14 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:14 [TRACE] [walkValidate] Exiting eval tree: kubectl_manifest.test
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test": visit complete
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "provider.kubectl (close)"
2021/02/17 06:23:14 [TRACE] vertex "provider.kubectl (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/17 06:23:14 [TRACE] vertex "provider.kubectl (close)": evaluating
2021/02/17 06:23:14 [TRACE] [walkValidate] Entering eval tree: provider.kubectl (close)
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2021/02/17 06:23:14 [TRACE] GRPCProvider: Close
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/17 06:23:14 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/17 06:23:14 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2021/02/17 06:23:14 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2021/02/17 06:23:14 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2021/02/17 06:23:14 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-17T06:23:14.609Z [DEBUG] plugin: plugin process exited: path=/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0 pid=69962
2021-02-17T06:23:14.609Z [DEBUG] plugin: plugin exited
2021/02/17 06:23:14 [TRACE] [walkValidate] Exiting eval tree: provider.kubectl (close)
2021/02/17 06:23:14 [TRACE] vertex "provider.kubectl (close)": visit complete
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "root"
2021/02/17 06:23:14 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/02/17 06:23:14 [TRACE] vertex "root": visit complete
2021/02/17 06:23:14 [INFO] backend/local: apply calling Refresh
2021/02/17 06:23:14 [INFO] terraform: building graph: GraphTypeRefresh
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/17 06:23:14 [TRACE] ConfigTransformer: Starting for path: 
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  google_compute_address.default - *terraform.NodeRefreshableManagedResource
  google_compute_network.default - *terraform.NodeRefreshableManagedResource
  google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
  google_container_cluster.default - *terraform.NodeRefreshableManagedResource
  kubectl_manifest.test - *terraform.NodeRefreshableManagedResource
  ------
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/17 06:23:14 [TRACE] ConfigTransformer: Starting for path: 
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  data.google_client_config.current - *terraform.NodeRefreshableDataResource
  data.google_container_engine_versions.default - *terraform.NodeRefreshableDataResource
  data.kubectl_filename_list.manifests - *terraform.NodeRefreshableDataResource
  google_compute_address.default - *terraform.NodeRefreshableManagedResource
  google_compute_network.default - *terraform.NodeRefreshableManagedResource
  google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
  google_container_cluster.default - *terraform.NodeRefreshableManagedResource
  kubectl_manifest.test - *terraform.NodeRefreshableManagedResource
  ------
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/17 06:23:14 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/17 06:23:14 [TRACE] AttachResourceConfigTransformer: attaching to "google_compute_address.default" (*terraform.NodeRefreshableManagedResource) config from k8s.tf:10,1-44
2021/02/17 06:23:14 [TRACE] AttachResourceConfigTransformer: attaching to "kubectl_manifest.test" (*terraform.NodeRefreshableManagedResource) config from k8s.tf:19,1-35
2021/02/17 06:23:14 [TRACE] AttachResourceConfigTransformer: attaching to "data.kubectl_filename_list.manifests" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"k8s.tf", Start:hcl.Pos{Line:15, Column:1, Byte:569}, End:hcl.Pos{Line:15, Column:41, Byte:609}}
2021/02/17 06:23:14 [TRACE] AttachResourceConfigTransformer: attaching to "data.google_client_config.current" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:18, Column:1, Byte:458}, End:hcl.Pos{Line:18, Column:38, Byte:495}}
2021/02/17 06:23:14 [TRACE] AttachResourceConfigTransformer: attaching to "data.google_container_engine_versions.default" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:21, Column:1, Byte:501}, End:hcl.Pos{Line:21, Column:50, Byte:550}}
2021/02/17 06:23:14 [TRACE] AttachResourceConfigTransformer: attaching to "google_compute_network.default" (*terraform.NodeRefreshableManagedResource) config from main.tf:5,1-44
2021/02/17 06:23:14 [TRACE] AttachResourceConfigTransformer: attaching to "google_compute_subnetwork.default" (*terraform.NodeRefreshableManagedResource) config from main.tf:10,1-47
2021/02/17 06:23:14 [TRACE] AttachResourceConfigTransformer: attaching to "google_container_cluster.default" (*terraform.NodeRefreshableManagedResource) config from main.tf:25,1-46
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  data.google_client_config.current - *terraform.NodeRefreshableDataResource
  data.google_container_engine_versions.default - *terraform.NodeRefreshableDataResource
  data.kubectl_filename_list.manifests - *terraform.NodeRefreshableDataResource
  google_compute_address.default - *terraform.NodeRefreshableManagedResource
  google_compute_network.default - *terraform.NodeRefreshableManagedResource
  google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
  google_container_cluster.default - *terraform.NodeRefreshableManagedResource
  kubectl_manifest.test - *terraform.NodeRefreshableManagedResource
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  data.google_client_config.current - *terraform.NodeRefreshableDataResource
  data.google_container_engine_versions.default - *terraform.NodeRefreshableDataResource
  data.kubectl_filename_list.manifests - *terraform.NodeRefreshableDataResource
  google_compute_address.default - *terraform.NodeRefreshableManagedResource
  google_compute_network.default - *terraform.NodeRefreshableManagedResource
  google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
  google_container_cluster.default - *terraform.NodeRefreshableManagedResource
  kubectl_manifest.test - *terraform.NodeRefreshableManagedResource
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/17 06:23:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/17 06:23:14 [TRACE] ProviderConfigTransformer: attaching to "provider.kubernetes" provider configuration from k8s.tf:1,1-22
2021/02/17 06:23:14 [TRACE] ProviderConfigTransformer: attaching to "provider.google" provider configuration from main.tf:1,1-18
2021/02/17 06:23:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  data.google_client_config.current - *terraform.NodeRefreshableDataResource
  data.google_container_engine_versions.default - *terraform.NodeRefreshableDataResource
  data.kubectl_filename_list.manifests - *terraform.NodeRefreshableDataResource
  google_compute_address.default - *terraform.NodeRefreshableManagedResource
  google_compute_network.default - *terraform.NodeRefreshableManagedResource
  google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
  google_container_cluster.default - *terraform.NodeRefreshableManagedResource
  kubectl_manifest.test - *terraform.NodeRefreshableManagedResource
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/17 06:23:14 [DEBUG] adding implicit provider configuration provider.kubectl, implied first by kubectl_manifest.test
2021/02/17 06:23:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  data.google_client_config.current - *terraform.NodeRefreshableDataResource
  data.google_container_engine_versions.default - *terraform.NodeRefreshableDataResource
  data.kubectl_filename_list.manifests - *terraform.NodeRefreshableDataResource
  google_compute_address.default - *terraform.NodeRefreshableManagedResource
  google_compute_network.default - *terraform.NodeRefreshableManagedResource
  google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
  google_container_cluster.default - *terraform.NodeRefreshableManagedResource
  kubectl_manifest.test - *terraform.NodeRefreshableManagedResource
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/17 06:23:14 [TRACE] ProviderTransformer: data.google_container_engine_versions.default is provided by provider.google or inherited equivalent
2021/02/17 06:23:14 [TRACE] ProviderTransformer: google_compute_network.default is provided by provider.google or inherited equivalent
2021/02/17 06:23:14 [TRACE] ProviderTransformer: google_container_cluster.default is provided by provider.google or inherited equivalent
2021/02/17 06:23:14 [TRACE] ProviderTransformer: kubectl_manifest.test is provided by provider.kubectl or inherited equivalent
2021/02/17 06:23:14 [TRACE] ProviderTransformer: google_compute_subnetwork.default is provided by provider.google or inherited equivalent
2021/02/17 06:23:14 [TRACE] ProviderTransformer: data.kubectl_filename_list.manifests is provided by provider.kubectl or inherited equivalent
2021/02/17 06:23:14 [TRACE] ProviderTransformer: data.google_client_config.current is provided by provider.google or inherited equivalent
2021/02/17 06:23:14 [TRACE] ProviderTransformer: google_compute_address.default is provided by provider.google or inherited equivalent
2021/02/17 06:23:14 [TRACE] ProviderTransformer: exact match for provider.google serving data.google_container_engine_versions.default
2021/02/17 06:23:14 [DEBUG] ProviderTransformer: "data.google_container_engine_versions.default" (*terraform.NodeRefreshableDataResource) needs provider.google
2021/02/17 06:23:14 [TRACE] ProviderTransformer: exact match for provider.google serving google_compute_network.default
2021/02/17 06:23:14 [DEBUG] ProviderTransformer: "google_compute_network.default" (*terraform.NodeRefreshableManagedResource) needs provider.google
2021/02/17 06:23:14 [TRACE] ProviderTransformer: exact match for provider.google serving google_container_cluster.default
2021/02/17 06:23:14 [DEBUG] ProviderTransformer: "google_container_cluster.default" (*terraform.NodeRefreshableManagedResource) needs provider.google
2021/02/17 06:23:14 [TRACE] ProviderTransformer: exact match for provider.kubectl serving kubectl_manifest.test
2021/02/17 06:23:14 [DEBUG] ProviderTransformer: "kubectl_manifest.test" (*terraform.NodeRefreshableManagedResource) needs provider.kubectl
2021/02/17 06:23:14 [TRACE] ProviderTransformer: exact match for provider.google serving google_compute_subnetwork.default
2021/02/17 06:23:14 [DEBUG] ProviderTransformer: "google_compute_subnetwork.default" (*terraform.NodeRefreshableManagedResource) needs provider.google
2021/02/17 06:23:14 [TRACE] ProviderTransformer: exact match for provider.kubectl serving data.kubectl_filename_list.manifests
2021/02/17 06:23:14 [DEBUG] ProviderTransformer: "data.kubectl_filename_list.manifests" (*terraform.NodeRefreshableDataResource) needs provider.kubectl
2021/02/17 06:23:14 [TRACE] ProviderTransformer: exact match for provider.google serving data.google_client_config.current
2021/02/17 06:23:14 [DEBUG] ProviderTransformer: "data.google_client_config.current" (*terraform.NodeRefreshableDataResource) needs provider.google
2021/02/17 06:23:14 [TRACE] ProviderTransformer: exact match for provider.google serving google_compute_address.default
2021/02/17 06:23:14 [DEBUG] ProviderTransformer: "google_compute_address.default" (*terraform.NodeRefreshableManagedResource) needs provider.google
2021/02/17 06:23:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  data.google_client_config.current - *terraform.NodeRefreshableDataResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodeRefreshableDataResource
    provider.google - *terraform.NodeApplyableProvider
  data.kubectl_filename_list.manifests - *terraform.NodeRefreshableDataResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_network.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
  google_container_cluster.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
  kubectl_manifest.test - *terraform.NodeRefreshableManagedResource
    provider.kubectl - *terraform.NodeApplyableProvider
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/17 06:23:14 [DEBUG] pruning unused provider.kubernetes
2021/02/17 06:23:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  data.google_client_config.current - *terraform.NodeRefreshableDataResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodeRefreshableDataResource
    provider.google - *terraform.NodeApplyableProvider
  data.kubectl_filename_list.manifests - *terraform.NodeRefreshableDataResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_network.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
  google_container_cluster.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
  kubectl_manifest.test - *terraform.NodeRefreshableManagedResource
    provider.kubectl - *terraform.NodeApplyableProvider
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/17 06:23:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  data.google_client_config.current - *terraform.NodeRefreshableDataResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodeRefreshableDataResource
    provider.google - *terraform.NodeApplyableProvider
  data.kubectl_filename_list.manifests - *terraform.NodeRefreshableDataResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_network.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
  google_container_cluster.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
  kubectl_manifest.test - *terraform.NodeRefreshableManagedResource
    provider.kubectl - *terraform.NodeApplyableProvider
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/17 06:23:14 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.google
2021/02/17 06:23:14 [TRACE] AttachSchemaTransformer: attaching resource schema to google_compute_address.default
2021/02/17 06:23:14 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.kubectl
2021/02/17 06:23:14 [TRACE] AttachSchemaTransformer: attaching resource schema to data.google_container_engine_versions.default
2021/02/17 06:23:14 [TRACE] AttachSchemaTransformer: attaching resource schema to google_container_cluster.default
2021/02/17 06:23:14 [TRACE] AttachSchemaTransformer: attaching resource schema to kubectl_manifest.test
2021/02/17 06:23:14 [TRACE] AttachSchemaTransformer: attaching resource schema to google_compute_network.default
2021/02/17 06:23:14 [TRACE] AttachSchemaTransformer: attaching resource schema to data.kubectl_filename_list.manifests
2021/02/17 06:23:14 [TRACE] AttachSchemaTransformer: attaching resource schema to data.google_client_config.current
2021/02/17 06:23:14 [TRACE] AttachSchemaTransformer: attaching resource schema to google_compute_subnetwork.default
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "google_compute_address.default" references: [var.network_name var.region]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "output.cluster_name" references: [google_container_cluster.default]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "provider.google" references: [var.region]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "data.google_container_engine_versions.default" references: [var.location]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "output.subnetwork_name" references: [google_compute_subnetwork.default]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "provider.kubectl" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "google_compute_network.default" references: [var.network_name]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "google_container_cluster.default" references: [var.network_name google_compute_subnetwork.default google_compute_subnetwork.default data.google_container_engine_versions.default var.location]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "kubectl_manifest.test" references: [data.kubectl_filename_list.manifests data.kubectl_filename_list.manifests]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "var.network_name" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "output.cluster_region" references: [var.region]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "output.cluster_location" references: [google_container_cluster.default]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "google_compute_subnetwork.default" references: [var.region var.network_name google_compute_network.default]
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "data.kubectl_filename_list.manifests" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "data.google_client_config.current" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "var.region" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "var.location" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "output.network" references: [google_compute_subnetwork.default]
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  data.google_client_config.current - *terraform.NodeRefreshableDataResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodeRefreshableDataResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
  data.kubectl_filename_list.manifests - *terraform.NodeRefreshableDataResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_compute_network.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
  google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
    google_compute_network.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_container_cluster.default - *terraform.NodeRefreshableManagedResource
    data.google_container_engine_versions.default - *terraform.NodeRefreshableDataResource
    google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
    var.network_name - *terraform.NodeRootVariable
  kubectl_manifest.test - *terraform.NodeRefreshableManagedResource
    data.kubectl_filename_list.manifests - *terraform.NodeRefreshableDataResource
    provider.kubectl - *terraform.NodeApplyableProvider
  output.cluster_location - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodeRefreshableManagedResource
  output.cluster_name - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodeRefreshableManagedResource
  output.cluster_region - *terraform.NodeApplyableOutput
    var.region - *terraform.NodeRootVariable
  output.network - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
  output.subnetwork_name - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
  provider.google - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.kubectl - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/17 06:23:14 [TRACE] AttachDependenciesTransformer: google_compute_network.default depends on []
2021/02/17 06:23:14 [TRACE] AttachDependenciesTransformer: google_container_cluster.default depends on [google_compute_network.default google_compute_subnetwork.default]
2021/02/17 06:23:14 [TRACE] AttachDependenciesTransformer: kubectl_manifest.test depends on []
2021/02/17 06:23:14 [TRACE] AttachDependenciesTransformer: google_compute_subnetwork.default depends on [google_compute_network.default]
2021/02/17 06:23:14 [TRACE] AttachDependenciesTransformer: google_compute_address.default depends on []
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  data.google_client_config.current - *terraform.NodeRefreshableDataResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodeRefreshableDataResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
  data.kubectl_filename_list.manifests - *terraform.NodeRefreshableDataResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_compute_network.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
  google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
    google_compute_network.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_container_cluster.default - *terraform.NodeRefreshableManagedResource
    data.google_container_engine_versions.default - *terraform.NodeRefreshableDataResource
    google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
    var.network_name - *terraform.NodeRootVariable
  kubectl_manifest.test - *terraform.NodeRefreshableManagedResource
    data.kubectl_filename_list.manifests - *terraform.NodeRefreshableDataResource
    provider.kubectl - *terraform.NodeApplyableProvider
  output.cluster_location - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodeRefreshableManagedResource
  output.cluster_name - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodeRefreshableManagedResource
  output.cluster_region - *terraform.NodeApplyableOutput
    var.region - *terraform.NodeRootVariable
  output.network - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
  output.subnetwork_name - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
  provider.google - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.google (close) - *terraform.graphNodeCloseProvider
    data.google_client_config.current - *terraform.NodeRefreshableDataResource
    data.google_container_engine_versions.default - *terraform.NodeRefreshableDataResource
    google_compute_address.default - *terraform.NodeRefreshableManagedResource
    google_compute_network.default - *terraform.NodeRefreshableManagedResource
    google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
    google_container_cluster.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubectl (close) - *terraform.graphNodeCloseProvider
    data.kubectl_filename_list.manifests - *terraform.NodeRefreshableDataResource
    kubectl_manifest.test - *terraform.NodeRefreshableManagedResource
    provider.kubectl - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  data.google_client_config.current - *terraform.NodeRefreshableDataResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodeRefreshableDataResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
  data.kubectl_filename_list.manifests - *terraform.NodeRefreshableDataResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_compute_network.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
  google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
    google_compute_network.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_container_cluster.default - *terraform.NodeRefreshableManagedResource
    data.google_container_engine_versions.default - *terraform.NodeRefreshableDataResource
    google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
    var.network_name - *terraform.NodeRootVariable
  kubectl_manifest.test - *terraform.NodeRefreshableManagedResource
    data.kubectl_filename_list.manifests - *terraform.NodeRefreshableDataResource
    provider.kubectl - *terraform.NodeApplyableProvider
  output.cluster_location - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodeRefreshableManagedResource
  output.cluster_name - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodeRefreshableManagedResource
  output.cluster_region - *terraform.NodeApplyableOutput
    var.region - *terraform.NodeRootVariable
  output.network - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
  output.subnetwork_name - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
  provider.google - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.google (close) - *terraform.graphNodeCloseProvider
    data.google_client_config.current - *terraform.NodeRefreshableDataResource
    data.google_container_engine_versions.default - *terraform.NodeRefreshableDataResource
    google_compute_address.default - *terraform.NodeRefreshableManagedResource
    google_compute_network.default - *terraform.NodeRefreshableManagedResource
    google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
    google_container_cluster.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubectl (close) - *terraform.graphNodeCloseProvider
    data.kubectl_filename_list.manifests - *terraform.NodeRefreshableDataResource
    kubectl_manifest.test - *terraform.NodeRefreshableManagedResource
    provider.kubectl - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    output.cluster_location - *terraform.NodeApplyableOutput
    output.cluster_name - *terraform.NodeApplyableOutput
    output.cluster_region - *terraform.NodeApplyableOutput
    output.network - *terraform.NodeApplyableOutput
    output.subnetwork_name - *terraform.NodeApplyableOutput
    provider.google (close) - *terraform.graphNodeCloseProvider
    provider.kubectl (close) - *terraform.graphNodeCloseProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  data.google_client_config.current - *terraform.NodeRefreshableDataResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodeRefreshableDataResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
  data.kubectl_filename_list.manifests - *terraform.NodeRefreshableDataResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
  google_compute_network.default - *terraform.NodeRefreshableManagedResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
  google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
    google_compute_network.default - *terraform.NodeRefreshableManagedResource
  google_container_cluster.default - *terraform.NodeRefreshableManagedResource
    data.google_container_engine_versions.default - *terraform.NodeRefreshableDataResource
    google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
  kubectl_manifest.test - *terraform.NodeRefreshableManagedResource
    data.kubectl_filename_list.manifests - *terraform.NodeRefreshableDataResource
  output.cluster_location - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodeRefreshableManagedResource
  output.cluster_name - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodeRefreshableManagedResource
  output.cluster_region - *terraform.NodeApplyableOutput
    var.region - *terraform.NodeRootVariable
  output.network - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
  output.subnetwork_name - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResource
  provider.google - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.google (close) - *terraform.graphNodeCloseProvider
    data.google_client_config.current - *terraform.NodeRefreshableDataResource
    google_compute_address.default - *terraform.NodeRefreshableManagedResource
    google_container_cluster.default - *terraform.NodeRefreshableManagedResource
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubectl (close) - *terraform.graphNodeCloseProvider
    kubectl_manifest.test - *terraform.NodeRefreshableManagedResource
  root - terraform.graphNodeRoot
    output.cluster_location - *terraform.NodeApplyableOutput
    output.cluster_name - *terraform.NodeApplyableOutput
    output.cluster_region - *terraform.NodeApplyableOutput
    output.network - *terraform.NodeApplyableOutput
    output.subnetwork_name - *terraform.NodeApplyableOutput
    provider.google (close) - *terraform.graphNodeCloseProvider
    provider.kubectl (close) - *terraform.graphNodeCloseProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:14 [DEBUG] Starting graph walk: walkRefresh
2021/02/17 06:23:14 [TRACE] dag/walk: updating graph
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "var.location"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "provider.google"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "provider.kubectl (close)"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "var.network_name"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "google_compute_network.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "google_container_cluster.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "provider.google (close)"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "data.kubectl_filename_list.manifests"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "data.google_client_config.current"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "google_compute_address.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "output.network"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "root"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "output.cluster_name"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "output.subnetwork_name"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "output.cluster_location"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "var.region"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "google_compute_subnetwork.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "data.google_container_engine_versions.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "provider.kubectl"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "output.cluster_region"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "google_container_cluster.default" waiting on "data.google_container_engine_versions.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "output.network"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "data.google_client_config.current" waiting on "provider.google"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "output.cluster_location"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "output.subnetwork_name"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "provider.kubectl (close)" waiting on "kubectl_manifest.test"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "output.cluster_name"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "provider.google (close)" waiting on "google_compute_address.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "google_container_cluster.default" waiting on "google_compute_subnetwork.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "output.cluster_location" waiting on "google_container_cluster.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "google_compute_network.default" waiting on "var.network_name"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "data.google_container_engine_versions.default" waiting on "provider.google"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "google_compute_subnetwork.default" waiting on "google_compute_network.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "google_compute_address.default" waiting on "var.network_name"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "output.network" waiting on "google_compute_subnetwork.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "output.cluster_region"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "provider.google" waiting on "var.region"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "data.google_container_engine_versions.default" waiting on "var.location"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "google_compute_network.default" waiting on "provider.google"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "google_compute_address.default" waiting on "provider.google"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "provider.google (close)"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "data.kubectl_filename_list.manifests" waiting on "provider.kubectl"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "kubectl_manifest.test" waiting on "data.kubectl_filename_list.manifests"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "provider.google (close)" waiting on "google_container_cluster.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "output.cluster_name" waiting on "google_container_cluster.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "provider.google (close)" waiting on "data.google_client_config.current"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "output.cluster_region" waiting on "var.region"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "output.subnetwork_name" waiting on "google_compute_subnetwork.default"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "provider.kubectl (close)"
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "provider.kubectl (close)", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "provider.google (close)", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "output.cluster_location", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "google_compute_network.default", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "provider.google", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "data.kubectl_filename_list.manifests", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "kubectl_manifest.test", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "data.google_client_config.current", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "google_compute_address.default", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "output.network", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "output.cluster_name", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "output.cluster_region", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "output.subnetwork_name", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "google_container_cluster.default", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "data.google_container_engine_versions.default", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "google_compute_subnetwork.default", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "var.region"
2021/02/17 06:23:14 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2021/02/17 06:23:14 [TRACE] vertex "var.region": evaluating
2021/02/17 06:23:14 [TRACE] [walkRefresh] Entering eval tree: var.region
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] [walkRefresh] Exiting eval tree: var.region
2021/02/17 06:23:14 [TRACE] vertex "var.region": visit complete
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "provider.kubectl"
2021/02/17 06:23:14 [TRACE] vertex "provider.kubectl": starting visit (*terraform.NodeApplyableProvider)
2021/02/17 06:23:14 [TRACE] vertex "provider.kubectl": evaluating
2021/02/17 06:23:14 [TRACE] [walkRefresh] Entering eval tree: provider.kubectl
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021-02-17T06:23:14.615Z [INFO]  plugin: configuring client automatic mTLS
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "var.network_name"
2021/02/17 06:23:14 [TRACE] vertex "var.network_name": starting visit (*terraform.NodeRootVariable)
2021/02/17 06:23:14 [TRACE] vertex "var.network_name": evaluating
2021/02/17 06:23:14 [TRACE] [walkRefresh] Entering eval tree: var.network_name
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] [walkRefresh] Exiting eval tree: var.network_name
2021/02/17 06:23:14 [TRACE] vertex "var.network_name": visit complete
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "var.location"
2021/02/17 06:23:14 [TRACE] vertex "var.location": starting visit (*terraform.NodeRootVariable)
2021/02/17 06:23:14 [TRACE] vertex "var.location": evaluating
2021/02/17 06:23:14 [TRACE] [walkRefresh] Entering eval tree: var.location
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] [walkRefresh] Exiting eval tree: var.location
2021/02/17 06:23:14 [TRACE] vertex "var.location": visit complete
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "provider.google"
2021/02/17 06:23:14 [TRACE] vertex "provider.google": starting visit (*terraform.NodeApplyableProvider)
2021/02/17 06:23:14 [TRACE] vertex "provider.google": evaluating
2021/02/17 06:23:14 [TRACE] [walkRefresh] Entering eval tree: provider.google
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "output.cluster_region"
2021/02/17 06:23:14 [TRACE] vertex "output.cluster_region": starting visit (*terraform.NodeApplyableOutput)
2021/02/17 06:23:14 [TRACE] vertex "output.cluster_region": evaluating
2021/02/17 06:23:14 [TRACE] [walkRefresh] Entering eval tree: output.cluster_region
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/02/17 06:23:14 [TRACE] EvalWriteOutput: Saving value for output.cluster_region in state
2021/02/17 06:23:14 [TRACE] EvalWriteOutput: Saving Create change for output.cluster_region in changeset
2021/02/17 06:23:14 [TRACE] [walkRefresh] Exiting eval tree: output.cluster_region
2021/02/17 06:23:14 [TRACE] vertex "output.cluster_region": visit complete
2021-02-17T06:23:14.648Z [DEBUG] plugin: starting plugin: path=/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0 args=[/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0]
2021-02-17T06:23:14.648Z [DEBUG] plugin: plugin started: path=/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0 pid=69971
2021-02-17T06:23:14.648Z [DEBUG] plugin: waiting for RPC address: path=/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0
2021-02-17T06:23:14.696Z [INFO]  plugin.terraform-provider-kubectl_v1.10.0: configuring server automatic mTLS: timestamp=2021-02-17T06:23:14.696Z
2021-02-17T06:23:14.733Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: plugin address: network=unix address=/tmp/plugin044352353 timestamp=2021-02-17T06:23:14.732Z
2021-02-17T06:23:14.733Z [DEBUG] plugin: using plugin: version=5
2021/02/17 06:23:14 [TRACE] BuiltinEvalContext: Initialized "kubectl" provider for provider.kubectl
2021/02/17 06:23:14 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:14 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2021/02/17 06:23:14 [TRACE] buildProviderConfig for provider.kubectl: no configuration at all
2021/02/17 06:23:14 [TRACE] GRPCProvider: GetSchema
2021-02-17T06:23:14.733Z [INFO]  plugin: configuring client automatic mTLS
2021-02-17T06:23:14.780Z [DEBUG] plugin: starting plugin: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5 args=[/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5]
2021-02-17T06:23:14.781Z [DEBUG] plugin: plugin started: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5 pid=69980
2021-02-17T06:23:14.781Z [DEBUG] plugin: waiting for RPC address: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5
2021-02-17T06:23:14.810Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: configuring server automatic mTLS: timestamp=2021-02-17T06:23:14.810Z
2021-02-17T06:23:14.853Z [DEBUG] plugin.terraform-provider-google_v3.57.0_x5: plugin address: address=/tmp/plugin092735169 network=unix timestamp=2021-02-17T06:23:14.853Z
2021-02-17T06:23:14.853Z [DEBUG] plugin: using plugin: version=5
2021/02/17 06:23:14 [TRACE] BuiltinEvalContext: Initialized "google" provider for provider.google
2021/02/17 06:23:14 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:14 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2021/02/17 06:23:14 [TRACE] buildProviderConfig for provider.google: using explicit config only
2021/02/17 06:23:14 [TRACE] GRPCProvider: GetSchema
2021/02/17 06:23:14 [TRACE] GRPCProvider: Configure
2021-02-17T06:23:14.858Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [INFO] Successfully loaded config file (/home/codingdog2020/.kube/config; default context)
2021/02/17 06:23:14 [TRACE] [walkRefresh] Exiting eval tree: provider.kubectl
2021/02/17 06:23:14 [TRACE] vertex "provider.kubectl": visit complete
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "data.kubectl_filename_list.manifests"
2021/02/17 06:23:14 [TRACE] vertex "data.kubectl_filename_list.manifests": starting visit (*terraform.NodeRefreshableDataResource)
2021/02/17 06:23:14 [TRACE] vertex "data.kubectl_filename_list.manifests": expanding dynamic subgraph
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.kubectl_filename_list.manifests - *terraform.NodeRefreshableDataResourceInstance
  ------
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "data.kubectl_filename_list.manifests" references: []
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/17 06:23:14 [TRACE] vertex "data.kubectl_filename_list.manifests": entering dynamic subgraph
2021/02/17 06:23:14 [TRACE] dag/walk: updating graph
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "data.kubectl_filename_list.manifests"
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "data.kubectl_filename_list.manifests"
2021/02/17 06:23:14 [TRACE] vertex "data.kubectl_filename_list.manifests": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2021/02/17 06:23:14 [TRACE] vertex "data.kubectl_filename_list.manifests": evaluating
2021/02/17 06:23:14 [TRACE] [walkRefresh] Entering eval tree: data.kubectl_filename_list.manifests
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:14 [TRACE] EvalWriteState: removing state object for data.kubectl_filename_list.manifests
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalReadData
2021/02/17 06:23:14 [TRACE] EvalReadData: working on data.kubectl_filename_list.manifests
2021/02/17 06:23:14 [TRACE] Re-validating config for data.kubectl_filename_list.manifests
2021/02/17 06:23:14 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/02/17 06:23:14 [TRACE] EvalReadData: data.kubectl_filename_list.manifests configuration is complete, so reading from provider
2021/02/17 06:23:14 [TRACE] GRPCProvider: ReadDataSource
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:14 [TRACE] EvalWriteState: writing current state object for data.kubectl_filename_list.manifests
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2021/02/17 06:23:14 [TRACE] [walkRefresh] Exiting eval tree: data.kubectl_filename_list.manifests
2021/02/17 06:23:14 [TRACE] vertex "data.kubectl_filename_list.manifests": visit complete
2021/02/17 06:23:14 [TRACE] vertex "data.kubectl_filename_list.manifests": dynamic subgraph completed successfully
2021/02/17 06:23:14 [TRACE] vertex "data.kubectl_filename_list.manifests": visit complete
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "kubectl_manifest.test"
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test": starting visit (*terraform.NodeRefreshableManagedResource)
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test": expanding dynamic subgraph
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubectl_manifest.test[0] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[10] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[11] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[12] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[1] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[2] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[3] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[4] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[5] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[6] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[7] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[8] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[9] - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/17 06:23:14 [DEBUG] Resource instance state not found for node "kubectl_manifest.test[5]", instance kubectl_manifest.test[5]
2021/02/17 06:23:14 [DEBUG] Resource instance state not found for node "kubectl_manifest.test[0]", instance kubectl_manifest.test[0]
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[1]" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[2]" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[4]" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[6]" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[9]" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[11]" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[12]" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[0]" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[3]" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[5]" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[7]" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[8]" references: []
2021/02/17 06:23:14 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[10]" references: []
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/17 06:23:14 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/17 06:23:14 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  kubectl_manifest.test[0] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[10] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[11] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[12] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[1] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[2] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[3] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[4] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[5] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[6] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[7] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[8] - *terraform.NodeRefreshableManagedResourceInstance
  kubectl_manifest.test[9] - *terraform.NodeRefreshableManagedResourceInstance
  root - terraform.graphNodeRoot
    kubectl_manifest.test[0] - *terraform.NodeRefreshableManagedResourceInstance
    kubectl_manifest.test[10] - *terraform.NodeRefreshableManagedResourceInstance
    kubectl_manifest.test[11] - *terraform.NodeRefreshableManagedResourceInstance
    kubectl_manifest.test[12] - *terraform.NodeRefreshableManagedResourceInstance
    kubectl_manifest.test[1] - *terraform.NodeRefreshableManagedResourceInstance
    kubectl_manifest.test[2] - *terraform.NodeRefreshableManagedResourceInstance
    kubectl_manifest.test[3] - *terraform.NodeRefreshableManagedResourceInstance
    kubectl_manifest.test[4] - *terraform.NodeRefreshableManagedResourceInstance
    kubectl_manifest.test[5] - *terraform.NodeRefreshableManagedResourceInstance
    kubectl_manifest.test[6] - *terraform.NodeRefreshableManagedResourceInstance
    kubectl_manifest.test[7] - *terraform.NodeRefreshableManagedResourceInstance
    kubectl_manifest.test[8] - *terraform.NodeRefreshableManagedResourceInstance
    kubectl_manifest.test[9] - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test": entering dynamic subgraph
2021/02/17 06:23:14 [TRACE] dag/walk: updating graph
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[7]"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[11]"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[4]"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[0]"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[6]"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[1]"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[12]"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[2]"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "root"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[9]"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[3]"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[5]"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[8]"
2021/02/17 06:23:14 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[10]"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[4]"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[11]"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[6]"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[2]"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[3]"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[12]"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[9]"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[5]"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[7]"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[0]"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[10]"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[8]"
2021/02/17 06:23:14 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[1]"
2021/02/17 06:23:14 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "kubectl_manifest.test[12]"
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[12]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/02/17 06:23:14 [TRACE] NodeRefreshableManagedResourceInstance: kubectl_manifest.test[12] will be refreshed
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[12]": evaluating
2021/02/17 06:23:14 [TRACE] [walkRefresh] Entering eval tree: kubectl_manifest.test[12]
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:14 [TRACE] EvalReadState: reading state for kubectl_manifest.test[12]
2021/02/17 06:23:14 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[12] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:14 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "kubectl_manifest.test[4]"
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "kubectl_manifest.test[10]"
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[10]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "kubectl_manifest.test[9]"
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[9]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/02/17 06:23:14 [TRACE] NodeRefreshableManagedResourceInstance: kubectl_manifest.test[10] will be refreshed
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "kubectl_manifest.test[3]"
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "kubectl_manifest.test[6]"
2021/02/17 06:23:14 [TRACE] NodeRefreshableManagedResourceInstance: kubectl_manifest.test[9] will be refreshed
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[6]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[9]": evaluating
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "kubectl_manifest.test[5]"
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[3]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[5]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "kubectl_manifest.test[8]"
2021/02/17 06:23:14 [TRACE] NodeRefreshableManagedResourceInstance: kubectl_manifest.test[5] has no existing state to refresh
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[4]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/02/17 06:23:14 [TRACE] NodeRefreshableManagedResourceInstance: kubectl_manifest.test[4] will be refreshed
2021/02/17 06:23:14 [TRACE] NodeRefreshableManagedResourceInstance: kubectl_manifest.test[6] will be refreshed
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "kubectl_manifest.test[11]"
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[6]": evaluating
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[11]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/02/17 06:23:14 [TRACE] [walkRefresh] Entering eval tree: kubectl_manifest.test[6]
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[8]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] NodeRefreshableManagedResourceInstance: kubectl_manifest.test[8] will be refreshed
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "kubectl_manifest.test[1]"
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[1]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[5]": evaluating
2021/02/17 06:23:14 [TRACE] NodeRefreshableManagedResourceInstance: kubectl_manifest.test[1] will be refreshed
2021/02/17 06:23:14 [TRACE] NodeRefreshableManagedResourceInstance: kubectl_manifest.test[11] will be refreshed
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[1]": evaluating
2021/02/17 06:23:14 [TRACE] [walkRefresh] Entering eval tree: kubectl_manifest.test[9]
2021/02/17 06:23:14 [TRACE] [walkRefresh] Entering eval tree: kubectl_manifest.test[1]
2021/02/17 06:23:14 [TRACE] [walkRefresh] Entering eval tree: kubectl_manifest.test[5]
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:14 [TRACE] EvalReadState: reading state for kubectl_manifest.test[6]
2021/02/17 06:23:14 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[6] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:14 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[11]": evaluating
2021/02/17 06:23:14 [TRACE] [walkRefresh] Entering eval tree: kubectl_manifest.test[11]
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:14 [TRACE] EvalReadState: reading state for kubectl_manifest.test[11]
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "kubectl_manifest.test[0]"
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[0]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/02/17 06:23:14 [TRACE] NodeRefreshableManagedResourceInstance: kubectl_manifest.test[0] has no existing state to refresh
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[0]": evaluating
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[8]": evaluating
2021/02/17 06:23:14 [TRACE] [walkRefresh] Entering eval tree: kubectl_manifest.test[8]
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:14 [TRACE] EvalReadState: reading state for kubectl_manifest.test[8]
2021/02/17 06:23:14 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[8] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:14 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:14 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[11] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:14 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:14 [TRACE] EvalReadState: reading state for kubectl_manifest.test[9]
2021/02/17 06:23:14 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[9] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:14 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:14 [TRACE] EvalReadState: reading state for kubectl_manifest.test[5]
2021/02/17 06:23:14 [TRACE] EvalReadState: no state present for kubectl_manifest.test[5]
2021/02/17 06:23:14 [TRACE] NodeRefreshableManagedResourceInstance: kubectl_manifest.test[3] will be refreshed
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "kubectl_manifest.test[7]"
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[4]": evaluating
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[10]": evaluating
2021/02/17 06:23:14 [TRACE] dag/walk: visiting "kubectl_manifest.test[2]"
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] [walkRefresh] Entering eval tree: kubectl_manifest.test[0]
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/02/17 06:23:14 [TRACE] GRPCProvider: ReadResource
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/02/17 06:23:14 [TRACE] Re-validating config for "kubectl_manifest.test[5]"
2021/02/17 06:23:14 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[3]": evaluating
2021/02/17 06:23:14 [TRACE] [walkRefresh] Entering eval tree: kubectl_manifest.test[3]
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:14 [TRACE] EvalReadState: reading state for kubectl_manifest.test[3]
2021/02/17 06:23:14 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[3] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:14 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[7]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/02/17 06:23:14 [TRACE] NodeRefreshableManagedResourceInstance: kubectl_manifest.test[7] will be refreshed
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[7]": evaluating
2021/02/17 06:23:14 [TRACE] [walkRefresh] Entering eval tree: kubectl_manifest.test[7]
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/02/17 06:23:14 [TRACE] GRPCProvider: ReadResource
2021/02/17 06:23:14 [TRACE] [walkRefresh] Entering eval tree: kubectl_manifest.test[10]
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[2]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/02/17 06:23:14 [TRACE] NodeRefreshableManagedResourceInstance: kubectl_manifest.test[2] will be refreshed
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[2]": evaluating
2021/02/17 06:23:14 [TRACE] [walkRefresh] Entering eval tree: kubectl_manifest.test[2]
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:14 [TRACE] EvalReadState: reading state for kubectl_manifest.test[1]
2021/02/17 06:23:14 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[1] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:14 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:14 [TRACE] EvalReadState: reading state for kubectl_manifest.test[0]
2021/02/17 06:23:14 [TRACE] EvalReadState: no state present for kubectl_manifest.test[0]
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/02/17 06:23:14 [TRACE] [walkRefresh] Entering eval tree: kubectl_manifest.test[4]
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/02/17 06:23:14 [TRACE] GRPCProvider: ReadResource
2021/02/17 06:23:14 [TRACE] GRPCProvider: ReadResource
2021-02-17T06:23:14.878Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] redis-cluster-ip-service Unstructed YAML: map[apiVersion:v1 kind:Service metadata:map[name:redis-cluster-ip-service] spec:map[ports:[map[port:6379 targetPort:6379]] selector:map[component:redis] type:ClusterIP]]
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/02/17 06:23:14 [TRACE] GRPCProvider: PlanResourceChange
2021/02/17 06:23:14 [TRACE] GRPCProvider: ReadResource
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/02/17 06:23:14 [TRACE] GRPCProvider: ReadResource
2021-02-17T06:23:14.882Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] database-persistent-volume-claim Unstructed YAML: map[apiVersion:v1 kind:PersistentVolumeClaim metadata:map[name:database-persistent-volume-claim] spec:map[accessModes:[ReadWriteOnce] resources:map[requests:map[storage:2Gi]]]]
2021-02-17T06:23:14.884Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] server-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:server-deployment] spec:map[replicas:3 selector:map[matchLabels:map[component:server]] template:map[metadata:map[labels:map[component:server]] spec:map[containers:[map[env:[map[name:REDIS_HOST value:redis-cluster-ip-service] map[name:REDIS_PORT value:6379] map[name:PGUSER value:postgres] map[name:PGHOST value:postgres-cluster-ip-service] map[name:PGPORT value:5432] map[name:PGDATABASE value:postgres] map[name:PGPASSWORD valueFrom:map[secretKeyRef:map[key:PGPASSWORD name:pgpassword]]]] image:manbobo2002/multi-server name:server ports:[map[containerPort:5000]]]]]]]]
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/02/17 06:23:14 [TRACE] GRPCProvider: ReadResource
2021-02-17T06:23:14.891Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] default/database-persistent-volume-claim fetch from kubernetes
2021-02-17T06:23:14.892Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] default/server-deployment fetch from kubernetes
2021-02-17T06:23:14.892Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] redis-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:redis-deployment] spec:map[replicas:1 selector:map[matchLabels:map[component:redis]] template:map[metadata:map[labels:map[component:redis]] spec:map[containers:[map[image:redis name:redis]]]]]]
2021/02/17 06:23:14 [TRACE] Re-validating config for "kubectl_manifest.test[0]"
2021/02/17 06:23:14 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-02-17T06:23:14.895Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] letsencrypt-prod Unstructed YAML: map[apiVersion:cert-manager.io/v1alpha2 kind:ClusterIssuer metadata:map[name:letsencrypt-prod] spec:map[acme:map[email:youremail@email.com privateKeySecretRef:map[name:letsencrypt-prod] server:https://acme-v02.api.letsencrypt.org/directory solvers:[map[http01:map[ingress:map[class:nginx]]]]]]]
2021-02-17T06:23:14.895Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] letsencrypt-prod Unstructed YAML: map[apiVersion:cert-manager.io/v1alpha2 kind:ClusterIssuer metadata:map[name:letsencrypt-prod] spec:map[acme:map[email:youremail@email.com privateKeySecretRef:map[name:letsencrypt-prod] server:https://acme-v02.api.letsencrypt.org/directory solvers:[map[http01:map[ingress:map[class:nginx]]]]]]]
2021-02-17T06:23:14.897Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] postgres-cluster-ip-service Unstructed YAML: map[apiVersion:v1 kind:Service metadata:map[name:postgres-cluster-ip-service] spec:map[ports:[map[port:5432 targetPort:5432]] selector:map[component:postgres] type:ClusterIP]]
2021-02-17T06:23:14.897Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] worker-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:worker-deployment] spec:map[replicas:1 selector:map[matchLabels:map[component:worker]] template:map[metadata:map[labels:map[component:worker]] spec:map[containers:[map[env:[map[name:REDIS_HOST value:redis-cluster-ip-service] map[name:REDIS_PORT value:6379]] image:manbobo2002/multi-worker name:worker]]]]]]
2021/02/17 06:23:14 [WARN] Provider "registry.terraform.io/-/kubectl" produced an invalid plan for kubectl_manifest.test[5], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .validate_schema: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .force_new: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:14 [TRACE] EvalWriteState: recording 0 dependencies for kubectl_manifest.test[5]
2021/02/17 06:23:14 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[5]
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:23:14 [TRACE] EvalWriteDiff: recorded Create change for kubectl_manifest.test[5]
2021/02/17 06:23:14 [TRACE] [walkRefresh] Exiting eval tree: kubectl_manifest.test[5]
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[5]": visit complete
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:14 [TRACE] EvalReadState: reading state for kubectl_manifest.test[7]
2021/02/17 06:23:14 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[7] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:14 [TRACE] GRPCProvider: UpgradeResourceState
2021-02-17T06:23:14.901Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] default/worker-deployment fetch from kubernetes
2021-02-17T06:23:14.902Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] default/redis-cluster-ip-service fetch from kubernetes
2021-02-17T06:23:14.902Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] default/redis-deployment fetch from kubernetes
2021/02/17 06:23:14 [TRACE] GRPCProvider: PlanResourceChange
2021-02-17T06:23:14.903Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] default/postgres-cluster-ip-service fetch from kubernetes
2021-02-17T06:23:14.903Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] client-cluster-ip-service Unstructed YAML: map[apiVersion:v1 kind:Service metadata:map[name:client-cluster-ip-service] spec:map[ports:[map[port:3000 targetPort:3000]] selector:map[component:web] type:ClusterIP]]
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/02/17 06:23:14 [TRACE] GRPCProvider: ReadResource
2021-02-17T06:23:14.905Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] gcpcloudtest.ddns.net Unstructed YAML: map[apiVersion:cert-manager.io/v1alpha2 kind:Certificate metadata:map[name:gcpcloudtest.ddns.net] spec:map[acme:map[config:[map[domains:[gcpcloudtest.ddns.net] http01:map[ingressClass:nginx]]]] commonName:gcpcloudtest.ddns.net dnsNames:[gcpcloudtest.ddns.net] issuerRef:map[kind:ClusterIssuer name:letsencrypt-prod] secretName:gcpcloudtest.ddns.net]]
2021-02-17T06:23:14.905Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] gcpcloudtest.ddns.net Unstructed YAML: map[apiVersion:cert-manager.io/v1alpha2 kind:Certificate metadata:map[name:gcpcloudtest.ddns.net] spec:map[acme:map[config:[map[domains:[gcpcloudtest.ddns.net] http01:map[ingressClass:nginx]]]] commonName:gcpcloudtest.ddns.net dnsNames:[gcpcloudtest.ddns.net] issuerRef:map[kind:ClusterIssuer name:letsencrypt-prod] secretName:gcpcloudtest.ddns.net]]
2021-02-17T06:23:14.905Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] postgres-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:postgres-deployment] spec:map[replicas:1 selector:map[matchLabels:map[component:postgres]] template:map[metadata:map[labels:map[component:postgres]] spec:map[containers:[map[env:[map[name:POSTGRES_PASSWORD]] image:postgres name:postgres ports:[map[containerPort:5432]] volumeMounts:[map[mountPath:/var/lib/postgresql/data name:postgres-storage subPath:postgres]]]] volumes:[map[name:postgres-storage persistentVolumeClaim:map[claimName:database-persistent-volume-claim]]]]]]]
2021-02-17T06:23:14.906Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] default/client-cluster-ip-service fetch from kubernetes
2021/02/17 06:23:14 [WARN] Provider "registry.terraform.io/-/kubectl" produced an invalid plan for kubectl_manifest.test[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .force_new: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .validate_schema: planned value cty.True does not match config value cty.NullVal(cty.Bool)
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:14 [TRACE] EvalWriteState: recording 0 dependencies for kubectl_manifest.test[0]
2021/02/17 06:23:14 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[0]
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021-02-17T06:23:14.908Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] default/postgres-deployment fetch from kubernetes
2021/02/17 06:23:14 [TRACE] EvalWriteDiff: recorded Create change for kubectl_manifest.test[0]
2021/02/17 06:23:14 [TRACE] [walkRefresh] Exiting eval tree: kubectl_manifest.test[0]
2021/02/17 06:23:14 [TRACE] vertex "kubectl_manifest.test[0]": visit complete
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:14 [TRACE] EvalReadState: reading state for kubectl_manifest.test[10]
2021/02/17 06:23:14 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[10] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:14 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/02/17 06:23:14 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/02/17 06:23:14 [TRACE] GRPCProvider: ReadResource
2021-02-17T06:23:14.911Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] server-cluster-ip-service Unstructed YAML: map[apiVersion:v1 kind:Service metadata:map[name:server-cluster-ip-service] spec:map[ports:[map[port:5000 targetPort:5000]] selector:map[component:server] type:ClusterIP]]
2021-02-17T06:23:14.913Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:14 [DEBUG] default/server-cluster-ip-service fetch from kubernetes
2021/02/17 06:23:15 [TRACE] GRPCProvider: Configure
2021-02-17T06:23:15.031Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:15 [INFO] Authenticating using DefaultClient...: timestamp=2021-02-17T06:23:15.031Z
2021-02-17T06:23:15.031Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:15 [INFO]   -- Scopes: [https://www.googleapis.com/auth/compute https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-identity https://www.googleapis.com/auth/ndev.clouddns.readwrite https://www.googleapis.com/auth/devstorage.full_control https://www.googleapis.com/auth/userinfo.email]: timestamp=2021-02-17T06:23:15.031Z
2021/02/17 06:23:15 [TRACE] [walkRefresh] Exiting eval tree: provider.google
2021/02/17 06:23:15 [TRACE] vertex "provider.google": visit complete
2021/02/17 06:23:15 [TRACE] dag/walk: visiting "data.google_client_config.current"
2021/02/17 06:23:15 [TRACE] dag/walk: visiting "data.google_container_engine_versions.default"
2021/02/17 06:23:15 [TRACE] vertex "data.google_container_engine_versions.default": starting visit (*terraform.NodeRefreshableDataResource)
2021/02/17 06:23:15 [TRACE] vertex "data.google_container_engine_versions.default": expanding dynamic subgraph
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/17 06:23:15 [TRACE] EvalReadState: reading state for kubectl_manifest.test[2]
2021/02/17 06:23:15 [TRACE] dag/walk: visiting "google_compute_network.default"
2021/02/17 06:23:15 [TRACE] vertex "google_compute_network.default": starting visit (*terraform.NodeRefreshableManagedResource)
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.google_container_engine_versions.default - *terraform.NodeRefreshableDataResourceInstance
  ------
2021/02/17 06:23:15 [TRACE] vertex "google_compute_network.default": expanding dynamic subgraph
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/17 06:23:15 [TRACE] dag/walk: visiting "google_compute_address.default"
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/17 06:23:15 [TRACE] vertex "google_compute_address.default": starting visit (*terraform.NodeRefreshableManagedResource)
2021/02/17 06:23:15 [TRACE] vertex "google_compute_address.default": expanding dynamic subgraph
2021/02/17 06:23:15 [TRACE] vertex "data.google_client_config.current": starting visit (*terraform.NodeRefreshableDataResource)
2021/02/17 06:23:15 [TRACE] vertex "data.google_client_config.current": expanding dynamic subgraph
2021/02/17 06:23:15 [DEBUG] ReferenceTransformer: "data.google_container_engine_versions.default" references: []
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/17 06:23:15 [TRACE] vertex "data.google_container_engine_versions.default": entering dynamic subgraph
2021/02/17 06:23:15 [TRACE] dag/walk: updating graph
2021/02/17 06:23:15 [TRACE] dag/walk: added new vertex: "data.google_container_engine_versions.default"
2021/02/17 06:23:15 [TRACE] dag/walk: visiting "data.google_container_engine_versions.default"
2021/02/17 06:23:15 [TRACE] vertex "data.google_container_engine_versions.default": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2021/02/17 06:23:15 [TRACE] vertex "data.google_container_engine_versions.default": evaluating
2021/02/17 06:23:15 [TRACE] [walkRefresh] Entering eval tree: data.google_container_engine_versions.default
2021/02/17 06:23:15 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[2] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:15 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  google_compute_network.default - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/17 06:23:15 [DEBUG] ReferenceTransformer: "google_compute_network.default" references: []
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/17 06:23:15 [TRACE] vertex "google_compute_network.default": entering dynamic subgraph
2021/02/17 06:23:15 [TRACE] dag/walk: updating graph
2021/02/17 06:23:15 [TRACE] dag/walk: added new vertex: "google_compute_network.default"
2021/02/17 06:23:15 [TRACE] dag/walk: visiting "google_compute_network.default"
2021/02/17 06:23:15 [TRACE] vertex "google_compute_network.default": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/02/17 06:23:15 [TRACE] NodeRefreshableManagedResourceInstance: google_compute_network.default will be refreshed
2021/02/17 06:23:15 [TRACE] vertex "google_compute_network.default": evaluating
2021/02/17 06:23:15 [TRACE] [walkRefresh] Entering eval tree: google_compute_network.default
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  google_compute_address.default - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/17 06:23:15 [DEBUG] ReferenceTransformer: "google_compute_address.default" references: []
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/17 06:23:15 [TRACE] vertex "google_compute_address.default": entering dynamic subgraph
2021/02/17 06:23:15 [TRACE] dag/walk: updating graph
2021/02/17 06:23:15 [TRACE] dag/walk: added new vertex: "google_compute_address.default"
2021/02/17 06:23:15 [TRACE] dag/walk: visiting "google_compute_address.default"
2021/02/17 06:23:15 [TRACE] vertex "google_compute_address.default": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/02/17 06:23:15 [TRACE] NodeRefreshableManagedResourceInstance: google_compute_address.default will be refreshed
2021/02/17 06:23:15 [TRACE] vertex "google_compute_address.default": evaluating
2021/02/17 06:23:15 [TRACE] [walkRefresh] Entering eval tree: google_compute_address.default
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.google_client_config.current - *terraform.NodeRefreshableDataResourceInstance
  ------
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/17 06:23:15 [DEBUG] ReferenceTransformer: "data.google_client_config.current" references: []
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/17 06:23:15 [TRACE] vertex "data.google_client_config.current": entering dynamic subgraph
2021/02/17 06:23:15 [TRACE] dag/walk: updating graph
2021/02/17 06:23:15 [TRACE] dag/walk: added new vertex: "data.google_client_config.current"
2021/02/17 06:23:15 [TRACE] dag/walk: visiting "data.google_client_config.current"
2021/02/17 06:23:15 [TRACE] vertex "data.google_client_config.current": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2021/02/17 06:23:15 [TRACE] vertex "data.google_client_config.current": evaluating
2021/02/17 06:23:15 [TRACE] [walkRefresh] Entering eval tree: data.google_client_config.current
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/02/17 06:23:15 [TRACE] GRPCProvider: ReadResource
2021-02-17T06:23:15.043Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:15 [DEBUG] client-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:client-deployment] spec:map[replicas:3 selector:map[matchLabels:map[component:web]] template:map[metadata:map[labels:map[component:web]] spec:map[containers:[map[image:manbobo2002/multi-client name:client ports:[map[containerPort:3000]]]]]]]]
2021-02-17T06:23:15.045Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:15 [DEBUG] default/client-deployment fetch from kubernetes
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:15 [TRACE] EvalWriteState: recording 0 dependencies for kubectl_manifest.test[7]
2021/02/17 06:23:15 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[7]
2021/02/17 06:23:15 [TRACE] [walkRefresh] Exiting eval tree: kubectl_manifest.test[7]
2021/02/17 06:23:15 [TRACE] vertex "kubectl_manifest.test[7]": visit complete
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:15 [TRACE] EvalReadState: reading state for kubectl_manifest.test[4]
2021/02/17 06:23:15 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[4] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:15 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:15 [TRACE] EvalWriteState: recording 0 dependencies for kubectl_manifest.test[1]
2021/02/17 06:23:15 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[1]
2021/02/17 06:23:15 [TRACE] [walkRefresh] Exiting eval tree: kubectl_manifest.test[1]
2021/02/17 06:23:15 [TRACE] vertex "kubectl_manifest.test[1]": visit complete
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:15 [TRACE] EvalWriteState: removing state object for data.google_container_engine_versions.default
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalReadData
2021/02/17 06:23:15 [TRACE] EvalReadData: working on data.google_container_engine_versions.default
2021/02/17 06:23:15 [TRACE] Re-validating config for data.google_container_engine_versions.default
2021/02/17 06:23:15 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/02/17 06:23:15 [TRACE] GRPCProvider: ReadResource
2021/02/17 06:23:15 [TRACE] EvalReadData: data.google_container_engine_versions.default configuration is complete, so reading from provider
2021/02/17 06:23:15 [TRACE] GRPCProvider: ReadDataSource
2021-02-17T06:23:15.302Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:15 [DEBUG] ingress-service Unstructed YAML: map[apiVersion:networking.k8s.io/v1beta1 kind:Ingress metadata:map[annotations:map[cert-manager.io/cluster-issuer:letsencrypt-prod kubernetes.io/ingress.class:nginx nginx.ingress.kubernetes.io/rewrite-target:/$1 nginx.ingress.kubernetes.io/use-regex:true] name:ingress-service] spec:map[rules:[map[http:map[paths:[map[backend:map[serviceName:client-cluster-ip-service servicePort:3000] path:/?(.*)] map[backend:map[serviceName:server-cluster-ip-service servicePort:5000] path:/api/?(.*)]]]]] tls:[map[hosts:[cloudtest.ddns.net] secretName:cloudtest-ddns-net]]]]
2021-02-17T06:23:15.302Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:15 [INFO] Instantiating GKE Beta client for path https://container.googleapis.com/: timestamp=2021-02-17T06:23:15.302Z
2021-02-17T06:23:15.303Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:15 [DEBUG] Retry Transport: starting RoundTrip retry loop: timestamp=2021-02-17T06:23:15.302Z
2021-02-17T06:23:15.303Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:15 [DEBUG] Retry Transport: request attempt 0: timestamp=2021-02-17T06:23:15.302Z
2021-02-17T06:23:15.305Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:15 [DEBUG] default/ingress-service fetch from kubernetes
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:15 [TRACE] EvalWriteState: recording 0 dependencies for kubectl_manifest.test[6]
2021/02/17 06:23:15 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[6]
2021/02/17 06:23:15 [TRACE] [walkRefresh] Exiting eval tree: kubectl_manifest.test[6]
2021/02/17 06:23:15 [TRACE] vertex "kubectl_manifest.test[6]": visit complete
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:15 [TRACE] EvalReadState: reading state for google_compute_network.default
2021/02/17 06:23:15 [TRACE] UpgradeResourceState: schema version of google_compute_network.default is still 0; calling provider "registry.terraform.io/-/google" for any other minor fixups
2021/02/17 06:23:15 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:15 [TRACE] EvalWriteState: recording 0 dependencies for kubectl_manifest.test[2]
2021/02/17 06:23:15 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[2]
2021/02/17 06:23:15 [TRACE] [walkRefresh] Exiting eval tree: kubectl_manifest.test[2]
2021/02/17 06:23:15 [TRACE] vertex "kubectl_manifest.test[2]": visit complete
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:15 [TRACE] EvalReadState: reading state for google_compute_address.default
2021/02/17 06:23:15 [TRACE] UpgradeResourceState: schema version of google_compute_address.default is still 0; calling provider "registry.terraform.io/-/google" for any other minor fixups
2021/02/17 06:23:15 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/02/17 06:23:15 [TRACE] GRPCProvider: ReadResource
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/02/17 06:23:15 [TRACE] GRPCProvider: ReadResource
2021-02-17T06:23:15.385Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:15 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-17T06:23:15.385Z
2021-02-17T06:23:15.386Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:15 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-17T06:23:15.385Z
2021-02-17T06:23:15.386Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:15 [DEBUG] Retry Transport: starting RoundTrip retry loop: timestamp=2021-02-17T06:23:15.385Z
2021-02-17T06:23:15.386Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:15 [DEBUG] Retry Transport: request attempt 0: timestamp=2021-02-17T06:23:15.385Z
2021-02-17T06:23:15.386Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:15 [DEBUG] Retry Transport: starting RoundTrip retry loop: timestamp=2021-02-17T06:23:15.385Z
2021-02-17T06:23:15.386Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:15 [DEBUG] Retry Transport: request attempt 0: timestamp=2021-02-17T06:23:15.385Z
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:15 [TRACE] EvalWriteState: recording 0 dependencies for kubectl_manifest.test[11]
2021/02/17 06:23:15 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[11]
2021/02/17 06:23:15 [TRACE] [walkRefresh] Exiting eval tree: kubectl_manifest.test[11]
2021/02/17 06:23:15 [TRACE] vertex "kubectl_manifest.test[11]": visit complete
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:15 [TRACE] EvalWriteState: removing state object for data.google_client_config.current
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalReadData
2021/02/17 06:23:15 [TRACE] EvalReadData: working on data.google_client_config.current
2021/02/17 06:23:15 [TRACE] Re-validating config for data.google_client_config.current
2021/02/17 06:23:15 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:15 [TRACE] EvalWriteState: recording 0 dependencies for kubectl_manifest.test[9]
2021/02/17 06:23:15 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[9]
2021/02/17 06:23:15 [TRACE] [walkRefresh] Exiting eval tree: kubectl_manifest.test[9]
2021/02/17 06:23:15 [TRACE] vertex "kubectl_manifest.test[9]": visit complete
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:15 [TRACE] EvalWriteState: recording 0 dependencies for kubectl_manifest.test[8]
2021/02/17 06:23:15 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[8]
2021/02/17 06:23:15 [TRACE] [walkRefresh] Exiting eval tree: kubectl_manifest.test[8]
2021/02/17 06:23:15 [TRACE] vertex "kubectl_manifest.test[8]": visit complete
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:15 [TRACE] EvalWriteState: recording 0 dependencies for kubectl_manifest.test[3]
2021/02/17 06:23:15 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[3]
2021/02/17 06:23:15 [TRACE] [walkRefresh] Exiting eval tree: kubectl_manifest.test[3]
2021/02/17 06:23:15 [TRACE] vertex "kubectl_manifest.test[3]": visit complete
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:15 [TRACE] EvalWriteState: recording 0 dependencies for kubectl_manifest.test[12]
2021/02/17 06:23:15 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[12]
2021/02/17 06:23:15 [TRACE] [walkRefresh] Exiting eval tree: kubectl_manifest.test[12]
2021/02/17 06:23:15 [TRACE] vertex "kubectl_manifest.test[12]": visit complete
2021/02/17 06:23:15 [TRACE] EvalReadData: data.google_client_config.current configuration is complete, so reading from provider
2021/02/17 06:23:15 [TRACE] GRPCProvider: ReadDataSource
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:15 [TRACE] EvalWriteState: writing current state object for data.google_client_config.current
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2021/02/17 06:23:15 [TRACE] [walkRefresh] Exiting eval tree: data.google_client_config.current
2021/02/17 06:23:15 [TRACE] vertex "data.google_client_config.current": visit complete
2021/02/17 06:23:15 [TRACE] vertex "data.google_client_config.current": dynamic subgraph completed successfully
2021/02/17 06:23:15 [TRACE] vertex "data.google_client_config.current": visit complete
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:15 [TRACE] EvalWriteState: recording 0 dependencies for kubectl_manifest.test[4]
2021/02/17 06:23:15 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[4]
2021/02/17 06:23:15 [TRACE] [walkRefresh] Exiting eval tree: kubectl_manifest.test[4]
2021/02/17 06:23:15 [TRACE] vertex "kubectl_manifest.test[4]": visit complete
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:15 [TRACE] EvalWriteState: recording 0 dependencies for kubectl_manifest.test[10]
2021/02/17 06:23:15 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[10]
2021/02/17 06:23:15 [TRACE] [walkRefresh] Exiting eval tree: kubectl_manifest.test[10]
2021/02/17 06:23:15 [TRACE] vertex "kubectl_manifest.test[10]": visit complete
2021/02/17 06:23:15 [TRACE] dag/walk: visiting "root"
2021/02/17 06:23:15 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/02/17 06:23:15 [TRACE] vertex "root": visit complete
2021/02/17 06:23:15 [TRACE] vertex "kubectl_manifest.test": dynamic subgraph completed successfully
2021/02/17 06:23:15 [TRACE] vertex "kubectl_manifest.test": visit complete
2021/02/17 06:23:15 [TRACE] dag/walk: visiting "provider.kubectl (close)"
2021/02/17 06:23:15 [TRACE] vertex "provider.kubectl (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/17 06:23:15 [TRACE] vertex "provider.kubectl (close)": evaluating
2021/02/17 06:23:15 [TRACE] [walkRefresh] Entering eval tree: provider.kubectl (close)
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2021/02/17 06:23:15 [TRACE] GRPCProvider: Close
2021-02-17T06:23:15.505Z [DEBUG] plugin: plugin process exited: path=/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0 pid=69971
2021-02-17T06:23:15.505Z [DEBUG] plugin: plugin exited
2021/02/17 06:23:15 [TRACE] [walkRefresh] Exiting eval tree: provider.kubectl (close)
2021/02/17 06:23:15 [TRACE] vertex "provider.kubectl (close)": visit complete
2021-02-17T06:23:15.521Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:15 [DEBUG] Retry Transport: Stopping retries, last request was successful: timestamp=2021-02-17T06:23:15.521Z
2021-02-17T06:23:15.522Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:15 [DEBUG] Retry Transport: Returning after 1 attempts: timestamp=2021-02-17T06:23:15.521Z
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:15 [TRACE] EvalWriteState: writing current state object for data.google_container_engine_versions.default
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2021/02/17 06:23:15 [TRACE] [walkRefresh] Exiting eval tree: data.google_container_engine_versions.default
2021/02/17 06:23:15 [TRACE] vertex "data.google_container_engine_versions.default": visit complete
2021/02/17 06:23:15 [TRACE] vertex "data.google_container_engine_versions.default": dynamic subgraph completed successfully
2021/02/17 06:23:15 [TRACE] vertex "data.google_container_engine_versions.default": visit complete
2021-02-17T06:23:15.671Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:15 [DEBUG] Retry Transport: Stopping retries, last request was successful: timestamp=2021-02-17T06:23:15.671Z
2021-02-17T06:23:15.671Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:15 [DEBUG] Retry Transport: Returning after 1 attempts: timestamp=2021-02-17T06:23:15.671Z
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:15 [TRACE] EvalWriteState: recording 0 dependencies for google_compute_network.default
2021/02/17 06:23:15 [TRACE] EvalWriteState: writing current state object for google_compute_network.default
2021/02/17 06:23:15 [TRACE] [walkRefresh] Exiting eval tree: google_compute_network.default
2021/02/17 06:23:15 [TRACE] vertex "google_compute_network.default": visit complete
2021/02/17 06:23:15 [TRACE] vertex "google_compute_network.default": dynamic subgraph completed successfully
2021/02/17 06:23:15 [TRACE] vertex "google_compute_network.default": visit complete
2021/02/17 06:23:15 [TRACE] dag/walk: visiting "google_compute_subnetwork.default"
2021/02/17 06:23:15 [TRACE] vertex "google_compute_subnetwork.default": starting visit (*terraform.NodeRefreshableManagedResource)
2021/02/17 06:23:15 [TRACE] vertex "google_compute_subnetwork.default": expanding dynamic subgraph
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  google_compute_subnetwork.default - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/17 06:23:15 [DEBUG] ReferenceTransformer: "google_compute_subnetwork.default" references: []
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/17 06:23:15 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/17 06:23:15 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/17 06:23:15 [TRACE] vertex "google_compute_subnetwork.default": entering dynamic subgraph
2021/02/17 06:23:15 [TRACE] dag/walk: updating graph
2021/02/17 06:23:15 [TRACE] dag/walk: added new vertex: "google_compute_subnetwork.default"
2021/02/17 06:23:15 [TRACE] dag/walk: visiting "google_compute_subnetwork.default"
2021/02/17 06:23:15 [TRACE] vertex "google_compute_subnetwork.default": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/02/17 06:23:15 [TRACE] NodeRefreshableManagedResourceInstance: google_compute_subnetwork.default will be refreshed
2021/02/17 06:23:15 [TRACE] vertex "google_compute_subnetwork.default": evaluating
2021/02/17 06:23:15 [TRACE] [walkRefresh] Entering eval tree: google_compute_subnetwork.default
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:15 [TRACE] EvalReadState: reading state for google_compute_subnetwork.default
2021/02/17 06:23:15 [TRACE] UpgradeResourceState: schema version of google_compute_subnetwork.default is still 0; calling provider "registry.terraform.io/-/google" for any other minor fixups
2021/02/17 06:23:15 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/02/17 06:23:15 [TRACE] GRPCProvider: ReadResource
2021-02-17T06:23:15.675Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:15 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-17T06:23:15.675Z
2021-02-17T06:23:15.676Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:15 [DEBUG] Retry Transport: starting RoundTrip retry loop: timestamp=2021-02-17T06:23:15.676Z
2021-02-17T06:23:15.676Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:15 [DEBUG] Retry Transport: request attempt 0: timestamp=2021-02-17T06:23:15.676Z
2021-02-17T06:23:15.715Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:15 [DEBUG] Retry Transport: Stopping retries, last request was successful: timestamp=2021-02-17T06:23:15.715Z
2021-02-17T06:23:15.715Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:15 [DEBUG] Retry Transport: Returning after 1 attempts: timestamp=2021-02-17T06:23:15.715Z
2021/02/17 06:23:15 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:15 [TRACE] EvalWriteState: recording 0 dependencies for google_compute_address.default
2021/02/17 06:23:15 [TRACE] EvalWriteState: writing current state object for google_compute_address.default
2021/02/17 06:23:15 [TRACE] [walkRefresh] Exiting eval tree: google_compute_address.default
2021/02/17 06:23:15 [TRACE] vertex "google_compute_address.default": visit complete
2021/02/17 06:23:15 [TRACE] vertex "google_compute_address.default": dynamic subgraph completed successfully
2021/02/17 06:23:15 [TRACE] vertex "google_compute_address.default": visit complete
2021-02-17T06:23:16.044Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:16 [DEBUG] Retry Transport: Stopping retries, last request was successful: timestamp=2021-02-17T06:23:16.044Z
2021-02-17T06:23:16.044Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:16 [DEBUG] Retry Transport: Returning after 1 attempts: timestamp=2021-02-17T06:23:16.044Z
2021/02/17 06:23:16 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:16 [TRACE] EvalWriteState: recording 1 dependencies for google_compute_subnetwork.default
2021/02/17 06:23:16 [TRACE] EvalWriteState: writing current state object for google_compute_subnetwork.default
2021/02/17 06:23:16 [TRACE] [walkRefresh] Exiting eval tree: google_compute_subnetwork.default
2021/02/17 06:23:16 [TRACE] vertex "google_compute_subnetwork.default": visit complete
2021/02/17 06:23:16 [TRACE] vertex "google_compute_subnetwork.default": dynamic subgraph completed successfully
2021/02/17 06:23:16 [TRACE] vertex "google_compute_subnetwork.default": visit complete
2021/02/17 06:23:16 [TRACE] dag/walk: visiting "output.network"
2021/02/17 06:23:16 [TRACE] vertex "output.network": starting visit (*terraform.NodeApplyableOutput)
2021/02/17 06:23:16 [TRACE] vertex "output.network": evaluating
2021/02/17 06:23:16 [TRACE] [walkRefresh] Entering eval tree: output.network
2021/02/17 06:23:16 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:16 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:16 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/02/17 06:23:16 [TRACE] EvalWriteOutput: Saving value for output.network in state
2021/02/17 06:23:16 [TRACE] EvalWriteOutput: Saving Create change for output.network in changeset
2021/02/17 06:23:16 [TRACE] [walkRefresh] Exiting eval tree: output.network
2021/02/17 06:23:16 [TRACE] vertex "output.network": visit complete
2021/02/17 06:23:16 [TRACE] dag/walk: visiting "google_container_cluster.default"
2021/02/17 06:23:16 [TRACE] vertex "google_container_cluster.default": starting visit (*terraform.NodeRefreshableManagedResource)
2021/02/17 06:23:16 [TRACE] vertex "google_container_cluster.default": expanding dynamic subgraph
2021/02/17 06:23:16 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/17 06:23:16 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  google_container_cluster.default - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/02/17 06:23:16 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/02/17 06:23:16 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/02/17 06:23:16 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/17 06:23:16 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/17 06:23:16 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/17 06:23:16 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/17 06:23:16 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/17 06:23:16 [TRACE] dag/walk: visiting "output.subnetwork_name"
2021/02/17 06:23:16 [TRACE] vertex "output.subnetwork_name": starting visit (*terraform.NodeApplyableOutput)
2021/02/17 06:23:16 [TRACE] vertex "output.subnetwork_name": evaluating
2021/02/17 06:23:16 [TRACE] [walkRefresh] Entering eval tree: output.subnetwork_name
2021/02/17 06:23:16 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:16 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:16 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/02/17 06:23:16 [DEBUG] ReferenceTransformer: "google_container_cluster.default" references: []
2021/02/17 06:23:16 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/17 06:23:16 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/17 06:23:16 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/17 06:23:16 [TRACE] vertex "google_container_cluster.default": entering dynamic subgraph
2021/02/17 06:23:16 [TRACE] dag/walk: updating graph
2021/02/17 06:23:16 [TRACE] dag/walk: added new vertex: "google_container_cluster.default"
2021/02/17 06:23:16 [TRACE] dag/walk: visiting "google_container_cluster.default"
2021/02/17 06:23:16 [TRACE] vertex "google_container_cluster.default": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/02/17 06:23:16 [TRACE] NodeRefreshableManagedResourceInstance: google_container_cluster.default will be refreshed
2021/02/17 06:23:16 [TRACE] vertex "google_container_cluster.default": evaluating
2021/02/17 06:23:16 [TRACE] [walkRefresh] Entering eval tree: google_container_cluster.default
2021/02/17 06:23:16 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:16 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:16 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:16 [TRACE] EvalReadState: reading state for google_container_cluster.default
2021/02/17 06:23:16 [TRACE] UpgradeResourceState: schema version of google_container_cluster.default is still 1; calling provider "registry.terraform.io/-/google" for any other minor fixups
2021/02/17 06:23:16 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:16 [TRACE] EvalWriteOutput: Saving value for output.subnetwork_name in state
2021/02/17 06:23:16 [TRACE] EvalWriteOutput: Saving Create change for output.subnetwork_name in changeset
2021/02/17 06:23:16 [TRACE] [walkRefresh] Exiting eval tree: output.subnetwork_name
2021/02/17 06:23:16 [TRACE] vertex "output.subnetwork_name": visit complete
2021/02/17 06:23:16 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/02/17 06:23:16 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/02/17 06:23:16 [TRACE] GRPCProvider: ReadResource
2021-02-17T06:23:16.062Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:16 [INFO] Instantiating GKE Beta client for path https://container.googleapis.com/: timestamp=2021-02-17T06:23:16.061Z
2021-02-17T06:23:16.062Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:16 [DEBUG] Retry Transport: starting RoundTrip retry loop: timestamp=2021-02-17T06:23:16.062Z
2021-02-17T06:23:16.062Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:16 [DEBUG] Retry Transport: request attempt 0: timestamp=2021-02-17T06:23:16.062Z
2021-02-17T06:23:16.231Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:16 [DEBUG] Retry Transport: Stopping retries, last request was successful: timestamp=2021-02-17T06:23:16.231Z
2021-02-17T06:23:16.231Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:16 [DEBUG] Retry Transport: Returning after 1 attempts: timestamp=2021-02-17T06:23:16.231Z
2021-02-17T06:23:16.232Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:16 [INFO] Instantiating GCE Beta client for path https://www.googleapis.com/compute/beta/projects/: timestamp=2021-02-17T06:23:16.232Z
2021-02-17T06:23:16.233Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:16 [DEBUG] Retry Transport: starting RoundTrip retry loop: timestamp=2021-02-17T06:23:16.233Z
2021-02-17T06:23:16.233Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:16 [DEBUG] Retry Transport: request attempt 0: timestamp=2021-02-17T06:23:16.233Z
2021-02-17T06:23:17.176Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:17 [DEBUG] Retry Transport: Stopping retries, last request was successful: timestamp=2021-02-17T06:23:17.176Z
2021-02-17T06:23:17.176Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:17 [DEBUG] Retry Transport: Returning after 1 attempts: timestamp=2021-02-17T06:23:17.176Z
2021-02-17T06:23:17.177Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:17 [INFO] Instantiating GCE client for path https://compute.googleapis.com/compute/v1/projects/: timestamp=2021-02-17T06:23:17.176Z
2021-02-17T06:23:17.177Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:17 [DEBUG] Retry Transport: starting RoundTrip retry loop: timestamp=2021-02-17T06:23:17.177Z
2021-02-17T06:23:17.177Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:17 [DEBUG] Retry Transport: request attempt 0: timestamp=2021-02-17T06:23:17.177Z
2021-02-17T06:23:18.090Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:18 [DEBUG] Retry Transport: Stopping retries, last request was successful: timestamp=2021-02-17T06:23:18.090Z
2021-02-17T06:23:18.090Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:18 [DEBUG] Retry Transport: Returning after 1 attempts: timestamp=2021-02-17T06:23:18.090Z
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:18 [TRACE] EvalWriteState: recording 2 dependencies for google_container_cluster.default
2021/02/17 06:23:18 [TRACE] EvalWriteState: writing current state object for google_container_cluster.default
2021/02/17 06:23:18 [TRACE] [walkRefresh] Exiting eval tree: google_container_cluster.default
2021/02/17 06:23:18 [TRACE] vertex "google_container_cluster.default": visit complete
2021/02/17 06:23:18 [TRACE] vertex "google_container_cluster.default": dynamic subgraph completed successfully
2021/02/17 06:23:18 [TRACE] vertex "google_container_cluster.default": visit complete
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "output.cluster_location"
2021/02/17 06:23:18 [TRACE] vertex "output.cluster_location": starting visit (*terraform.NodeApplyableOutput)
2021/02/17 06:23:18 [TRACE] vertex "output.cluster_location": evaluating
2021/02/17 06:23:18 [TRACE] [walkRefresh] Entering eval tree: output.cluster_location
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "output.cluster_name"
2021/02/17 06:23:18 [TRACE] vertex "output.cluster_name": starting visit (*terraform.NodeApplyableOutput)
2021/02/17 06:23:18 [TRACE] vertex "output.cluster_name": evaluating
2021/02/17 06:23:18 [TRACE] [walkRefresh] Entering eval tree: output.cluster_name
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "provider.google (close)"
2021/02/17 06:23:18 [TRACE] vertex "provider.google (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/17 06:23:18 [TRACE] vertex "provider.google (close)": evaluating
2021/02/17 06:23:18 [TRACE] [walkRefresh] Entering eval tree: provider.google (close)
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2021/02/17 06:23:18 [TRACE] GRPCProvider: Close
2021/02/17 06:23:18 [TRACE] EvalWriteOutput: Saving value for output.cluster_name in state
2021/02/17 06:23:18 [TRACE] EvalWriteOutput: Saving Create change for output.cluster_name in changeset
2021/02/17 06:23:18 [TRACE] [walkRefresh] Exiting eval tree: output.cluster_name
2021/02/17 06:23:18 [TRACE] vertex "output.cluster_name": visit complete
2021/02/17 06:23:18 [TRACE] EvalWriteOutput: Saving value for output.cluster_location in state
2021/02/17 06:23:18 [TRACE] EvalWriteOutput: Saving Create change for output.cluster_location in changeset
2021/02/17 06:23:18 [TRACE] [walkRefresh] Exiting eval tree: output.cluster_location
2021/02/17 06:23:18 [TRACE] vertex "output.cluster_location": visit complete
2021-02-17T06:23:18.101Z [DEBUG] plugin: plugin process exited: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5 pid=69980
2021-02-17T06:23:18.102Z [DEBUG] plugin: plugin exited
2021/02/17 06:23:18 [TRACE] [walkRefresh] Exiting eval tree: provider.google (close)
2021/02/17 06:23:18 [TRACE] vertex "provider.google (close)": visit complete
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "root"
2021/02/17 06:23:18 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/02/17 06:23:18 [TRACE] vertex "root": visit complete
2021/02/17 06:23:18 [INFO] backend/local: apply calling Plan
2021/02/17 06:23:18 [INFO] terraform: building graph: GraphTypePlan
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/17 06:23:18 [TRACE] ConfigTransformer: Starting for path: 
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  data.google_client_config.current - *terraform.NodePlannableResource
  data.google_container_engine_versions.default - *terraform.NodePlannableResource
  data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
  google_compute_address.default - *terraform.NodePlannableResource
  google_compute_network.default - *terraform.NodePlannableResource
  google_compute_subnetwork.default - *terraform.NodePlannableResource
  google_container_cluster.default - *terraform.NodePlannableResource
  kubectl_manifest.test - *terraform.NodePlannableResource
  ------
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  data.google_client_config.current - *terraform.NodePlannableResource
  data.google_container_engine_versions.default - *terraform.NodePlannableResource
  data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
  google_compute_address.default - *terraform.NodePlannableResource
  google_compute_network.default - *terraform.NodePlannableResource
  google_compute_subnetwork.default - *terraform.NodePlannableResource
  google_container_cluster.default - *terraform.NodePlannableResource
  kubectl_manifest.test - *terraform.NodePlannableResource
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  ------
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/17 06:23:18 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/17 06:23:18 [TRACE] AttachResourceConfigTransformer: attaching to "kubectl_manifest.test" (*terraform.NodePlannableResource) config from k8s.tf:19,1-35
2021/02/17 06:23:18 [TRACE] AttachResourceConfigTransformer: attaching to "google_compute_subnetwork.default" (*terraform.NodePlannableResource) config from main.tf:10,1-47
2021/02/17 06:23:18 [TRACE] AttachResourceConfigTransformer: attaching to "data.google_container_engine_versions.default" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:21, Column:1, Byte:501}, End:hcl.Pos{Line:21, Column:50, Byte:550}}
2021/02/17 06:23:18 [TRACE] AttachResourceConfigTransformer: attaching to "data.google_client_config.current" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:18, Column:1, Byte:458}, End:hcl.Pos{Line:18, Column:38, Byte:495}}
2021/02/17 06:23:18 [TRACE] AttachResourceConfigTransformer: attaching to "google_compute_network.default" (*terraform.NodePlannableResource) config from main.tf:5,1-44
2021/02/17 06:23:18 [TRACE] AttachResourceConfigTransformer: attaching to "google_container_cluster.default" (*terraform.NodePlannableResource) config from main.tf:25,1-46
2021/02/17 06:23:18 [TRACE] AttachResourceConfigTransformer: attaching to "google_compute_address.default" (*terraform.NodePlannableResource) config from k8s.tf:10,1-44
2021/02/17 06:23:18 [TRACE] AttachResourceConfigTransformer: attaching to "data.kubectl_filename_list.manifests" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"k8s.tf", Start:hcl.Pos{Line:15, Column:1, Byte:569}, End:hcl.Pos{Line:15, Column:41, Byte:609}}
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  data.google_client_config.current - *terraform.NodePlannableResource
  data.google_container_engine_versions.default - *terraform.NodePlannableResource
  data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
  google_compute_address.default - *terraform.NodePlannableResource
  google_compute_network.default - *terraform.NodePlannableResource
  google_compute_subnetwork.default - *terraform.NodePlannableResource
  google_container_cluster.default - *terraform.NodePlannableResource
  kubectl_manifest.test - *terraform.NodePlannableResource
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/17 06:23:18 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/17 06:23:18 [TRACE] ProviderConfigTransformer: attaching to "provider.google" provider configuration from main.tf:1,1-18
2021/02/17 06:23:18 [TRACE] ProviderConfigTransformer: attaching to "provider.kubernetes" provider configuration from k8s.tf:1,1-22
2021/02/17 06:23:18 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  data.google_client_config.current - *terraform.NodePlannableResource
  data.google_container_engine_versions.default - *terraform.NodePlannableResource
  data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
  google_compute_address.default - *terraform.NodePlannableResource
  google_compute_network.default - *terraform.NodePlannableResource
  google_compute_subnetwork.default - *terraform.NodePlannableResource
  google_container_cluster.default - *terraform.NodePlannableResource
  kubectl_manifest.test - *terraform.NodePlannableResource
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:18 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/17 06:23:18 [DEBUG] adding implicit provider configuration provider.kubectl, implied first by kubectl_manifest.test
2021/02/17 06:23:18 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  data.google_client_config.current - *terraform.NodePlannableResource
  data.google_container_engine_versions.default - *terraform.NodePlannableResource
  data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
  google_compute_address.default - *terraform.NodePlannableResource
  google_compute_network.default - *terraform.NodePlannableResource
  google_compute_subnetwork.default - *terraform.NodePlannableResource
  google_container_cluster.default - *terraform.NodePlannableResource
  kubectl_manifest.test - *terraform.NodePlannableResource
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:18 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/17 06:23:18 [TRACE] ProviderTransformer: google_container_cluster.default is provided by provider.google or inherited equivalent
2021/02/17 06:23:18 [TRACE] ProviderTransformer: google_compute_address.default is provided by provider.google or inherited equivalent
2021/02/17 06:23:18 [TRACE] ProviderTransformer: google_compute_network.default is provided by provider.google or inherited equivalent
2021/02/17 06:23:18 [TRACE] ProviderTransformer: google_compute_subnetwork.default is provided by provider.google or inherited equivalent
2021/02/17 06:23:18 [TRACE] ProviderTransformer: data.google_container_engine_versions.default is provided by provider.google or inherited equivalent
2021/02/17 06:23:18 [TRACE] ProviderTransformer: data.google_client_config.current is provided by provider.google or inherited equivalent
2021/02/17 06:23:18 [TRACE] ProviderTransformer: kubectl_manifest.test is provided by provider.kubectl or inherited equivalent
2021/02/17 06:23:18 [TRACE] ProviderTransformer: data.kubectl_filename_list.manifests is provided by provider.kubectl or inherited equivalent
2021/02/17 06:23:18 [TRACE] ProviderTransformer: exact match for provider.google serving google_container_cluster.default
2021/02/17 06:23:18 [DEBUG] ProviderTransformer: "google_container_cluster.default" (*terraform.NodePlannableResource) needs provider.google
2021/02/17 06:23:18 [TRACE] ProviderTransformer: exact match for provider.google serving google_compute_address.default
2021/02/17 06:23:18 [DEBUG] ProviderTransformer: "google_compute_address.default" (*terraform.NodePlannableResource) needs provider.google
2021/02/17 06:23:18 [TRACE] ProviderTransformer: exact match for provider.google serving google_compute_network.default
2021/02/17 06:23:18 [DEBUG] ProviderTransformer: "google_compute_network.default" (*terraform.NodePlannableResource) needs provider.google
2021/02/17 06:23:18 [TRACE] ProviderTransformer: exact match for provider.google serving google_compute_subnetwork.default
2021/02/17 06:23:18 [DEBUG] ProviderTransformer: "google_compute_subnetwork.default" (*terraform.NodePlannableResource) needs provider.google
2021/02/17 06:23:18 [TRACE] ProviderTransformer: exact match for provider.google serving data.google_container_engine_versions.default
2021/02/17 06:23:18 [DEBUG] ProviderTransformer: "data.google_container_engine_versions.default" (*terraform.NodePlannableResource) needs provider.google
2021/02/17 06:23:18 [TRACE] ProviderTransformer: exact match for provider.google serving data.google_client_config.current
2021/02/17 06:23:18 [DEBUG] ProviderTransformer: "data.google_client_config.current" (*terraform.NodePlannableResource) needs provider.google
2021/02/17 06:23:18 [TRACE] ProviderTransformer: exact match for provider.kubectl serving kubectl_manifest.test
2021/02/17 06:23:18 [DEBUG] ProviderTransformer: "kubectl_manifest.test" (*terraform.NodePlannableResource) needs provider.kubectl
2021/02/17 06:23:18 [TRACE] ProviderTransformer: exact match for provider.kubectl serving data.kubectl_filename_list.manifests
2021/02/17 06:23:18 [DEBUG] ProviderTransformer: "data.kubectl_filename_list.manifests" (*terraform.NodePlannableResource) needs provider.kubectl
2021/02/17 06:23:18 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  data.google_client_config.current - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_network.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_subnetwork.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  google_container_cluster.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  kubectl_manifest.test - *terraform.NodePlannableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:18 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/17 06:23:18 [DEBUG] pruning unused provider.kubernetes
2021/02/17 06:23:18 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  data.google_client_config.current - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_network.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_subnetwork.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  google_container_cluster.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  kubectl_manifest.test - *terraform.NodePlannableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:18 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/17 06:23:18 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  data.google_client_config.current - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_network.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_subnetwork.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  google_container_cluster.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  kubectl_manifest.test - *terraform.NodePlannableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/17 06:23:18 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.google
2021/02/17 06:23:18 [TRACE] AttachSchemaTransformer: attaching resource schema to google_compute_network.default
2021/02/17 06:23:18 [TRACE] AttachSchemaTransformer: attaching resource schema to google_container_cluster.default
2021/02/17 06:23:18 [TRACE] AttachSchemaTransformer: attaching resource schema to google_compute_address.default
2021/02/17 06:23:18 [TRACE] AttachSchemaTransformer: attaching resource schema to kubectl_manifest.test
2021/02/17 06:23:18 [TRACE] AttachSchemaTransformer: attaching resource schema to google_compute_subnetwork.default
2021/02/17 06:23:18 [TRACE] AttachSchemaTransformer: attaching resource schema to data.google_container_engine_versions.default
2021/02/17 06:23:18 [TRACE] AttachSchemaTransformer: attaching resource schema to data.google_client_config.current
2021/02/17 06:23:18 [TRACE] AttachSchemaTransformer: attaching resource schema to data.kubectl_filename_list.manifests
2021/02/17 06:23:18 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.kubectl
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "output.subnetwork_name" references: [google_compute_subnetwork.default]
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "output.cluster_location" references: [google_container_cluster.default]
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "var.network_name" references: []
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "var.region" references: []
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "provider.google" references: [var.region]
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "google_compute_network.default" references: [var.network_name]
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "google_container_cluster.default" references: [google_compute_subnetwork.default google_compute_subnetwork.default var.network_name var.location data.google_container_engine_versions.default]
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "google_compute_address.default" references: [var.region var.network_name]
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "output.network" references: [google_compute_subnetwork.default]
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "output.cluster_name" references: [google_container_cluster.default]
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "kubectl_manifest.test" references: [data.kubectl_filename_list.manifests data.kubectl_filename_list.manifests]
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "google_compute_subnetwork.default" references: [google_compute_network.default var.network_name var.region]
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "data.google_container_engine_versions.default" references: [var.location]
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "data.google_client_config.current" references: []
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "data.kubectl_filename_list.manifests" references: []
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "output.cluster_region" references: [var.region]
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "var.location" references: []
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "provider.kubectl" references: []
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  data.google_client_config.current - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
  data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_compute_network.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
  google_compute_subnetwork.default - *terraform.NodePlannableResource
    google_compute_network.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_container_cluster.default - *terraform.NodePlannableResource
    data.google_container_engine_versions.default - *terraform.NodePlannableResource
    google_compute_subnetwork.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
    var.network_name - *terraform.NodeRootVariable
  kubectl_manifest.test - *terraform.NodePlannableResource
    data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  output.cluster_location - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodePlannableResource
  output.cluster_name - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodePlannableResource
  output.cluster_region - *terraform.NodeApplyableOutput
    var.region - *terraform.NodeRootVariable
  output.network - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodePlannableResource
  output.subnetwork_name - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodePlannableResource
  provider.google - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.kubectl - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  data.google_client_config.current - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
  data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_compute_network.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
  google_compute_subnetwork.default - *terraform.NodePlannableResource
    google_compute_network.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_container_cluster.default - *terraform.NodePlannableResource
    data.google_container_engine_versions.default - *terraform.NodePlannableResource
    google_compute_subnetwork.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
    var.network_name - *terraform.NodeRootVariable
  kubectl_manifest.test - *terraform.NodePlannableResource
    data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.google_client_config.current - *terraform.NodePlannableResource
    data.google_container_engine_versions.default - *terraform.NodePlannableResource
    data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
    google_compute_address.default - *terraform.NodePlannableResource
    google_compute_network.default - *terraform.NodePlannableResource
    google_compute_subnetwork.default - *terraform.NodePlannableResource
    google_container_cluster.default - *terraform.NodePlannableResource
    kubectl_manifest.test - *terraform.NodePlannableResource
    output.cluster_location - *terraform.NodeApplyableOutput
    output.cluster_name - *terraform.NodeApplyableOutput
    output.cluster_region - *terraform.NodeApplyableOutput
    output.network - *terraform.NodeApplyableOutput
    output.subnetwork_name - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
    provider.kubectl - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.cluster_location - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodePlannableResource
  output.cluster_name - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodePlannableResource
  output.cluster_region - *terraform.NodeApplyableOutput
    var.region - *terraform.NodeRootVariable
  output.network - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodePlannableResource
  output.subnetwork_name - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodePlannableResource
  provider.google - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.kubectl - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/17 06:23:18 [TRACE] ForcedCBDTransformer: "google_compute_network.default" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/02/17 06:23:18 [TRACE] ForcedCBDTransformer: "google_container_cluster.default" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/02/17 06:23:18 [TRACE] ForcedCBDTransformer: "google_compute_address.default" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/02/17 06:23:18 [TRACE] ForcedCBDTransformer: "kubectl_manifest.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/02/17 06:23:18 [TRACE] ForcedCBDTransformer: "google_compute_subnetwork.default" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/02/17 06:23:18 [TRACE] ForcedCBDTransformer: "data.google_container_engine_versions.default" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/02/17 06:23:18 [TRACE] ForcedCBDTransformer: "data.google_client_config.current" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/02/17 06:23:18 [TRACE] ForcedCBDTransformer: "data.kubectl_filename_list.manifests" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  data.google_client_config.current - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
  data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_compute_network.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
  google_compute_subnetwork.default - *terraform.NodePlannableResource
    google_compute_network.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_container_cluster.default - *terraform.NodePlannableResource
    data.google_container_engine_versions.default - *terraform.NodePlannableResource
    google_compute_subnetwork.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
    var.network_name - *terraform.NodeRootVariable
  kubectl_manifest.test - *terraform.NodePlannableResource
    data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.google_client_config.current - *terraform.NodePlannableResource
    data.google_container_engine_versions.default - *terraform.NodePlannableResource
    data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
    google_compute_address.default - *terraform.NodePlannableResource
    google_compute_network.default - *terraform.NodePlannableResource
    google_compute_subnetwork.default - *terraform.NodePlannableResource
    google_container_cluster.default - *terraform.NodePlannableResource
    kubectl_manifest.test - *terraform.NodePlannableResource
    output.cluster_location - *terraform.NodeApplyableOutput
    output.cluster_name - *terraform.NodeApplyableOutput
    output.cluster_region - *terraform.NodeApplyableOutput
    output.network - *terraform.NodeApplyableOutput
    output.subnetwork_name - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
    provider.kubectl - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.cluster_location - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodePlannableResource
  output.cluster_name - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodePlannableResource
  output.cluster_region - *terraform.NodeApplyableOutput
    var.region - *terraform.NodeRootVariable
  output.network - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodePlannableResource
  output.subnetwork_name - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodePlannableResource
  provider.google - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.google (close) - *terraform.graphNodeCloseProvider
    data.google_client_config.current - *terraform.NodePlannableResource
    data.google_container_engine_versions.default - *terraform.NodePlannableResource
    google_compute_address.default - *terraform.NodePlannableResource
    google_compute_network.default - *terraform.NodePlannableResource
    google_compute_subnetwork.default - *terraform.NodePlannableResource
    google_container_cluster.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubectl (close) - *terraform.graphNodeCloseProvider
    data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
    kubectl_manifest.test - *terraform.NodePlannableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  data.google_client_config.current - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
  data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_compute_network.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
  google_compute_subnetwork.default - *terraform.NodePlannableResource
    google_compute_network.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  google_container_cluster.default - *terraform.NodePlannableResource
    data.google_container_engine_versions.default - *terraform.NodePlannableResource
    google_compute_subnetwork.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
    var.network_name - *terraform.NodeRootVariable
  kubectl_manifest.test - *terraform.NodePlannableResource
    data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.google_client_config.current - *terraform.NodePlannableResource
    data.google_container_engine_versions.default - *terraform.NodePlannableResource
    data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
    google_compute_address.default - *terraform.NodePlannableResource
    google_compute_network.default - *terraform.NodePlannableResource
    google_compute_subnetwork.default - *terraform.NodePlannableResource
    google_container_cluster.default - *terraform.NodePlannableResource
    kubectl_manifest.test - *terraform.NodePlannableResource
    output.cluster_location - *terraform.NodeApplyableOutput
    output.cluster_name - *terraform.NodeApplyableOutput
    output.cluster_region - *terraform.NodeApplyableOutput
    output.network - *terraform.NodeApplyableOutput
    output.subnetwork_name - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
    provider.kubectl - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.cluster_location - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodePlannableResource
  output.cluster_name - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodePlannableResource
  output.cluster_region - *terraform.NodeApplyableOutput
    var.region - *terraform.NodeRootVariable
  output.network - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodePlannableResource
  output.subnetwork_name - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodePlannableResource
  provider.google - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.google (close) - *terraform.graphNodeCloseProvider
    data.google_client_config.current - *terraform.NodePlannableResource
    data.google_container_engine_versions.default - *terraform.NodePlannableResource
    google_compute_address.default - *terraform.NodePlannableResource
    google_compute_network.default - *terraform.NodePlannableResource
    google_compute_subnetwork.default - *terraform.NodePlannableResource
    google_container_cluster.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubectl (close) - *terraform.graphNodeCloseProvider
    data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
    kubectl_manifest.test - *terraform.NodePlannableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.google (close) - *terraform.graphNodeCloseProvider
    provider.kubectl (close) - *terraform.graphNodeCloseProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  data.google_client_config.current - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
  data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
  google_compute_network.default - *terraform.NodePlannableResource
    provider.google - *terraform.NodeApplyableProvider
    var.network_name - *terraform.NodeRootVariable
  google_compute_subnetwork.default - *terraform.NodePlannableResource
    google_compute_network.default - *terraform.NodePlannableResource
  google_container_cluster.default - *terraform.NodePlannableResource
    data.google_container_engine_versions.default - *terraform.NodePlannableResource
    google_compute_subnetwork.default - *terraform.NodePlannableResource
  kubectl_manifest.test - *terraform.NodePlannableResource
    data.kubectl_filename_list.manifests - *terraform.NodePlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.google_client_config.current - *terraform.NodePlannableResource
    google_compute_address.default - *terraform.NodePlannableResource
    kubectl_manifest.test - *terraform.NodePlannableResource
    output.cluster_location - *terraform.NodeApplyableOutput
    output.cluster_name - *terraform.NodeApplyableOutput
    output.cluster_region - *terraform.NodeApplyableOutput
    output.network - *terraform.NodeApplyableOutput
    output.subnetwork_name - *terraform.NodeApplyableOutput
  output.cluster_location - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodePlannableResource
  output.cluster_name - *terraform.NodeApplyableOutput
    google_container_cluster.default - *terraform.NodePlannableResource
  output.cluster_region - *terraform.NodeApplyableOutput
    var.region - *terraform.NodeRootVariable
  output.network - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodePlannableResource
  output.subnetwork_name - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default - *terraform.NodePlannableResource
  provider.google - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.google (close) - *terraform.graphNodeCloseProvider
    data.google_client_config.current - *terraform.NodePlannableResource
    google_compute_address.default - *terraform.NodePlannableResource
    google_container_cluster.default - *terraform.NodePlannableResource
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubectl (close) - *terraform.graphNodeCloseProvider
    kubectl_manifest.test - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.google (close) - *terraform.graphNodeCloseProvider
    provider.kubectl (close) - *terraform.graphNodeCloseProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:18 [DEBUG] Starting graph walk: walkPlan
2021/02/17 06:23:18 [TRACE] dag/walk: updating graph
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "google_compute_network.default"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "output.cluster_region"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "var.location"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "provider.google (close)"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "root"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "output.cluster_location"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "output.network"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "data.google_container_engine_versions.default"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "data.google_client_config.current"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "data.kubectl_filename_list.manifests"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "var.region"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "google_compute_subnetwork.default"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "provider.kubectl"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "var.network_name"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "provider.google"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "google_container_cluster.default"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "google_compute_address.default"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "output.cluster_name"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "provider.kubectl (close)"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "output.subnetwork_name"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "google_compute_address.default"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "output.cluster_location" waiting on "google_container_cluster.default"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "google_compute_address.default" waiting on "provider.google"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "data.google_container_engine_versions.default" waiting on "var.location"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "provider.google (close)" waiting on "google_container_cluster.default"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "provider.google" waiting on "var.region"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "data.google_client_config.current"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "output.cluster_name" waiting on "google_container_cluster.default"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "root" waiting on "provider.kubectl (close)"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "root" waiting on "provider.google (close)"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "kubectl_manifest.test" waiting on "data.kubectl_filename_list.manifests"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.cluster_name"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "output.subnetwork_name" waiting on "google_compute_subnetwork.default"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.cluster_region"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "google_container_cluster.default" waiting on "google_compute_subnetwork.default"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "provider.google (close)" waiting on "google_compute_address.default"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "data.google_client_config.current" waiting on "provider.google"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "provider.kubectl (close)" waiting on "kubectl_manifest.test"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "google_compute_subnetwork.default" waiting on "google_compute_network.default"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.network"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "google_compute_network.default" waiting on "var.network_name"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "output.cluster_region" waiting on "var.region"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "data.kubectl_filename_list.manifests" waiting on "provider.kubectl"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubectl_manifest.test"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "google_compute_address.default" waiting on "var.network_name"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "data.google_container_engine_versions.default" waiting on "provider.google"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "output.network" waiting on "google_compute_subnetwork.default"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "provider.google (close)" waiting on "data.google_client_config.current"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.cluster_location"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "google_container_cluster.default" waiting on "data.google_container_engine_versions.default"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "google_compute_network.default" waiting on "provider.google"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.subnetwork_name"
2021/02/17 06:23:18 [TRACE] dag/walk: dependencies changed for "google_compute_network.default", sending new deps
2021/02/17 06:23:18 [TRACE] dag/walk: dependencies changed for "provider.google", sending new deps
2021/02/17 06:23:18 [TRACE] dag/walk: dependencies changed for "kubectl_manifest.test", sending new deps
2021/02/17 06:23:18 [TRACE] dag/walk: dependencies changed for "google_compute_address.default", sending new deps
2021/02/17 06:23:18 [TRACE] dag/walk: dependencies changed for "data.google_container_engine_versions.default", sending new deps
2021/02/17 06:23:18 [TRACE] dag/walk: dependencies changed for "provider.google (close)", sending new deps
2021/02/17 06:23:18 [TRACE] dag/walk: dependencies changed for "google_compute_subnetwork.default", sending new deps
2021/02/17 06:23:18 [TRACE] dag/walk: dependencies changed for "output.cluster_region", sending new deps
2021/02/17 06:23:18 [TRACE] dag/walk: dependencies changed for "output.cluster_name", sending new deps
2021/02/17 06:23:18 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2021/02/17 06:23:18 [TRACE] dag/walk: dependencies changed for "provider.kubectl (close)", sending new deps
2021/02/17 06:23:18 [TRACE] dag/walk: dependencies changed for "google_container_cluster.default", sending new deps
2021/02/17 06:23:18 [TRACE] dag/walk: dependencies changed for "data.google_client_config.current", sending new deps
2021/02/17 06:23:18 [TRACE] dag/walk: dependencies changed for "data.kubectl_filename_list.manifests", sending new deps
2021/02/17 06:23:18 [TRACE] dag/walk: dependencies changed for "output.network", sending new deps
2021/02/17 06:23:18 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2021/02/17 06:23:18 [TRACE] dag/walk: dependencies changed for "output.cluster_location", sending new deps
2021/02/17 06:23:18 [TRACE] dag/walk: dependencies changed for "output.subnetwork_name", sending new deps
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "var.location"
2021/02/17 06:23:18 [TRACE] vertex "var.location": starting visit (*terraform.NodeRootVariable)
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "var.region"
2021/02/17 06:23:18 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "var.network_name"
2021/02/17 06:23:18 [TRACE] vertex "var.region": evaluating
2021/02/17 06:23:18 [TRACE] vertex "var.network_name": starting visit (*terraform.NodeRootVariable)
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: var.region
2021/02/17 06:23:18 [TRACE] vertex "var.network_name": evaluating
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: var.network_name
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: var.region
2021/02/17 06:23:18 [TRACE] vertex "var.region": visit complete
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "output.cluster_region"
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: var.network_name
2021/02/17 06:23:18 [TRACE] vertex "output.cluster_region": starting visit (*terraform.NodeApplyableOutput)
2021/02/17 06:23:18 [TRACE] vertex "var.network_name": visit complete
2021/02/17 06:23:18 [TRACE] vertex "output.cluster_region": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: output.cluster_region
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "provider.kubectl"
2021/02/17 06:23:18 [TRACE] vertex "provider.kubectl": starting visit (*terraform.NodeApplyableProvider)
2021/02/17 06:23:18 [TRACE] vertex "provider.kubectl": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: provider.kubectl
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021/02/17 06:23:18 [TRACE] EvalWriteOutput: Saving value for output.cluster_region in state
2021/02/17 06:23:18 [TRACE] EvalWriteOutput: Saving Create change for output.cluster_region in changeset
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: output.cluster_region
2021-02-17T06:23:18.110Z [INFO]  plugin: configuring client automatic mTLS
2021/02/17 06:23:18 [TRACE] vertex "output.cluster_region": visit complete
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "provider.google"
2021/02/17 06:23:18 [TRACE] vertex "provider.google": starting visit (*terraform.NodeApplyableProvider)
2021/02/17 06:23:18 [TRACE] vertex "provider.google": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: provider.google
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021/02/17 06:23:18 [TRACE] vertex "var.location": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: var.location
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: var.location
2021/02/17 06:23:18 [TRACE] vertex "var.location": visit complete
2021-02-17T06:23:18.149Z [DEBUG] plugin: starting plugin: path=/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0 args=[/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0]
2021-02-17T06:23:18.149Z [DEBUG] plugin: plugin started: path=/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0 pid=70030
2021-02-17T06:23:18.150Z [DEBUG] plugin: waiting for RPC address: path=/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0
2021-02-17T06:23:18.198Z [INFO]  plugin.terraform-provider-kubectl_v1.10.0: configuring server automatic mTLS: timestamp=2021-02-17T06:23:18.196Z
2021-02-17T06:23:18.236Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: plugin address: address=/tmp/plugin665174882 network=unix timestamp=2021-02-17T06:23:18.236Z
2021-02-17T06:23:18.236Z [DEBUG] plugin: using plugin: version=5
2021/02/17 06:23:18 [TRACE] BuiltinEvalContext: Initialized "kubectl" provider for provider.kubectl
2021/02/17 06:23:18 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:18 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2021/02/17 06:23:18 [TRACE] buildProviderConfig for provider.kubectl: no configuration at all
2021/02/17 06:23:18 [TRACE] GRPCProvider: GetSchema
2021-02-17T06:23:18.236Z [INFO]  plugin: configuring client automatic mTLS
2021-02-17T06:23:18.289Z [DEBUG] plugin: starting plugin: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5 args=[/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5]
2021-02-17T06:23:18.290Z [DEBUG] plugin: plugin started: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5 pid=70039
2021-02-17T06:23:18.290Z [DEBUG] plugin: waiting for RPC address: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5
2021-02-17T06:23:18.321Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: configuring server automatic mTLS: timestamp=2021-02-17T06:23:18.321Z
2021-02-17T06:23:18.363Z [DEBUG] plugin: using plugin: version=5
2021-02-17T06:23:18.363Z [DEBUG] plugin.terraform-provider-google_v3.57.0_x5: plugin address: address=/tmp/plugin241515364 network=unix timestamp=2021-02-17T06:23:18.363Z
2021/02/17 06:23:18 [TRACE] BuiltinEvalContext: Initialized "google" provider for provider.google
2021/02/17 06:23:18 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:18 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2021/02/17 06:23:18 [TRACE] buildProviderConfig for provider.google: using explicit config only
2021/02/17 06:23:18 [TRACE] GRPCProvider: GetSchema
2021/02/17 06:23:18 [TRACE] GRPCProvider: Configure
2021-02-17T06:23:18.367Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [INFO] Successfully loaded config file (/home/codingdog2020/.kube/config; default context)
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: provider.kubectl
2021/02/17 06:23:18 [TRACE] vertex "provider.kubectl": visit complete
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "data.kubectl_filename_list.manifests"
2021/02/17 06:23:18 [TRACE] vertex "data.kubectl_filename_list.manifests": starting visit (*terraform.NodePlannableResource)
2021/02/17 06:23:18 [TRACE] vertex "data.kubectl_filename_list.manifests": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: data.kubectl_filename_list.manifests
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: data.kubectl_filename_list.manifests
2021/02/17 06:23:18 [TRACE] vertex "data.kubectl_filename_list.manifests": expanding dynamic subgraph
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.kubectl_filename_list.manifests - *terraform.NodePlannableResourceInstance
  ------
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "data.kubectl_filename_list.manifests" references: []
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/17 06:23:18 [TRACE] vertex "data.kubectl_filename_list.manifests": entering dynamic subgraph
2021/02/17 06:23:18 [TRACE] dag/walk: updating graph
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "data.kubectl_filename_list.manifests"
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "data.kubectl_filename_list.manifests"
2021/02/17 06:23:18 [TRACE] vertex "data.kubectl_filename_list.manifests": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/17 06:23:18 [TRACE] vertex "data.kubectl_filename_list.manifests": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: data.kubectl_filename_list.manifests
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:18 [TRACE] EvalReadState: reading state for data.kubectl_filename_list.manifests
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalIf, early exit err: early exit
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: data.kubectl_filename_list.manifests
2021/02/17 06:23:18 [TRACE] vertex "data.kubectl_filename_list.manifests": visit complete
2021/02/17 06:23:18 [TRACE] vertex "data.kubectl_filename_list.manifests": dynamic subgraph completed successfully
2021/02/17 06:23:18 [TRACE] vertex "data.kubectl_filename_list.manifests": visit complete
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "kubectl_manifest.test"
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test": starting visit (*terraform.NodePlannableResource)
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: kubectl_manifest.test
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: kubectl_manifest.test
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test": expanding dynamic subgraph
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubectl_manifest.test[0] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[10] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[11] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[12] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[1] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[2] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[3] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[4] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[5] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[6] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[7] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[8] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[9] - *terraform.NodePlannableResourceInstance
  ------
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/17 06:23:18 [DEBUG] Resource instance state not found for node "kubectl_manifest.test[5]", instance kubectl_manifest.test[5]
2021/02/17 06:23:18 [DEBUG] Resource instance state not found for node "kubectl_manifest.test[0]", instance kubectl_manifest.test[0]
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[8]" references: []
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[4]" references: []
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[6]" references: []
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[2]" references: []
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[3]" references: []
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[5]" references: []
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[7]" references: []
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[9]" references: []
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[10]" references: []
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[0]" references: []
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[1]" references: []
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[11]" references: []
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[12]" references: []
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  kubectl_manifest.test[0] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[10] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[11] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[12] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[1] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[2] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[3] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[4] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[5] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[6] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[7] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[8] - *terraform.NodePlannableResourceInstance
  kubectl_manifest.test[9] - *terraform.NodePlannableResourceInstance
  root - terraform.graphNodeRoot
    kubectl_manifest.test[0] - *terraform.NodePlannableResourceInstance
    kubectl_manifest.test[10] - *terraform.NodePlannableResourceInstance
    kubectl_manifest.test[11] - *terraform.NodePlannableResourceInstance
    kubectl_manifest.test[12] - *terraform.NodePlannableResourceInstance
    kubectl_manifest.test[1] - *terraform.NodePlannableResourceInstance
    kubectl_manifest.test[2] - *terraform.NodePlannableResourceInstance
    kubectl_manifest.test[3] - *terraform.NodePlannableResourceInstance
    kubectl_manifest.test[4] - *terraform.NodePlannableResourceInstance
    kubectl_manifest.test[5] - *terraform.NodePlannableResourceInstance
    kubectl_manifest.test[6] - *terraform.NodePlannableResourceInstance
    kubectl_manifest.test[7] - *terraform.NodePlannableResourceInstance
    kubectl_manifest.test[8] - *terraform.NodePlannableResourceInstance
    kubectl_manifest.test[9] - *terraform.NodePlannableResourceInstance
  ------
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test": entering dynamic subgraph
2021/02/17 06:23:18 [TRACE] dag/walk: updating graph
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[5]"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[0]"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[1]"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[10]"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[4]"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[8]"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[3]"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[11]"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[12]"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[6]"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[9]"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "root"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[7]"
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[2]"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[0]"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[3]"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[4]"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[8]"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[12]"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[5]"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[10]"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[11]"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[1]"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[2]"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[7]"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[9]"
2021/02/17 06:23:18 [TRACE] dag/walk: added edge: "root" waiting on "kubectl_manifest.test[6]"
2021/02/17 06:23:18 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "kubectl_manifest.test[7]"
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "kubectl_manifest.test[1]"
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "kubectl_manifest.test[12]"
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[12]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[1]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[12]": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: kubectl_manifest.test[12]
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "kubectl_manifest.test[9]"
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[9]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[9]": evaluating
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: kubectl_manifest.test[9]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:18 [TRACE] EvalReadState: reading state for kubectl_manifest.test[12]
2021/02/17 06:23:18 [TRACE] EvalReadState: reading state for kubectl_manifest.test[9]
2021/02/17 06:23:18 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[12] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:18 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:18 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[9] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:18 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "kubectl_manifest.test[11]"
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[11]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "kubectl_manifest.test[4]"
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[4]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[4]": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: kubectl_manifest.test[4]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[7]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/17 06:23:18 [TRACE] EvalReadState: reading state for kubectl_manifest.test[4]
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[7]": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: kubectl_manifest.test[7]
2021/02/17 06:23:18 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[4] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "kubectl_manifest.test[10]"
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[10]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[10]": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: kubectl_manifest.test[10]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:18 [TRACE] EvalReadState: reading state for kubectl_manifest.test[10]
2021/02/17 06:23:18 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[10] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:18 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:18 [TRACE] EvalReadState: reading state for kubectl_manifest.test[7]
2021/02/17 06:23:18 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[7] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:18 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "kubectl_manifest.test[2]"
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[2]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[2]": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: kubectl_manifest.test[2]
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[1]": evaluating
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: kubectl_manifest.test[1]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:18 [TRACE] EvalReadState: reading state for kubectl_manifest.test[1]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:18 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[1] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:18 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:18 [TRACE] EvalReadState: reading state for kubectl_manifest.test[2]
2021/02/17 06:23:18 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[2] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:18 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "kubectl_manifest.test[0]"
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[0]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[0]": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: kubectl_manifest.test[0]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:18 [TRACE] EvalReadState: reading state for kubectl_manifest.test[0]
2021/02/17 06:23:18 [TRACE] EvalReadState: no state present for kubectl_manifest.test[0]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "kubectl_manifest.test[5]"
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[5]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[5]": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: kubectl_manifest.test[5]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:18 [TRACE] EvalReadState: reading state for kubectl_manifest.test[5]
2021/02/17 06:23:18 [TRACE] EvalReadState: no state present for kubectl_manifest.test[5]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:18 [TRACE] Re-validating config for "kubectl_manifest.test[0]"
2021/02/17 06:23:18 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:18 [TRACE] Re-validating config for "kubectl_manifest.test[5]"
2021/02/17 06:23:18 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "kubectl_manifest.test[8]"
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[8]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[8]": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: kubectl_manifest.test[8]
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "kubectl_manifest.test[3]"
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[3]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[3]": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: kubectl_manifest.test[3]
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "kubectl_manifest.test[6]"
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[6]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[6]": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: kubectl_manifest.test[6]
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[11]": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: kubectl_manifest.test[11]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:18 [TRACE] Re-validating config for "kubectl_manifest.test[1]"
2021/02/17 06:23:18 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:18 [TRACE] Re-validating config for "kubectl_manifest.test[12]"
2021/02/17 06:23:18 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:18 [TRACE] GRPCProvider: PlanResourceChange
2021/02/17 06:23:18 [TRACE] GRPCProvider: PlanResourceChange
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:18 [TRACE] Re-validating config for "kubectl_manifest.test[9]"
2021/02/17 06:23:18 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:18 [TRACE] Re-validating config for "kubectl_manifest.test[4]"
2021/02/17 06:23:18 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:18 [TRACE] GRPCProvider: PlanResourceChange
2021-02-17T06:23:18.381Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] letsencrypt-prod Unstructed YAML: map[apiVersion:cert-manager.io/v1alpha2 kind:ClusterIssuer metadata:map[name:letsencrypt-prod] spec:map[acme:map[email:youremail@email.com privateKeySecretRef:map[name:letsencrypt-prod] server:https://acme-v02.api.letsencrypt.org/directory solvers:[map[http01:map[ingress:map[class:nginx]]]]]]]
2021-02-17T06:23:18.381Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] letsencrypt-prod Unstructed YAML: map[apiVersion:cert-manager.io/v1alpha2 kind:ClusterIssuer metadata:map[name:letsencrypt-prod] spec:map[acme:map[email:youremail@email.com privateKeySecretRef:map[name:letsencrypt-prod] server:https://acme-v02.api.letsencrypt.org/directory solvers:[map[http01:map[ingress:map[class:nginx]]]]]]]
2021/02/17 06:23:18 [TRACE] Re-validating config for "kubectl_manifest.test[2]"
2021/02/17 06:23:18 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:18 [TRACE] Re-validating config for "kubectl_manifest.test[10]"
2021/02/17 06:23:18 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:18 [TRACE] Re-validating config for "kubectl_manifest.test[7]"
2021/02/17 06:23:18 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:18 [TRACE] GRPCProvider: PlanResourceChange
2021/02/17 06:23:18 [TRACE] GRPCProvider: PlanResourceChange
2021/02/17 06:23:18 [TRACE] GRPCProvider: PlanResourceChange
2021/02/17 06:23:18 [WARN] Provider "registry.terraform.io/-/kubectl" produced an invalid plan for kubectl_manifest.test[5], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .force_new: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .validate_schema: planned value cty.True does not match config value cty.NullVal(cty.Bool)
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:18 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[5]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:23:18 [TRACE] EvalWriteDiff: recorded Create change for kubectl_manifest.test[5]
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: kubectl_manifest.test[5]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:18 [TRACE] EvalReadState: reading state for kubectl_manifest.test[8]
2021/02/17 06:23:18 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[8] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:18 [TRACE] GRPCProvider: UpgradeResourceState
2021-02-17T06:23:18.392Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] client-cluster-ip-service Unstructed YAML: map[apiVersion:v1 kind:Service metadata:map[name:client-cluster-ip-service] spec:map[ports:[map[port:3000 targetPort:3000]] selector:map[component:web] type:ClusterIP]]
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[5]": visit complete
2021-02-17T06:23:18.393Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] client-cluster-ip-service Unstructed YAML: map[apiVersion:v1 kind:Service metadata:map[name:client-cluster-ip-service] spec:map[ports:[map[port:3000 targetPort:3000]] selector:map[component:web] type:ClusterIP]]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:18 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[1]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:23:18 [TRACE] EvalWriteDiff: recorded NoOp change for kubectl_manifest.test[1]
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: kubectl_manifest.test[1]
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[1]": visit complete
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:18 [TRACE] EvalReadState: reading state for kubectl_manifest.test[3]
2021/02/17 06:23:18 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[3] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:18 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:18 [TRACE] GRPCProvider: PlanResourceChange
2021-02-17T06:23:18.395Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] gcpcloudtest.ddns.net Unstructed YAML: map[apiVersion:cert-manager.io/v1alpha2 kind:Certificate metadata:map[name:gcpcloudtest.ddns.net] spec:map[acme:map[config:[map[domains:[gcpcloudtest.ddns.net] http01:map[ingressClass:nginx]]]] commonName:gcpcloudtest.ddns.net dnsNames:[gcpcloudtest.ddns.net] issuerRef:map[kind:ClusterIssuer name:letsencrypt-prod] secretName:gcpcloudtest.ddns.net]]
2021-02-17T06:23:18.395Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] gcpcloudtest.ddns.net Unstructed YAML: map[apiVersion:cert-manager.io/v1alpha2 kind:Certificate metadata:map[name:gcpcloudtest.ddns.net] spec:map[acme:map[config:[map[domains:[gcpcloudtest.ddns.net] http01:map[ingressClass:nginx]]]] commonName:gcpcloudtest.ddns.net dnsNames:[gcpcloudtest.ddns.net] issuerRef:map[kind:ClusterIssuer name:letsencrypt-prod] secretName:gcpcloudtest.ddns.net]]
2021/02/17 06:23:18 [WARN] Provider "registry.terraform.io/-/kubectl" produced an invalid plan for kubectl_manifest.test[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .force_new: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .validate_schema: planned value cty.True does not match config value cty.NullVal(cty.Bool)
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:18 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[0]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:23:18 [TRACE] EvalWriteDiff: recorded Create change for kubectl_manifest.test[0]
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: kubectl_manifest.test[0]
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[0]": visit complete
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:18 [TRACE] EvalReadState: reading state for kubectl_manifest.test[6]
2021/02/17 06:23:18 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[6] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:18 [TRACE] GRPCProvider: UpgradeResourceState
2021-02-17T06:23:18.401Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] client-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:client-deployment] spec:map[replicas:3 selector:map[matchLabels:map[component:web]] template:map[metadata:map[labels:map[component:web]] spec:map[containers:[map[image:manbobo2002/multi-client name:client ports:[map[containerPort:3000]]]]]]]]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:18 [TRACE] Re-validating config for "kubectl_manifest.test[6]"
2021/02/17 06:23:18 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:18 [TRACE] GRPCProvider: PlanResourceChange
2021/02/17 06:23:18 [TRACE] GRPCProvider: PlanResourceChange
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:18 [TRACE] Re-validating config for "kubectl_manifest.test[8]"
2021/02/17 06:23:18 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-02-17T06:23:18.406Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] server-cluster-ip-service Unstructed YAML: map[apiVersion:v1 kind:Service metadata:map[name:server-cluster-ip-service] spec:map[ports:[map[port:5000 targetPort:5000]] selector:map[component:server] type:ClusterIP]]
2021-02-17T06:23:18.406Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] server-cluster-ip-service Unstructed YAML: map[apiVersion:v1 kind:Service metadata:map[name:server-cluster-ip-service] spec:map[ports:[map[port:5000 targetPort:5000]] selector:map[component:server] type:ClusterIP]]
2021-02-17T06:23:18.406Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] redis-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:redis-deployment] spec:map[replicas:1 selector:map[matchLabels:map[component:redis]] template:map[metadata:map[labels:map[component:redis]] spec:map[containers:[map[image:redis name:redis]]]]]]
2021-02-17T06:23:18.406Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] redis-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:redis-deployment] spec:map[replicas:1 selector:map[matchLabels:map[component:redis]] template:map[metadata:map[labels:map[component:redis]] spec:map[containers:[map[image:redis name:redis]]]]]]
2021-02-17T06:23:18.407Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [TRACE] DETECTED RESOURCE VERSION 10414 vs 10266
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:18 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[10]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:23:18 [TRACE] EvalWriteDiff: recorded NoOp change for kubectl_manifest.test[10]
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: kubectl_manifest.test[10]
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[10]": visit complete
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:18 [TRACE] EvalReadState: reading state for kubectl_manifest.test[11]
2021/02/17 06:23:18 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[11] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:18 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:18 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[9]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:23:18 [TRACE] EvalWriteDiff: recorded NoOp change for kubectl_manifest.test[9]
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: kubectl_manifest.test[9]
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[9]": visit complete
2021-02-17T06:23:18.408Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] worker-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:worker-deployment] spec:map[replicas:1 selector:map[matchLabels:map[component:worker]] template:map[metadata:map[labels:map[component:worker]] spec:map[containers:[map[env:[map[name:REDIS_HOST value:redis-cluster-ip-service] map[name:REDIS_PORT value:6379]] image:manbobo2002/multi-worker name:worker]]]]]]
2021-02-17T06:23:18.408Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] worker-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:worker-deployment] spec:map[replicas:1 selector:map[matchLabels:map[component:worker]] template:map[metadata:map[labels:map[component:worker]] spec:map[containers:[map[env:[map[name:REDIS_HOST value:redis-cluster-ip-service] map[name:REDIS_PORT value:6379]] image:manbobo2002/multi-worker name:worker]]]]]]
2021-02-17T06:23:18.409Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [TRACE] DETECTED RESOURCE VERSION 10428 vs 10286
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:18 [TRACE] Re-validating config for "kubectl_manifest.test[11]"
2021/02/17 06:23:18 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:18 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[12]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:23:18 [TRACE] EvalWriteDiff: recorded NoOp change for kubectl_manifest.test[12]
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: kubectl_manifest.test[12]
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[12]": visit complete
2021-02-17T06:23:18.415Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] postgres-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:postgres-deployment] spec:map[replicas:1 selector:map[matchLabels:map[component:postgres]] template:map[metadata:map[labels:map[component:postgres]] spec:map[containers:[map[env:[map[name:POSTGRES_PASSWORD]] image:postgres name:postgres ports:[map[containerPort:5432]] volumeMounts:[map[mountPath:/var/lib/postgresql/data name:postgres-storage subPath:postgres]]]] volumes:[map[name:postgres-storage persistentVolumeClaim:map[claimName:database-persistent-volume-claim]]]]]]]
2021-02-17T06:23:18.415Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] postgres-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:postgres-deployment] spec:map[replicas:1 selector:map[matchLabels:map[component:postgres]] template:map[metadata:map[labels:map[component:postgres]] spec:map[containers:[map[env:[map[name:POSTGRES_PASSWORD]] image:postgres name:postgres ports:[map[containerPort:5432]] volumeMounts:[map[mountPath:/var/lib/postgresql/data name:postgres-storage subPath:postgres]]]] volumes:[map[name:postgres-storage persistentVolumeClaim:map[claimName:database-persistent-volume-claim]]]]]]]
2021-02-17T06:23:18.415Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] client-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:client-deployment] spec:map[replicas:3 selector:map[matchLabels:map[component:web]] template:map[metadata:map[labels:map[component:web]] spec:map[containers:[map[image:manbobo2002/multi-client name:client ports:[map[containerPort:3000]]]]]]]]
2021-02-17T06:23:18.415Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [TRACE] DETECTED RESOURCE VERSION 10471 vs 10311
2021-02-17T06:23:18.415Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] ingress-service Unstructed YAML: map[apiVersion:networking.k8s.io/v1beta1 kind:Ingress metadata:map[annotations:map[cert-manager.io/cluster-issuer:letsencrypt-prod kubernetes.io/ingress.class:nginx nginx.ingress.kubernetes.io/rewrite-target:/$1 nginx.ingress.kubernetes.io/use-regex:true] name:ingress-service] spec:map[rules:[map[http:map[paths:[map[backend:map[serviceName:client-cluster-ip-service servicePort:3000] path:/?(.*)] map[backend:map[serviceName:server-cluster-ip-service servicePort:5000] path:/api/?(.*)]]]]] tls:[map[hosts:[gcpcloudtest.ddns.net] secretName:gcpcloudtest.ddns.net]]]]
2021/02/17 06:23:18 [TRACE] GRPCProvider: PlanResourceChange
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:18 [TRACE] Re-validating config for "kubectl_manifest.test[3]"
2021/02/17 06:23:18 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:18 [TRACE] GRPCProvider: PlanResourceChange
2021/02/17 06:23:18 [WARN] Provider "registry.terraform.io/-/kubectl" produced an invalid plan for kubectl_manifest.test[7], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .validate_schema: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .force_new: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:18 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[7]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:23:18 [TRACE] EvalWriteDiff: recorded DeleteThenCreate change for kubectl_manifest.test[7]
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: kubectl_manifest.test[7]
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[7]": visit complete
2021/02/17 06:23:18 [TRACE] GRPCProvider: PlanResourceChange
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:18 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[2]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:23:18 [TRACE] EvalWriteDiff: recorded NoOp change for kubectl_manifest.test[2]
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: kubectl_manifest.test[2]
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[2]": visit complete
2021-02-17T06:23:18.420Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] ingress-service Unstructed YAML: map[apiVersion:networking.k8s.io/v1beta1 kind:Ingress metadata:map[annotations:map[cert-manager.io/cluster-issuer:letsencrypt-prod kubernetes.io/ingress.class:nginx nginx.ingress.kubernetes.io/rewrite-target:/$1 nginx.ingress.kubernetes.io/use-regex:true] name:ingress-service] spec:map[rules:[map[http:map[paths:[map[backend:map[serviceName:client-cluster-ip-service servicePort:3000] path:/?(.*)] map[backend:map[serviceName:server-cluster-ip-service servicePort:5000] path:/api/?(.*)]]]]] tls:[map[hosts:[gcpcloudtest.ddns.net] secretName:gcpcloudtest.ddns.net]]]]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:18 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[4]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:23:18 [TRACE] EvalWriteDiff: recorded Update change for kubectl_manifest.test[4]
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: kubectl_manifest.test[4]
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[4]": visit complete
2021-02-17T06:23:18.422Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] server-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:server-deployment] spec:map[replicas:3 selector:map[matchLabels:map[component:server]] template:map[metadata:map[labels:map[component:server]] spec:map[containers:[map[env:[map[name:REDIS_HOST value:redis-cluster-ip-service] map[name:REDIS_PORT value:6379] map[name:PGUSER value:postgres] map[name:PGHOST value:postgres-cluster-ip-service] map[name:PGPORT value:5432] map[name:PGDATABASE value:postgres] map[name:PGPASSWORD valueFrom:map[secretKeyRef:map[key:PGPASSWORD name:pgpassword]]]] image:manbobo2002/multi-server name:server ports:[map[containerPort:5000]]]]]]]]
2021/02/17 06:23:18 [TRACE] GRPCProvider: PlanResourceChange
2021-02-17T06:23:18.424Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] postgres-cluster-ip-service Unstructed YAML: map[apiVersion:v1 kind:Service metadata:map[name:postgres-cluster-ip-service] spec:map[ports:[map[port:5432 targetPort:5432]] selector:map[component:postgres] type:ClusterIP]]
2021-02-17T06:23:18.424Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] postgres-cluster-ip-service Unstructed YAML: map[apiVersion:v1 kind:Service metadata:map[name:postgres-cluster-ip-service] spec:map[ports:[map[port:5432 targetPort:5432]] selector:map[component:postgres] type:ClusterIP]]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:18 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[6]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:23:18 [TRACE] EvalWriteDiff: recorded NoOp change for kubectl_manifest.test[6]
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: kubectl_manifest.test[6]
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[6]": visit complete
2021-02-17T06:23:18.430Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] server-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:server-deployment] spec:map[replicas:3 selector:map[matchLabels:map[component:server]] template:map[metadata:map[labels:map[component:server]] spec:map[containers:[map[env:[map[name:REDIS_HOST value:redis-cluster-ip-service] map[name:REDIS_PORT value:6379] map[name:PGUSER value:postgres] map[name:PGHOST value:postgres-cluster-ip-service] map[name:PGPORT value:5432] map[name:PGDATABASE value:postgres] map[name:PGPASSWORD valueFrom:map[secretKeyRef:map[key:PGPASSWORD name:pgpassword]]]] image:manbobo2002/multi-server name:server ports:[map[containerPort:5000]]]]]]]]
2021-02-17T06:23:18.430Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] redis-cluster-ip-service Unstructed YAML: map[apiVersion:v1 kind:Service metadata:map[name:redis-cluster-ip-service] spec:map[ports:[map[port:6379 targetPort:6379]] selector:map[component:redis] type:ClusterIP]]
2021-02-17T06:23:18.430Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] redis-cluster-ip-service Unstructed YAML: map[apiVersion:v1 kind:Service metadata:map[name:redis-cluster-ip-service] spec:map[ports:[map[port:6379 targetPort:6379]] selector:map[component:redis] type:ClusterIP]]
2021-02-17T06:23:18.430Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] database-persistent-volume-claim Unstructed YAML: map[apiVersion:v1 kind:PersistentVolumeClaim metadata:map[name:database-persistent-volume-claim] spec:map[accessModes:[ReadWriteOnce] resources:map[requests:map[storage:2Gi]]]]
2021/02/17 06:23:18 [WARN] Provider "registry.terraform.io/-/kubectl" produced an invalid plan for kubectl_manifest.test[11], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .validate_schema: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .force_new: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:18 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[11]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:23:18 [TRACE] EvalWriteDiff: recorded DeleteThenCreate change for kubectl_manifest.test[11]
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: kubectl_manifest.test[11]
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[11]": visit complete
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:18 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[8]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:23:18 [TRACE] EvalWriteDiff: recorded NoOp change for kubectl_manifest.test[8]
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: kubectl_manifest.test[8]
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[8]": visit complete
2021-02-17T06:23:18.431Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [DEBUG] database-persistent-volume-claim Unstructed YAML: map[apiVersion:v1 kind:PersistentVolumeClaim metadata:map[name:database-persistent-volume-claim] spec:map[accessModes:[ReadWriteOnce] resources:map[requests:map[storage:2Gi]]]]
2021-02-17T06:23:18.431Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:18 [TRACE] DETECTED RESOURCE VERSION 10388 vs 10363
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:18 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[3]
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:23:18 [TRACE] EvalWriteDiff: recorded NoOp change for kubectl_manifest.test[3]
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: kubectl_manifest.test[3]
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test[3]": visit complete
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "root"
2021/02/17 06:23:18 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/02/17 06:23:18 [TRACE] vertex "root": visit complete
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test": dynamic subgraph completed successfully
2021/02/17 06:23:18 [TRACE] vertex "kubectl_manifest.test": visit complete
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "provider.kubectl (close)"
2021/02/17 06:23:18 [TRACE] vertex "provider.kubectl (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/17 06:23:18 [TRACE] vertex "provider.kubectl (close)": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: provider.kubectl (close)
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2021/02/17 06:23:18 [TRACE] GRPCProvider: Close
2021-02-17T06:23:18.441Z [DEBUG] plugin: plugin process exited: path=/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0 pid=70030
2021-02-17T06:23:18.441Z [DEBUG] plugin: plugin exited
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: provider.kubectl (close)
2021/02/17 06:23:18 [TRACE] vertex "provider.kubectl (close)": visit complete
2021/02/17 06:23:18 [TRACE] GRPCProvider: Configure
2021-02-17T06:23:18.543Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:18 [INFO] Authenticating using DefaultClient...: timestamp=2021-02-17T06:23:18.543Z
2021-02-17T06:23:18.543Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:18 [INFO]   -- Scopes: [https://www.googleapis.com/auth/compute https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-identity https://www.googleapis.com/auth/ndev.clouddns.readwrite https://www.googleapis.com/auth/devstorage.full_control https://www.googleapis.com/auth/userinfo.email]: timestamp=2021-02-17T06:23:18.543Z
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: provider.google
2021/02/17 06:23:18 [TRACE] vertex "provider.google": visit complete
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "google_compute_network.default"
2021/02/17 06:23:18 [TRACE] vertex "google_compute_network.default": starting visit (*terraform.NodePlannableResource)
2021/02/17 06:23:18 [TRACE] vertex "google_compute_network.default": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: google_compute_network.default
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: google_compute_network.default
2021/02/17 06:23:18 [TRACE] vertex "google_compute_network.default": expanding dynamic subgraph
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  google_compute_network.default - *terraform.NodePlannableResourceInstance
  ------
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "google_compute_network.default" references: []
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/17 06:23:18 [TRACE] vertex "google_compute_network.default": entering dynamic subgraph
2021/02/17 06:23:18 [TRACE] dag/walk: updating graph
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "google_compute_network.default"
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "google_compute_network.default"
2021/02/17 06:23:18 [TRACE] vertex "google_compute_network.default": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/17 06:23:18 [TRACE] vertex "google_compute_network.default": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: google_compute_network.default
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:18 [TRACE] EvalReadState: reading state for google_compute_network.default
2021/02/17 06:23:18 [TRACE] UpgradeResourceState: schema version of google_compute_network.default is still 0; calling provider "registry.terraform.io/-/google" for any other minor fixups
2021/02/17 06:23:18 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "data.google_container_engine_versions.default"
2021/02/17 06:23:18 [TRACE] vertex "data.google_container_engine_versions.default": starting visit (*terraform.NodePlannableResource)
2021/02/17 06:23:18 [TRACE] vertex "data.google_container_engine_versions.default": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: data.google_container_engine_versions.default
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: data.google_container_engine_versions.default
2021/02/17 06:23:18 [TRACE] vertex "data.google_container_engine_versions.default": expanding dynamic subgraph
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.google_container_engine_versions.default - *terraform.NodePlannableResourceInstance
  ------
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "data.google_container_engine_versions.default" references: []
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/17 06:23:18 [TRACE] vertex "data.google_container_engine_versions.default": entering dynamic subgraph
2021/02/17 06:23:18 [TRACE] dag/walk: updating graph
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "data.google_container_engine_versions.default"
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "data.google_container_engine_versions.default"
2021/02/17 06:23:18 [TRACE] vertex "data.google_container_engine_versions.default": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/17 06:23:18 [TRACE] vertex "data.google_container_engine_versions.default": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: data.google_container_engine_versions.default
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:18 [TRACE] EvalReadState: reading state for data.google_container_engine_versions.default
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalIf, early exit err: early exit
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: data.google_container_engine_versions.default
2021/02/17 06:23:18 [TRACE] vertex "data.google_container_engine_versions.default": visit complete
2021/02/17 06:23:18 [TRACE] vertex "data.google_container_engine_versions.default": dynamic subgraph completed successfully
2021/02/17 06:23:18 [TRACE] vertex "data.google_container_engine_versions.default": visit complete
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "data.google_client_config.current"
2021/02/17 06:23:18 [TRACE] vertex "data.google_client_config.current": starting visit (*terraform.NodePlannableResource)
2021/02/17 06:23:18 [TRACE] vertex "data.google_client_config.current": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: data.google_client_config.current
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: data.google_client_config.current
2021/02/17 06:23:18 [TRACE] vertex "data.google_client_config.current": expanding dynamic subgraph
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.google_client_config.current - *terraform.NodePlannableResourceInstance
  ------
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "data.google_client_config.current" references: []
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/17 06:23:18 [TRACE] vertex "data.google_client_config.current": entering dynamic subgraph
2021/02/17 06:23:18 [TRACE] dag/walk: updating graph
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "data.google_client_config.current"
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "data.google_client_config.current"
2021/02/17 06:23:18 [TRACE] vertex "data.google_client_config.current": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/17 06:23:18 [TRACE] vertex "data.google_client_config.current": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: data.google_client_config.current
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:18 [TRACE] EvalReadState: reading state for data.google_client_config.current
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalIf, early exit err: early exit
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: data.google_client_config.current
2021/02/17 06:23:18 [TRACE] vertex "data.google_client_config.current": visit complete
2021/02/17 06:23:18 [TRACE] vertex "data.google_client_config.current": dynamic subgraph completed successfully
2021/02/17 06:23:18 [TRACE] vertex "data.google_client_config.current": visit complete
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "google_compute_address.default"
2021/02/17 06:23:18 [TRACE] vertex "google_compute_address.default": starting visit (*terraform.NodePlannableResource)
2021/02/17 06:23:18 [TRACE] vertex "google_compute_address.default": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: google_compute_address.default
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: google_compute_address.default
2021/02/17 06:23:18 [TRACE] vertex "google_compute_address.default": expanding dynamic subgraph
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  google_compute_address.default - *terraform.NodePlannableResourceInstance
  ------
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "google_compute_address.default" references: []
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/17 06:23:18 [TRACE] vertex "google_compute_address.default": entering dynamic subgraph
2021/02/17 06:23:18 [TRACE] dag/walk: updating graph
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "google_compute_address.default"
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "google_compute_address.default"
2021/02/17 06:23:18 [TRACE] vertex "google_compute_address.default": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/17 06:23:18 [TRACE] vertex "google_compute_address.default": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: google_compute_address.default
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:18 [TRACE] EvalReadState: reading state for google_compute_address.default
2021/02/17 06:23:18 [TRACE] UpgradeResourceState: schema version of google_compute_address.default is still 0; calling provider "registry.terraform.io/-/google" for any other minor fixups
2021/02/17 06:23:18 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:18 [TRACE] Re-validating config for "google_compute_address.default"
2021/02/17 06:23:18 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:18 [TRACE] Re-validating config for "google_compute_network.default"
2021/02/17 06:23:18 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:18 [TRACE] GRPCProvider: PlanResourceChange
2021/02/17 06:23:18 [TRACE] GRPCProvider: PlanResourceChange
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:18 [TRACE] EvalWriteState: writing current state object for google_compute_address.default
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:23:18 [TRACE] EvalWriteDiff: recorded NoOp change for google_compute_address.default
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: google_compute_address.default
2021/02/17 06:23:18 [TRACE] vertex "google_compute_address.default": visit complete
2021/02/17 06:23:18 [TRACE] vertex "google_compute_address.default": dynamic subgraph completed successfully
2021/02/17 06:23:18 [TRACE] vertex "google_compute_address.default": visit complete
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:18 [TRACE] EvalWriteState: writing current state object for google_compute_network.default
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:23:18 [TRACE] EvalWriteDiff: recorded NoOp change for google_compute_network.default
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: google_compute_network.default
2021/02/17 06:23:18 [TRACE] vertex "google_compute_network.default": visit complete
2021/02/17 06:23:18 [TRACE] vertex "google_compute_network.default": dynamic subgraph completed successfully
2021/02/17 06:23:18 [TRACE] vertex "google_compute_network.default": visit complete
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "google_compute_subnetwork.default"
2021/02/17 06:23:18 [TRACE] vertex "google_compute_subnetwork.default": starting visit (*terraform.NodePlannableResource)
2021/02/17 06:23:18 [TRACE] vertex "google_compute_subnetwork.default": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: google_compute_subnetwork.default
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: google_compute_subnetwork.default
2021/02/17 06:23:18 [TRACE] vertex "google_compute_subnetwork.default": expanding dynamic subgraph
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  google_compute_subnetwork.default - *terraform.NodePlannableResourceInstance
  ------
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "google_compute_subnetwork.default" references: []
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/17 06:23:18 [TRACE] vertex "google_compute_subnetwork.default": entering dynamic subgraph
2021/02/17 06:23:18 [TRACE] dag/walk: updating graph
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "google_compute_subnetwork.default"
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "google_compute_subnetwork.default"
2021/02/17 06:23:18 [TRACE] vertex "google_compute_subnetwork.default": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/17 06:23:18 [TRACE] vertex "google_compute_subnetwork.default": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: google_compute_subnetwork.default
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:18 [TRACE] EvalReadState: reading state for google_compute_subnetwork.default
2021/02/17 06:23:18 [TRACE] UpgradeResourceState: schema version of google_compute_subnetwork.default is still 0; calling provider "registry.terraform.io/-/google" for any other minor fixups
2021/02/17 06:23:18 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:18 [TRACE] Re-validating config for "google_compute_subnetwork.default"
2021/02/17 06:23:18 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:18 [TRACE] GRPCProvider: PlanResourceChange
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:18 [TRACE] EvalWriteState: writing current state object for google_compute_subnetwork.default
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:23:18 [TRACE] EvalWriteDiff: recorded NoOp change for google_compute_subnetwork.default
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: google_compute_subnetwork.default
2021/02/17 06:23:18 [TRACE] vertex "google_compute_subnetwork.default": visit complete
2021/02/17 06:23:18 [TRACE] vertex "google_compute_subnetwork.default": dynamic subgraph completed successfully
2021/02/17 06:23:18 [TRACE] vertex "google_compute_subnetwork.default": visit complete
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "output.subnetwork_name"
2021/02/17 06:23:18 [TRACE] vertex "output.subnetwork_name": starting visit (*terraform.NodeApplyableOutput)
2021/02/17 06:23:18 [TRACE] vertex "output.subnetwork_name": evaluating
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "output.network"
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "google_container_cluster.default"
2021/02/17 06:23:18 [TRACE] vertex "google_container_cluster.default": starting visit (*terraform.NodePlannableResource)
2021/02/17 06:23:18 [TRACE] vertex "google_container_cluster.default": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: google_container_cluster.default
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: google_container_cluster.default
2021/02/17 06:23:18 [TRACE] vertex "google_container_cluster.default": expanding dynamic subgraph
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/17 06:23:18 [TRACE] vertex "output.network": starting visit (*terraform.NodeApplyableOutput)
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  google_container_cluster.default - *terraform.NodePlannableResourceInstance
  ------
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/17 06:23:18 [TRACE] vertex "output.network": evaluating
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: output.network
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: output.subnetwork_name
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/02/17 06:23:18 [DEBUG] ReferenceTransformer: "google_container_cluster.default" references: []
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/17 06:23:18 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/17 06:23:18 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/17 06:23:18 [TRACE] vertex "google_container_cluster.default": entering dynamic subgraph
2021/02/17 06:23:18 [TRACE] dag/walk: updating graph
2021/02/17 06:23:18 [TRACE] dag/walk: added new vertex: "google_container_cluster.default"
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "google_container_cluster.default"
2021/02/17 06:23:18 [TRACE] vertex "google_container_cluster.default": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/17 06:23:18 [TRACE] vertex "google_container_cluster.default": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: google_container_cluster.default
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:18 [TRACE] EvalReadState: reading state for google_container_cluster.default
2021/02/17 06:23:18 [TRACE] UpgradeResourceState: schema version of google_container_cluster.default is still 1; calling provider "registry.terraform.io/-/google" for any other minor fixups
2021/02/17 06:23:18 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:18 [TRACE] EvalWriteOutput: Saving value for output.subnetwork_name in state
2021/02/17 06:23:18 [TRACE] EvalWriteOutput: Saving Create change for output.subnetwork_name in changeset
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: output.subnetwork_name
2021/02/17 06:23:18 [TRACE] vertex "output.subnetwork_name": visit complete
2021/02/17 06:23:18 [TRACE] EvalWriteOutput: Saving value for output.network in state
2021/02/17 06:23:18 [TRACE] EvalWriteOutput: Saving Create change for output.network in changeset
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: output.network
2021/02/17 06:23:18 [TRACE] vertex "output.network": visit complete
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:18 [TRACE] Re-validating config for "google_container_cluster.default"
2021/02/17 06:23:18 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:18 [TRACE] GRPCProvider: PlanResourceChange
2021/02/17 06:23:18 [WARN] Provider "registry.terraform.io/-/google" produced an invalid plan for google_container_cluster.default, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .default_snat_status: block count in plan (1) disagrees with count in config (0)
      - .network_policy: block count in plan (1) disagrees with count in config (0)
      - .node_config: block count in plan (1) disagrees with count in config (0)
      - .node_pool: block count in plan (1) disagrees with count in config (0)
      - .cluster_autoscaling: block count in plan (1) disagrees with count in config (0)
      - .database_encryption: block count in plan (1) disagrees with count in config (0)
      - .master_auth: block count in plan (1) disagrees with count in config (0)
      - .release_channel: block count in plan (1) disagrees with count in config (0)
      - .addons_config: block count in plan (1) disagrees with count in config (0)
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:18 [TRACE] EvalWriteState: writing current state object for google_container_cluster.default
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:23:18 [TRACE] EvalWriteDiff: recorded NoOp change for google_container_cluster.default
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: google_container_cluster.default
2021/02/17 06:23:18 [TRACE] vertex "google_container_cluster.default": visit complete
2021/02/17 06:23:18 [TRACE] vertex "google_container_cluster.default": dynamic subgraph completed successfully
2021/02/17 06:23:18 [TRACE] vertex "google_container_cluster.default": visit complete
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "output.cluster_name"
2021/02/17 06:23:18 [TRACE] vertex "output.cluster_name": starting visit (*terraform.NodeApplyableOutput)
2021/02/17 06:23:18 [TRACE] vertex "output.cluster_name": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: output.cluster_name
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "provider.google (close)"
2021/02/17 06:23:18 [TRACE] vertex "provider.google (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/17 06:23:18 [TRACE] vertex "provider.google (close)": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: provider.google (close)
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2021/02/17 06:23:18 [TRACE] GRPCProvider: Close
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "output.cluster_location"
2021/02/17 06:23:18 [TRACE] vertex "output.cluster_location": starting visit (*terraform.NodeApplyableOutput)
2021/02/17 06:23:18 [TRACE] vertex "output.cluster_location": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: output.cluster_location
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/02/17 06:23:18 [TRACE] EvalWriteOutput: Saving value for output.cluster_name in state
2021/02/17 06:23:18 [TRACE] EvalWriteOutput: Saving Create change for output.cluster_name in changeset
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: output.cluster_name
2021/02/17 06:23:18 [TRACE] vertex "output.cluster_name": visit complete
2021/02/17 06:23:18 [TRACE] EvalWriteOutput: Saving value for output.cluster_location in state
2021/02/17 06:23:18 [TRACE] EvalWriteOutput: Saving Create change for output.cluster_location in changeset
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: output.cluster_location
2021/02/17 06:23:18 [TRACE] vertex "output.cluster_location": visit complete
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/17 06:23:18 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/17 06:23:18 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2021/02/17 06:23:18 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2021/02/17 06:23:18 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2021/02/17 06:23:18 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-17T06:23:18.597Z [DEBUG] plugin: plugin process exited: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5 pid=70039
2021-02-17T06:23:18.597Z [DEBUG] plugin: plugin exited
2021/02/17 06:23:18 [TRACE] [walkPlan] Exiting eval tree: provider.google (close)
2021/02/17 06:23:18 [TRACE] vertex "provider.google (close)": visit complete
2021/02/17 06:23:18 [TRACE] dag/walk: visiting "root"
2021/02/17 06:23:18 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/02/17 06:23:18 [TRACE] vertex "root": visit complete
2021/02/17 06:23:18 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2021/02/17 06:23:20 [INFO] backend/local: apply calling Apply
2021/02/17 06:23:20 [INFO] terraform: building graph: GraphTypeApply
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/17 06:23:20 [TRACE] ConfigTransformer: Starting for path: 
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  data.google_client_config.current (prepare state) - *terraform.NodeApplyableResource
  data.google_container_engine_versions.default (prepare state) - *terraform.NodeApplyableResource
  data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
  google_compute_address.default (prepare state) - *terraform.NodeApplyableResource
  google_compute_network.default (prepare state) - *terraform.NodeApplyableResource
  google_compute_subnetwork.default (prepare state) - *terraform.NodeApplyableResource
  google_container_cluster.default (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  ------
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/17 06:23:20 [TRACE] DiffTransformer starting
2021/02/17 06:23:20 [TRACE] DiffTransformer: found Create change for kubectl_manifest.test[5] 
2021/02/17 06:23:20 [TRACE] DiffTransformer: kubectl_manifest.test[5] will be represented by kubectl_manifest.test[5]
2021/02/17 06:23:20 [TRACE] DiffTransformer: found NoOp change for kubectl_manifest.test[1] 
2021/02/17 06:23:20 [TRACE] DiffTransformer: found Create change for kubectl_manifest.test[0] 
2021/02/17 06:23:20 [TRACE] DiffTransformer: kubectl_manifest.test[0] will be represented by kubectl_manifest.test[0]
2021/02/17 06:23:20 [TRACE] DiffTransformer: found NoOp change for kubectl_manifest.test[10] 
2021/02/17 06:23:20 [TRACE] DiffTransformer: found NoOp change for kubectl_manifest.test[9] 
2021/02/17 06:23:20 [TRACE] DiffTransformer: found NoOp change for kubectl_manifest.test[12] 
2021/02/17 06:23:20 [TRACE] DiffTransformer: found DeleteThenCreate change for kubectl_manifest.test[7] 
2021/02/17 06:23:20 [TRACE] DiffTransformer: kubectl_manifest.test[7] will be represented by kubectl_manifest.test[7]
2021/02/17 06:23:20 [TRACE] DiffTransformer: kubectl_manifest.test[7] will be represented for destruction by kubectl_manifest.test[7] (destroy)
2021/02/17 06:23:20 [TRACE] DiffTransformer: found NoOp change for kubectl_manifest.test[2] 
2021/02/17 06:23:20 [TRACE] DiffTransformer: found Update change for kubectl_manifest.test[4] 
2021/02/17 06:23:20 [TRACE] DiffTransformer: kubectl_manifest.test[4] will be represented by kubectl_manifest.test[4]
2021/02/17 06:23:20 [TRACE] DiffTransformer: found NoOp change for kubectl_manifest.test[6] 
2021/02/17 06:23:20 [TRACE] DiffTransformer: found DeleteThenCreate change for kubectl_manifest.test[11] 
2021/02/17 06:23:20 [TRACE] DiffTransformer: kubectl_manifest.test[11] will be represented by kubectl_manifest.test[11]
2021/02/17 06:23:20 [TRACE] DiffTransformer: kubectl_manifest.test[11] will be represented for destruction by kubectl_manifest.test[11] (destroy)
2021/02/17 06:23:20 [TRACE] DiffTransformer: found NoOp change for kubectl_manifest.test[8] 
2021/02/17 06:23:20 [TRACE] DiffTransformer: found NoOp change for kubectl_manifest.test[3] 
2021/02/17 06:23:20 [TRACE] DiffTransformer: found NoOp change for google_compute_address.default 
2021/02/17 06:23:20 [TRACE] DiffTransformer: found NoOp change for google_compute_network.default 
2021/02/17 06:23:20 [TRACE] DiffTransformer: found NoOp change for google_compute_subnetwork.default 
2021/02/17 06:23:20 [TRACE] DiffTransformer: found NoOp change for google_container_cluster.default 
2021/02/17 06:23:20 [TRACE] DiffTransformer complete
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  data.google_client_config.current (prepare state) - *terraform.NodeApplyableResource
  data.google_container_engine_versions.default (prepare state) - *terraform.NodeApplyableResource
  data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
  google_compute_address.default (prepare state) - *terraform.NodeApplyableResource
  google_compute_network.default (prepare state) - *terraform.NodeApplyableResource
  google_compute_subnetwork.default (prepare state) - *terraform.NodeApplyableResource
  google_container_cluster.default (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[0] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[11] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
  kubectl_manifest.test[4] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[5] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[7] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
  ------
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.OrphanResourceTransformer
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.OrphanResourceTransformer (no changes)
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/17 06:23:20 [TRACE] AttachResourceConfigTransformer: attaching to "google_container_cluster.default (prepare state)" (*terraform.NodeApplyableResource) config from main.tf:25,1-46
2021/02/17 06:23:20 [TRACE] AttachResourceConfigTransformer: attaching to "data.google_client_config.current (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:18, Column:1, Byte:458}, End:hcl.Pos{Line:18, Column:38, Byte:495}}
2021/02/17 06:23:20 [TRACE] AttachResourceConfigTransformer: attaching to "kubectl_manifest.test[0]" (*terraform.NodeApplyableResourceInstance) config from k8s.tf:19,1-35
2021/02/17 06:23:20 [TRACE] AttachResourceConfigTransformer: attaching to "kubectl_manifest.test[7]" (*terraform.NodeApplyableResourceInstance) config from k8s.tf:19,1-35
2021/02/17 06:23:20 [TRACE] AttachResourceConfigTransformer: attaching to "kubectl_manifest.test[4]" (*terraform.NodeApplyableResourceInstance) config from k8s.tf:19,1-35
2021/02/17 06:23:20 [TRACE] AttachResourceConfigTransformer: attaching to "kubectl_manifest.test[11] (destroy)" (*terraform.NodeDestroyResourceInstance) config from k8s.tf:19,1-35
2021/02/17 06:23:20 [TRACE] AttachResourceConfigTransformer: attaching to "kubectl_manifest.test[11]" (*terraform.NodeApplyableResourceInstance) config from k8s.tf:19,1-35
2021/02/17 06:23:20 [TRACE] AttachResourceConfigTransformer: attaching to "google_compute_network.default (prepare state)" (*terraform.NodeApplyableResource) config from main.tf:5,1-44
2021/02/17 06:23:20 [TRACE] AttachResourceConfigTransformer: attaching to "google_compute_subnetwork.default (prepare state)" (*terraform.NodeApplyableResource) config from main.tf:10,1-47
2021/02/17 06:23:20 [TRACE] AttachResourceConfigTransformer: attaching to "data.google_container_engine_versions.default (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"main.tf", Start:hcl.Pos{Line:21, Column:1, Byte:501}, End:hcl.Pos{Line:21, Column:50, Byte:550}}
2021/02/17 06:23:20 [TRACE] AttachResourceConfigTransformer: attaching to "data.kubectl_filename_list.manifests (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"k8s.tf", Start:hcl.Pos{Line:15, Column:1, Byte:569}, End:hcl.Pos{Line:15, Column:41, Byte:609}}
2021/02/17 06:23:20 [TRACE] AttachResourceConfigTransformer: attaching to "kubectl_manifest.test[5]" (*terraform.NodeApplyableResourceInstance) config from k8s.tf:19,1-35
2021/02/17 06:23:20 [TRACE] AttachResourceConfigTransformer: attaching to "google_compute_address.default (prepare state)" (*terraform.NodeApplyableResource) config from k8s.tf:10,1-44
2021/02/17 06:23:20 [TRACE] AttachResourceConfigTransformer: attaching to "kubectl_manifest.test (prepare state)" (*terraform.NodeApplyableResource) config from k8s.tf:19,1-35
2021/02/17 06:23:20 [TRACE] AttachResourceConfigTransformer: attaching to "kubectl_manifest.test[7] (destroy)" (*terraform.NodeDestroyResourceInstance) config from k8s.tf:19,1-35
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/17 06:23:20 [DEBUG] Resource instance state not found for node "kubectl_manifest.test[0]", instance kubectl_manifest.test[0]
2021/02/17 06:23:20 [DEBUG] Resource instance state not found for node "kubectl_manifest.test[5]", instance kubectl_manifest.test[5]
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  data.google_client_config.current (prepare state) - *terraform.NodeApplyableResource
  data.google_container_engine_versions.default (prepare state) - *terraform.NodeApplyableResource
  data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
  google_compute_address.default (prepare state) - *terraform.NodeApplyableResource
  google_compute_network.default (prepare state) - *terraform.NodeApplyableResource
  google_compute_subnetwork.default (prepare state) - *terraform.NodeApplyableResource
  google_container_cluster.default (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[0] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[11] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
  kubectl_manifest.test[4] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[5] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[7] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  data.google_client_config.current (prepare state) - *terraform.NodeApplyableResource
  data.google_container_engine_versions.default (prepare state) - *terraform.NodeApplyableResource
  data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
  google_compute_address.default (prepare state) - *terraform.NodeApplyableResource
  google_compute_network.default (prepare state) - *terraform.NodeApplyableResource
  google_compute_subnetwork.default (prepare state) - *terraform.NodeApplyableResource
  google_container_cluster.default (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[0] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[11] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
  kubectl_manifest.test[4] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[5] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[7] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/17 06:23:20 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/17 06:23:20 [TRACE] ProviderConfigTransformer: attaching to "provider.kubernetes" provider configuration from k8s.tf:1,1-22
2021/02/17 06:23:20 [TRACE] ProviderConfigTransformer: attaching to "provider.google" provider configuration from main.tf:1,1-18
2021/02/17 06:23:20 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  data.google_client_config.current (prepare state) - *terraform.NodeApplyableResource
  data.google_container_engine_versions.default (prepare state) - *terraform.NodeApplyableResource
  data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
  google_compute_address.default (prepare state) - *terraform.NodeApplyableResource
  google_compute_network.default (prepare state) - *terraform.NodeApplyableResource
  google_compute_subnetwork.default (prepare state) - *terraform.NodeApplyableResource
  google_container_cluster.default (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[0] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[11] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
  kubectl_manifest.test[4] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[5] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[7] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:20 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/17 06:23:20 [DEBUG] adding implicit provider configuration provider.kubectl, implied first by data.kubectl_filename_list.manifests (prepare state)
2021/02/17 06:23:20 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  data.google_client_config.current (prepare state) - *terraform.NodeApplyableResource
  data.google_container_engine_versions.default (prepare state) - *terraform.NodeApplyableResource
  data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
  google_compute_address.default (prepare state) - *terraform.NodeApplyableResource
  google_compute_network.default (prepare state) - *terraform.NodeApplyableResource
  google_compute_subnetwork.default (prepare state) - *terraform.NodeApplyableResource
  google_container_cluster.default (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[0] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[11] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
  kubectl_manifest.test[4] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[5] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[7] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:20 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/17 06:23:20 [TRACE] ProviderTransformer: kubectl_manifest.test[11] (destroy) is provided by provider.kubectl or inherited equivalent
2021/02/17 06:23:20 [TRACE] ProviderTransformer: google_container_cluster.default (prepare state) is provided by provider.google or inherited equivalent
2021/02/17 06:23:20 [TRACE] ProviderTransformer: data.google_client_config.current (prepare state) is provided by provider.google or inherited equivalent
2021/02/17 06:23:20 [TRACE] ProviderTransformer: kubectl_manifest.test[0] is provided by provider.kubectl or inherited equivalent
2021/02/17 06:23:20 [TRACE] ProviderTransformer: kubectl_manifest.test[7] is provided by provider.kubectl or inherited equivalent
2021/02/17 06:23:20 [TRACE] ProviderTransformer: kubectl_manifest.test[4] is provided by provider.kubectl or inherited equivalent
2021/02/17 06:23:20 [TRACE] ProviderTransformer: kubectl_manifest.test[11] is provided by provider.kubectl or inherited equivalent
2021/02/17 06:23:20 [TRACE] ProviderTransformer: google_compute_network.default (prepare state) is provided by provider.google or inherited equivalent
2021/02/17 06:23:20 [TRACE] ProviderTransformer: google_compute_subnetwork.default (prepare state) is provided by provider.google or inherited equivalent
2021/02/17 06:23:20 [TRACE] ProviderTransformer: data.google_container_engine_versions.default (prepare state) is provided by provider.google or inherited equivalent
2021/02/17 06:23:20 [TRACE] ProviderTransformer: data.kubectl_filename_list.manifests (prepare state) is provided by provider.kubectl or inherited equivalent
2021/02/17 06:23:20 [TRACE] ProviderTransformer: kubectl_manifest.test[5] is provided by provider.kubectl or inherited equivalent
2021/02/17 06:23:20 [TRACE] ProviderTransformer: google_compute_address.default (prepare state) is provided by provider.google or inherited equivalent
2021/02/17 06:23:20 [TRACE] ProviderTransformer: kubectl_manifest.test (prepare state) is provided by provider.kubectl or inherited equivalent
2021/02/17 06:23:20 [TRACE] ProviderTransformer: kubectl_manifest.test[7] (destroy) is provided by provider.kubectl or inherited equivalent
2021/02/17 06:23:20 [TRACE] ProviderTransformer: exact match for provider.google serving data.google_container_engine_versions.default (prepare state)
2021/02/17 06:23:20 [DEBUG] ProviderTransformer: "data.google_container_engine_versions.default (prepare state)" (*terraform.NodeApplyableResource) needs provider.google
2021/02/17 06:23:20 [TRACE] ProviderTransformer: exact match for provider.google serving google_compute_address.default (prepare state)
2021/02/17 06:23:20 [DEBUG] ProviderTransformer: "google_compute_address.default (prepare state)" (*terraform.NodeApplyableResource) needs provider.google
2021/02/17 06:23:20 [TRACE] ProviderTransformer: exact match for provider.kubectl serving kubectl_manifest.test[7] (destroy)
2021/02/17 06:23:20 [DEBUG] ProviderTransformer: "kubectl_manifest.test[7] (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider.kubectl
2021/02/17 06:23:20 [TRACE] ProviderTransformer: exact match for provider.kubectl serving kubectl_manifest.test[4]
2021/02/17 06:23:20 [DEBUG] ProviderTransformer: "kubectl_manifest.test[4]" (*terraform.NodeApplyableResourceInstance) needs provider.kubectl
2021/02/17 06:23:20 [TRACE] ProviderTransformer: exact match for provider.google serving google_compute_subnetwork.default (prepare state)
2021/02/17 06:23:20 [DEBUG] ProviderTransformer: "google_compute_subnetwork.default (prepare state)" (*terraform.NodeApplyableResource) needs provider.google
2021/02/17 06:23:20 [TRACE] ProviderTransformer: exact match for provider.kubectl serving kubectl_manifest.test[0]
2021/02/17 06:23:20 [DEBUG] ProviderTransformer: "kubectl_manifest.test[0]" (*terraform.NodeApplyableResourceInstance) needs provider.kubectl
2021/02/17 06:23:20 [TRACE] ProviderTransformer: exact match for provider.kubectl serving data.kubectl_filename_list.manifests (prepare state)
2021/02/17 06:23:20 [DEBUG] ProviderTransformer: "data.kubectl_filename_list.manifests (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubectl
2021/02/17 06:23:20 [TRACE] ProviderTransformer: exact match for provider.kubectl serving kubectl_manifest.test[5]
2021/02/17 06:23:20 [DEBUG] ProviderTransformer: "kubectl_manifest.test[5]" (*terraform.NodeApplyableResourceInstance) needs provider.kubectl
2021/02/17 06:23:20 [TRACE] ProviderTransformer: exact match for provider.kubectl serving kubectl_manifest.test (prepare state)
2021/02/17 06:23:20 [DEBUG] ProviderTransformer: "kubectl_manifest.test (prepare state)" (*terraform.NodeApplyableResource) needs provider.kubectl
2021/02/17 06:23:20 [TRACE] ProviderTransformer: exact match for provider.kubectl serving kubectl_manifest.test[11] (destroy)
2021/02/17 06:23:20 [DEBUG] ProviderTransformer: "kubectl_manifest.test[11] (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider.kubectl
2021/02/17 06:23:20 [TRACE] ProviderTransformer: exact match for provider.google serving data.google_client_config.current (prepare state)
2021/02/17 06:23:20 [DEBUG] ProviderTransformer: "data.google_client_config.current (prepare state)" (*terraform.NodeApplyableResource) needs provider.google
2021/02/17 06:23:20 [TRACE] ProviderTransformer: exact match for provider.google serving google_compute_network.default (prepare state)
2021/02/17 06:23:20 [DEBUG] ProviderTransformer: "google_compute_network.default (prepare state)" (*terraform.NodeApplyableResource) needs provider.google
2021/02/17 06:23:20 [TRACE] ProviderTransformer: exact match for provider.google serving google_container_cluster.default (prepare state)
2021/02/17 06:23:20 [DEBUG] ProviderTransformer: "google_container_cluster.default (prepare state)" (*terraform.NodeApplyableResource) needs provider.google
2021/02/17 06:23:20 [TRACE] ProviderTransformer: exact match for provider.kubectl serving kubectl_manifest.test[11]
2021/02/17 06:23:20 [DEBUG] ProviderTransformer: "kubectl_manifest.test[11]" (*terraform.NodeApplyableResourceInstance) needs provider.kubectl
2021/02/17 06:23:20 [TRACE] ProviderTransformer: exact match for provider.kubectl serving kubectl_manifest.test[7]
2021/02/17 06:23:20 [DEBUG] ProviderTransformer: "kubectl_manifest.test[7]" (*terraform.NodeApplyableResourceInstance) needs provider.kubectl
2021/02/17 06:23:20 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  data.google_client_config.current (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_network.default (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_subnetwork.default (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  google_container_cluster.default (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[0] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[11] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[4] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[5] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[7] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:20 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/17 06:23:20 [DEBUG] pruning unused provider.kubernetes
2021/02/17 06:23:20 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  data.google_client_config.current (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_network.default (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_subnetwork.default (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  google_container_cluster.default (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[0] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[11] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[4] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[5] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[7] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:20 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/17 06:23:20 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  data.google_client_config.current (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_network.default (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_subnetwork.default (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  google_container_cluster.default (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[0] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[11] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[4] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[5] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[7] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.google
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching resource schema to google_compute_address.default (prepare state)
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching resource schema to kubectl_manifest.test (prepare state)
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching resource schema to kubectl_manifest.test[7] (destroy)
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching resource schema to kubectl_manifest.test[4]
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching resource schema to kubectl_manifest.test[11] (destroy)
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching resource schema to google_container_cluster.default (prepare state)
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching resource schema to data.google_client_config.current (prepare state)
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching resource schema to kubectl_manifest.test[0]
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching resource schema to kubectl_manifest.test[7]
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.kubectl
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching resource schema to kubectl_manifest.test[11]
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching resource schema to kubectl_manifest.test[5]
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching resource schema to google_compute_network.default (prepare state)
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching resource schema to google_compute_subnetwork.default (prepare state)
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching resource schema to data.google_container_engine_versions.default (prepare state)
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching resource schema to data.kubectl_filename_list.manifests (prepare state)
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "data.kubectl_filename_list.manifests (prepare state)" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[5]" references: [data.kubectl_filename_list.manifests (prepare state) data.kubectl_filename_list.manifests (prepare state)]
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "output.cluster_region" references: [var.region]
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "google_compute_network.default (prepare state)" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "google_compute_subnetwork.default (prepare state)" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "data.google_container_engine_versions.default (prepare state)" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "provider.google" references: [var.region]
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "google_compute_address.default (prepare state)" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "kubectl_manifest.test (prepare state)" references: [data.kubectl_filename_list.manifests (prepare state)]
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[7] (destroy)" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[7]" references: [data.kubectl_filename_list.manifests (prepare state) data.kubectl_filename_list.manifests (prepare state)]
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[4]" references: [data.kubectl_filename_list.manifests (prepare state) data.kubectl_filename_list.manifests (prepare state)]
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[11] (destroy)" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "var.region" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "var.network_name" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "google_container_cluster.default (prepare state)" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "data.google_client_config.current (prepare state)" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[0]" references: [data.kubectl_filename_list.manifests (prepare state) data.kubectl_filename_list.manifests (prepare state)]
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "output.subnetwork_name" references: [google_compute_subnetwork.default (prepare state)]
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "output.cluster_name" references: [google_container_cluster.default (prepare state)]
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "output.network" references: [google_compute_subnetwork.default (prepare state)]
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "provider.kubectl" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[11]" references: [data.kubectl_filename_list.manifests (prepare state) data.kubectl_filename_list.manifests (prepare state)]
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "var.location" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "output.cluster_location" references: [google_container_cluster.default (prepare state)]
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  data.google_client_config.current (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  data.google_container_engine_versions.default (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  google_compute_address.default (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_network.default (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  google_compute_subnetwork.default (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  google_container_cluster.default (prepare state) - *terraform.NodeApplyableResource
    provider.google - *terraform.NodeApplyableProvider
  kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[0] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[11] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[4] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[5] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[7] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  output.cluster_location - *terraform.NodeApplyableOutput
    google_container_cluster.default (prepare state) - *terraform.NodeApplyableResource
  output.cluster_name - *terraform.NodeApplyableOutput
    google_container_cluster.default (prepare state) - *terraform.NodeApplyableResource
  output.cluster_region - *terraform.NodeApplyableOutput
    var.region - *terraform.NodeRootVariable
  output.network - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default (prepare state) - *terraform.NodeApplyableResource
  output.subnetwork_name - *terraform.NodeApplyableOutput
    google_compute_subnetwork.default (prepare state) - *terraform.NodeApplyableResource
  provider.google - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.kubectl - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/17 06:23:20 [TRACE] AttachDependenciesTransformer: kubectl_manifest.test depends on []
2021/02/17 06:23:20 [TRACE] AttachDependenciesTransformer: kubectl_manifest.test depends on []
2021/02/17 06:23:20 [TRACE] AttachDependenciesTransformer: kubectl_manifest.test depends on []
2021/02/17 06:23:20 [TRACE] AttachDependenciesTransformer: kubectl_manifest.test depends on []
2021/02/17 06:23:20 [TRACE] AttachDependenciesTransformer: kubectl_manifest.test depends on []
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/17 06:23:20 [TRACE] DestroyEdgeTransformer: "kubectl_manifest.test[7] (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubectl_manifest.test[7]
2021/02/17 06:23:20 [TRACE] DestroyEdgeTransformer: "kubectl_manifest.test[11] (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubectl_manifest.test[11]
2021/02/17 06:23:20 [TRACE] DestroyEdgeTransformer: connecting creator "kubectl_manifest.test[11]" with destroyer "kubectl_manifest.test[11] (destroy)"
2021/02/17 06:23:20 [TRACE] DestroyEdgeTransformer: connecting creator "kubectl_manifest.test[7]" with destroyer "kubectl_manifest.test[7] (destroy)"
2021/02/17 06:23:20 [TRACE] DestroyEdgeTransformer: constructing temporary graph for analysis of references, starting from:
kubectl_manifest.test[11] - *terraform.NodeAbstractResourceInstance
kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
kubectl_manifest.test[7] - *terraform.NodeAbstractResourceInstance
kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
2021/02/17 06:23:20 [TRACE] DestroyEdgeTransformer: running *terraform.LocalTransformer on temporary graph
2021/02/17 06:23:20 [TRACE] DestroyEdgeTransformer: running *terraform.OutputTransformer on temporary graph
2021/02/17 06:23:20 [TRACE] DestroyEdgeTransformer: running *terraform.AttachResourceConfigTransformer on temporary graph
2021/02/17 06:23:20 [TRACE] AttachResourceConfigTransformer: attaching to "kubectl_manifest.test[7]" (*terraform.NodeAbstractResourceInstance) config from k8s.tf:19,1-35
2021/02/17 06:23:20 [TRACE] AttachResourceConfigTransformer: attaching to "kubectl_manifest.test[7] (destroy)" (*terraform.NodeDestroyResourceInstance) config from k8s.tf:19,1-35
2021/02/17 06:23:20 [TRACE] AttachResourceConfigTransformer: attaching to "kubectl_manifest.test[11]" (*terraform.NodeAbstractResourceInstance) config from k8s.tf:19,1-35
2021/02/17 06:23:20 [TRACE] AttachResourceConfigTransformer: attaching to "kubectl_manifest.test[11] (destroy)" (*terraform.NodeDestroyResourceInstance) config from k8s.tf:19,1-35
2021/02/17 06:23:20 [TRACE] DestroyEdgeTransformer: running *terraform.AttachStateTransformer on temporary graph
2021/02/17 06:23:20 [TRACE] DestroyEdgeTransformer: running *terraform.RootVariableTransformer on temporary graph
2021/02/17 06:23:20 [TRACE] DestroyEdgeTransformer: running *terraform.ModuleVariableTransformer on temporary graph
2021/02/17 06:23:20 [TRACE] DestroyEdgeTransformer: running *terraform.graphTransformerMulti on temporary graph
2021/02/17 06:23:20 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/17 06:23:20 [TRACE] ProviderConfigTransformer: attaching to "provider.kubernetes" provider configuration from k8s.tf:1,1-22
2021/02/17 06:23:20 [TRACE] ProviderConfigTransformer: attaching to "provider.google" provider configuration from main.tf:1,1-18
2021/02/17 06:23:20 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubectl_manifest.test[11] - *terraform.NodeAbstractResourceInstance
  kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
  kubectl_manifest.test[7] - *terraform.NodeAbstractResourceInstance
  kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:20 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/17 06:23:20 [DEBUG] adding implicit provider configuration provider.kubectl, implied first by kubectl_manifest.test[11]
2021/02/17 06:23:20 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  kubectl_manifest.test[11] - *terraform.NodeAbstractResourceInstance
  kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
  kubectl_manifest.test[7] - *terraform.NodeAbstractResourceInstance
  kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:20 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/17 06:23:20 [TRACE] ProviderTransformer: kubectl_manifest.test[7] is provided by provider.kubectl or inherited equivalent
2021/02/17 06:23:20 [TRACE] ProviderTransformer: kubectl_manifest.test[7] (destroy) is provided by provider.kubectl or inherited equivalent
2021/02/17 06:23:20 [TRACE] ProviderTransformer: kubectl_manifest.test[11] (destroy) is provided by provider.kubectl or inherited equivalent
2021/02/17 06:23:20 [TRACE] ProviderTransformer: kubectl_manifest.test[11] is provided by provider.kubectl or inherited equivalent
2021/02/17 06:23:20 [TRACE] ProviderTransformer: exact match for provider.kubectl serving kubectl_manifest.test[7] (destroy)
2021/02/17 06:23:20 [DEBUG] ProviderTransformer: "kubectl_manifest.test[7] (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider.kubectl
2021/02/17 06:23:20 [TRACE] ProviderTransformer: exact match for provider.kubectl serving kubectl_manifest.test[11] (destroy)
2021/02/17 06:23:20 [DEBUG] ProviderTransformer: "kubectl_manifest.test[11] (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider.kubectl
2021/02/17 06:23:20 [TRACE] ProviderTransformer: exact match for provider.kubectl serving kubectl_manifest.test[11]
2021/02/17 06:23:20 [DEBUG] ProviderTransformer: "kubectl_manifest.test[11]" (*terraform.NodeAbstractResourceInstance) needs provider.kubectl
2021/02/17 06:23:20 [TRACE] ProviderTransformer: exact match for provider.kubectl serving kubectl_manifest.test[7]
2021/02/17 06:23:20 [DEBUG] ProviderTransformer: "kubectl_manifest.test[7]" (*terraform.NodeAbstractResourceInstance) needs provider.kubectl
2021/02/17 06:23:20 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubectl_manifest.test[11] - *terraform.NodeAbstractResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[7] - *terraform.NodeAbstractResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubernetes - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:20 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/17 06:23:20 [DEBUG] pruning unused provider.google
2021/02/17 06:23:20 [DEBUG] pruning unused provider.kubernetes
2021/02/17 06:23:20 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  kubectl_manifest.test[11] - *terraform.NodeAbstractResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[7] - *terraform.NodeAbstractResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  output.cluster_location - *terraform.NodeApplyableOutput
  output.cluster_name - *terraform.NodeApplyableOutput
  output.cluster_region - *terraform.NodeApplyableOutput
  output.network - *terraform.NodeApplyableOutput
  output.subnetwork_name - *terraform.NodeApplyableOutput
  provider.kubectl - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:20 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/17 06:23:20 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/17 06:23:20 [TRACE] DestroyEdgeTransformer: running *terraform.AttachSchemaTransformer on temporary graph
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching resource schema to kubectl_manifest.test[7]
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching resource schema to kubectl_manifest.test[7] (destroy)
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching resource schema to kubectl_manifest.test[11] (destroy)
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.kubectl
2021/02/17 06:23:20 [TRACE] AttachSchemaTransformer: attaching resource schema to kubectl_manifest.test[11]
2021/02/17 06:23:20 [TRACE] DestroyEdgeTransformer: running *terraform.ReferenceTransformer on temporary graph
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[11]" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "output.network" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "output.cluster_region" references: [var.region]
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "output.subnetwork_name" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "output.cluster_location" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[7]" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[7] (destroy)" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "kubectl_manifest.test[11] (destroy)" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "var.location" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "var.network_name" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "output.cluster_name" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "var.region" references: []
2021/02/17 06:23:20 [DEBUG] ReferenceTransformer: "provider.kubectl" references: []
2021/02/17 06:23:20 [TRACE] DestroyEdgeTransformer: temporary reference graph:
kubectl_manifest.test[11]
  provider.kubectl
kubectl_manifest.test[11] (destroy)
  provider.kubectl
kubectl_manifest.test[7]
  provider.kubectl
kubectl_manifest.test[7] (destroy)
  provider.kubectl
output.cluster_location
output.cluster_name
output.cluster_region
  var.region
output.network
output.subnetwork_name
provider.kubectl
var.location
var.network_name
var.region
2021/02/17 06:23:20 [TRACE] DestroyEdgeTransformer: creation node "kubectl_manifest.test[7]" references [provider.kubectl]
2021/02/17 06:23:20 [TRACE] DestroyEdgeTransformer: creation node "kubectl_manifest.test[7] (destroy)" references [provider.kubectl]
2021/02/17 06:23:20 [TRACE] DestroyEdgeTransformer: creation node "kubectl_manifest.test[11]" references [provider.kubectl]
2021/02/17 06:23:20 [TRACE] DestroyEdgeTransformer: creation node "kubectl_manifest.test[11] (destroy)" references [provider.kubectl]
2021/02/17 06:23:20 DestroyEdgeTransformer: pruning unused resource node data.google_container_engine_versions.default (prepare state)
2021/02/17 06:23:20 DestroyEdgeTransformer: pruning unused resource node google_compute_network.default (prepare state)
2021/02/17 06:23:20 DestroyEdgeTransformer: pruning unused resource node google_compute_subnetwork.default (prepare state)
2021/02/17 06:23:20 DestroyEdgeTransformer: pruning unused resource node google_compute_address.default (prepare state)
2021/02/17 06:23:20 DestroyEdgeTransformer: pruning unused resource node google_container_cluster.default (prepare state)
2021/02/17 06:23:20 DestroyEdgeTransformer: pruning unused resource node data.google_client_config.current (prepare state)
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer with new graph:
  data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[0] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[11] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[4] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[5] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[7] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  output.cluster_location - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
  output.cluster_name - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
  output.cluster_region - *terraform.NodeApplyableOutput
    var.region - *terraform.NodeRootVariable
  output.network - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
  output.subnetwork_name - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
  provider.google - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.kubectl - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.PruneUnusedValuesTransformer
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.PruneUnusedValuesTransformer (no changes)
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[0] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[11] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[4] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[5] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[7] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test[0] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[11] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
    kubectl_manifest.test[4] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[5] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[7] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
    output.cluster_location - *terraform.NodeApplyableOutput
    output.cluster_name - *terraform.NodeApplyableOutput
    output.cluster_region - *terraform.NodeApplyableOutput
    output.network - *terraform.NodeApplyableOutput
    output.subnetwork_name - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
    provider.kubectl - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.cluster_location - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
  output.cluster_name - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
  output.cluster_region - *terraform.NodeApplyableOutput
    var.region - *terraform.NodeRootVariable
  output.network - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
  output.subnetwork_name - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
  provider.google - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.kubectl - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[0] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[11] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[4] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[5] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[7] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test[0] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[11] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
    kubectl_manifest.test[4] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[5] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[7] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
    output.cluster_location - *terraform.NodeApplyableOutput
    output.cluster_name - *terraform.NodeApplyableOutput
    output.cluster_region - *terraform.NodeApplyableOutput
    output.network - *terraform.NodeApplyableOutput
    output.subnetwork_name - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
    provider.kubectl - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.cluster_location - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
  output.cluster_name - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
  output.cluster_region - *terraform.NodeApplyableOutput
    var.region - *terraform.NodeRootVariable
  output.network - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
  output.subnetwork_name - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
  provider.google - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.google (close) - *terraform.graphNodeCloseProvider
    provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubectl (close) - *terraform.graphNodeCloseProvider
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test[0] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[11] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
    kubectl_manifest.test[4] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[5] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[7] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[0] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[11] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[4] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[5] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[7] - *terraform.NodeApplyableResourceInstance
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test[0] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[11] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
    kubectl_manifest.test[4] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[5] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[7] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
    output.cluster_location - *terraform.NodeApplyableOutput
    output.cluster_name - *terraform.NodeApplyableOutput
    output.cluster_region - *terraform.NodeApplyableOutput
    output.network - *terraform.NodeApplyableOutput
    output.subnetwork_name - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
    provider.kubectl - *terraform.NodeApplyableProvider
    var.location - *terraform.NodeRootVariable
    var.network_name - *terraform.NodeRootVariable
    var.region - *terraform.NodeRootVariable
  output.cluster_location - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
  output.cluster_name - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
  output.cluster_region - *terraform.NodeApplyableOutput
    var.region - *terraform.NodeRootVariable
  output.network - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
  output.subnetwork_name - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
  provider.google - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.google (close) - *terraform.graphNodeCloseProvider
    provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubectl (close) - *terraform.graphNodeCloseProvider
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test[0] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[11] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
    kubectl_manifest.test[4] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[5] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[7] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.google (close) - *terraform.graphNodeCloseProvider
    provider.kubectl (close) - *terraform.graphNodeCloseProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:20 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/17 06:23:20 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    data.kubectl_filename_list.manifests (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[0] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[11] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
  kubectl_manifest.test[11] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  kubectl_manifest.test[4] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[5] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
  kubectl_manifest.test[7] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test (prepare state) - *terraform.NodeApplyableResource
    kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
  kubectl_manifest.test[7] (destroy) - *terraform.NodeDestroyResourceInstance
    provider.kubectl - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubectl_manifest.test[0] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[11] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[4] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[5] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[7] - *terraform.NodeApplyableResourceInstance
    output.cluster_location - *terraform.NodeApplyableOutput
    output.cluster_name - *terraform.NodeApplyableOutput
    output.cluster_region - *terraform.NodeApplyableOutput
    output.network - *terraform.NodeApplyableOutput
    output.subnetwork_name - *terraform.NodeApplyableOutput
    var.location - *terraform.NodeRootVariable
    var.network_name - *terraform.NodeRootVariable
  output.cluster_location - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
  output.cluster_name - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
  output.cluster_region - *terraform.NodeApplyableOutput
    var.region - *terraform.NodeRootVariable
  output.network - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
  output.subnetwork_name - *terraform.NodeApplyableOutput
    provider.google - *terraform.NodeApplyableProvider
  provider.google - *terraform.NodeApplyableProvider
    var.region - *terraform.NodeRootVariable
  provider.google (close) - *terraform.graphNodeCloseProvider
    provider.google - *terraform.NodeApplyableProvider
  provider.kubectl - *terraform.NodeApplyableProvider
  provider.kubectl (close) - *terraform.graphNodeCloseProvider
    kubectl_manifest.test[0] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[11] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[4] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[5] - *terraform.NodeApplyableResourceInstance
    kubectl_manifest.test[7] - *terraform.NodeApplyableResourceInstance
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.google (close) - *terraform.graphNodeCloseProvider
    provider.kubectl (close) - *terraform.graphNodeCloseProvider
  var.location - *terraform.NodeRootVariable
  var.network_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  ------
2021/02/17 06:23:20 [DEBUG] Starting graph walk: walkApply
2021/02/17 06:23:20 [TRACE] dag/walk: updating graph
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[5]"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test (prepare state)"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[7] (destroy)"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[7]"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "output.cluster_name"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "provider.kubectl"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "provider.kubectl (close)"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "data.kubectl_filename_list.manifests (prepare state)"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "output.cluster_region"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "var.network_name"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[11] (destroy)"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "var.region"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "output.subnetwork_name"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "output.network"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "provider.google (close)"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "provider.google"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[0]"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[11]"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "var.location"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "output.cluster_location"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "root"
2021/02/17 06:23:20 [TRACE] dag/walk: added new vertex: "kubectl_manifest.test[4]"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "kubectl_manifest.test[11] (destroy)" waiting on "provider.kubectl"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "root" waiting on "provider.google (close)"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "provider.google" waiting on "var.region"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.network"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "output.cluster_location" waiting on "provider.google"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubectl_manifest.test[11]"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubectl_manifest.test[4]"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "data.kubectl_filename_list.manifests (prepare state)" waiting on "provider.kubectl"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "output.subnetwork_name" waiting on "provider.google"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "provider.google (close)" waiting on "provider.google"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.subnetwork_name"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubectl_manifest.test[0]"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubectl_manifest.test[5]"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.location"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "provider.kubectl (close)" waiting on "kubectl_manifest.test[4]"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "kubectl_manifest.test[11]" waiting on "kubectl_manifest.test (prepare state)"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "root" waiting on "provider.kubectl (close)"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "output.network" waiting on "provider.google"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "kubectl_manifest.test (prepare state)" waiting on "data.kubectl_filename_list.manifests (prepare state)"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "provider.kubectl (close)" waiting on "kubectl_manifest.test[7]"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "kubectl_manifest.test[7]" waiting on "kubectl_manifest.test (prepare state)"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "kubectl_manifest.test[7] (destroy)" waiting on "provider.kubectl"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "kubectl_manifest.test[7]"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "kubectl_manifest.test[7]" waiting on "kubectl_manifest.test[7] (destroy)"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "kubectl_manifest.test[0]" waiting on "kubectl_manifest.test (prepare state)"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.cluster_name"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "provider.kubectl (close)" waiting on "kubectl_manifest.test[11]"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.network_name"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "provider.kubectl (close)" waiting on "kubectl_manifest.test[5]"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.cluster_location"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "output.cluster_region" waiting on "var.region"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "kubectl_manifest.test[5]" waiting on "kubectl_manifest.test (prepare state)"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "kubectl_manifest.test[4]" waiting on "kubectl_manifest.test (prepare state)"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "kubectl_manifest.test[11]" waiting on "kubectl_manifest.test[11] (destroy)"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.cluster_region"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "output.cluster_name" waiting on "provider.google"
2021/02/17 06:23:20 [TRACE] dag/walk: added edge: "provider.kubectl (close)" waiting on "kubectl_manifest.test[0]"
2021/02/17 06:23:20 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2021/02/17 06:23:20 [TRACE] dag/walk: dependencies changed for "output.subnetwork_name", sending new deps
2021/02/17 06:23:20 [TRACE] dag/walk: dependencies changed for "provider.google (close)", sending new deps
2021/02/17 06:23:20 [TRACE] dag/walk: dependencies changed for "kubectl_manifest.test[11]", sending new deps
2021/02/17 06:23:20 [TRACE] dag/walk: dependencies changed for "kubectl_manifest.test (prepare state)", sending new deps
2021/02/17 06:23:20 [TRACE] dag/walk: dependencies changed for "kubectl_manifest.test[4]", sending new deps
2021/02/17 06:23:20 [TRACE] dag/walk: dependencies changed for "provider.google", sending new deps
2021/02/17 06:23:20 [TRACE] dag/walk: dependencies changed for "output.network", sending new deps
2021/02/17 06:23:20 [TRACE] dag/walk: dependencies changed for "kubectl_manifest.test[7] (destroy)", sending new deps
2021/02/17 06:23:20 [TRACE] dag/walk: dependencies changed for "output.cluster_region", sending new deps
2021/02/17 06:23:20 [TRACE] dag/walk: dependencies changed for "kubectl_manifest.test[11] (destroy)", sending new deps
2021/02/17 06:23:20 [TRACE] dag/walk: dependencies changed for "data.kubectl_filename_list.manifests (prepare state)", sending new deps
2021/02/17 06:23:20 [TRACE] dag/walk: dependencies changed for "provider.kubectl (close)", sending new deps
2021/02/17 06:23:20 [TRACE] dag/walk: dependencies changed for "kubectl_manifest.test[7]", sending new deps
2021/02/17 06:23:20 [TRACE] dag/walk: dependencies changed for "kubectl_manifest.test[0]", sending new deps
2021/02/17 06:23:20 [TRACE] dag/walk: dependencies changed for "output.cluster_name", sending new deps
2021/02/17 06:23:20 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2021/02/17 06:23:20 [TRACE] dag/walk: dependencies changed for "output.cluster_location", sending new deps
2021/02/17 06:23:20 [TRACE] dag/walk: dependencies changed for "kubectl_manifest.test[5]", sending new deps
2021/02/17 06:23:20 [TRACE] dag/walk: visiting "var.location"
2021/02/17 06:23:20 [TRACE] vertex "var.location": starting visit (*terraform.NodeRootVariable)
2021/02/17 06:23:20 [TRACE] vertex "var.location": evaluating
2021/02/17 06:23:20 [TRACE] dag/walk: visiting "var.network_name"
2021/02/17 06:23:20 [TRACE] [walkApply] Entering eval tree: var.location
2021/02/17 06:23:20 [TRACE] vertex "var.network_name": starting visit (*terraform.NodeRootVariable)
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:20 [TRACE] [walkApply] Exiting eval tree: var.location
2021/02/17 06:23:20 [TRACE] vertex "var.location": visit complete
2021/02/17 06:23:20 [TRACE] vertex "var.network_name": evaluating
2021/02/17 06:23:20 [TRACE] [walkApply] Entering eval tree: var.network_name
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:20 [TRACE] dag/walk: visiting "var.region"
2021/02/17 06:23:20 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2021/02/17 06:23:20 [TRACE] vertex "var.region": evaluating
2021/02/17 06:23:20 [TRACE] [walkApply] Entering eval tree: var.region
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:20 [TRACE] [walkApply] Exiting eval tree: var.region
2021/02/17 06:23:20 [TRACE] vertex "var.region": visit complete
2021/02/17 06:23:20 [TRACE] dag/walk: visiting "output.cluster_region"
2021/02/17 06:23:20 [TRACE] vertex "output.cluster_region": starting visit (*terraform.NodeApplyableOutput)
2021/02/17 06:23:20 [TRACE] vertex "output.cluster_region": evaluating
2021/02/17 06:23:20 [TRACE] [walkApply] Exiting eval tree: var.network_name
2021/02/17 06:23:20 [TRACE] vertex "var.network_name": visit complete
2021/02/17 06:23:20 [TRACE] dag/walk: visiting "provider.google"
2021/02/17 06:23:20 [TRACE] dag/walk: visiting "provider.kubectl"
2021/02/17 06:23:20 [TRACE] vertex "provider.google": starting visit (*terraform.NodeApplyableProvider)
2021/02/17 06:23:20 [TRACE] vertex "provider.kubectl": starting visit (*terraform.NodeApplyableProvider)
2021/02/17 06:23:20 [TRACE] vertex "provider.google": evaluating
2021/02/17 06:23:20 [TRACE] vertex "provider.kubectl": evaluating
2021/02/17 06:23:20 [TRACE] [walkApply] Entering eval tree: provider.google
2021/02/17 06:23:20 [TRACE] [walkApply] Entering eval tree: provider.kubectl
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021/02/17 06:23:20 [TRACE] [walkApply] Entering eval tree: output.cluster_region
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021-02-17T06:23:20.141Z [INFO]  plugin: configuring client automatic mTLS
2021/02/17 06:23:20 [TRACE] EvalWriteOutput: Saving value for output.cluster_region in state
2021/02/17 06:23:20 [TRACE] EvalWriteOutput: Saving Create change for output.cluster_region in changeset
2021/02/17 06:23:20 [TRACE] [walkApply] Exiting eval tree: output.cluster_region
2021/02/17 06:23:20 [TRACE] vertex "output.cluster_region": visit complete
2021-02-17T06:23:20.180Z [DEBUG] plugin: starting plugin: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5 args=[/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5]
2021-02-17T06:23:20.181Z [DEBUG] plugin: plugin started: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5 pid=70069
2021-02-17T06:23:20.181Z [DEBUG] plugin: waiting for RPC address: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5
2021-02-17T06:23:20.203Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: configuring server automatic mTLS: timestamp=2021-02-17T06:23:20.203Z
2021-02-17T06:23:20.248Z [DEBUG] plugin.terraform-provider-google_v3.57.0_x5: plugin address: network=unix address=/tmp/plugin036042650 timestamp=2021-02-17T06:23:20.248Z
2021-02-17T06:23:20.248Z [DEBUG] plugin: using plugin: version=5
2021/02/17 06:23:20 [TRACE] BuiltinEvalContext: Initialized "google" provider for provider.google
2021/02/17 06:23:20 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:20 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2021/02/17 06:23:20 [TRACE] buildProviderConfig for provider.google: using explicit config only
2021/02/17 06:23:20 [TRACE] GRPCProvider: GetSchema
2021-02-17T06:23:20.249Z [INFO]  plugin: configuring client automatic mTLS
2021-02-17T06:23:20.306Z [DEBUG] plugin: starting plugin: path=/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0 args=[/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0]
2021-02-17T06:23:20.307Z [DEBUG] plugin: plugin started: path=/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0 pid=70078
2021-02-17T06:23:20.307Z [DEBUG] plugin: waiting for RPC address: path=/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0
2021-02-17T06:23:20.364Z [INFO]  plugin.terraform-provider-kubectl_v1.10.0: configuring server automatic mTLS: timestamp=2021-02-17T06:23:20.363Z
2021-02-17T06:23:20.417Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: plugin address: address=/tmp/plugin017679703 network=unix timestamp=2021-02-17T06:23:20.417Z
2021-02-17T06:23:20.417Z [DEBUG] plugin: using plugin: version=5
2021/02/17 06:23:20 [TRACE] BuiltinEvalContext: Initialized "kubectl" provider for provider.kubectl
2021/02/17 06:23:20 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:20 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2021/02/17 06:23:20 [TRACE] buildProviderConfig for provider.kubectl: no configuration at all
2021/02/17 06:23:20 [TRACE] GRPCProvider: GetSchema
2021/02/17 06:23:20 [TRACE] GRPCProvider: Configure
2021-02-17T06:23:20.436Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:20 [INFO] Authenticating using DefaultClient...: timestamp=2021-02-17T06:23:20.436Z
2021-02-17T06:23:20.436Z [INFO]  plugin.terraform-provider-google_v3.57.0_x5: 2021/02/17 06:23:20 [INFO]   -- Scopes: [https://www.googleapis.com/auth/compute https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloud-identity https://www.googleapis.com/auth/ndev.clouddns.readwrite https://www.googleapis.com/auth/devstorage.full_control https://www.googleapis.com/auth/userinfo.email]: timestamp=2021-02-17T06:23:20.436Z
2021/02/17 06:23:20 [TRACE] [walkApply] Exiting eval tree: provider.google
2021/02/17 06:23:20 [TRACE] vertex "provider.google": visit complete
2021/02/17 06:23:20 [TRACE] dag/walk: visiting "output.subnetwork_name"
2021/02/17 06:23:20 [TRACE] vertex "output.subnetwork_name": starting visit (*terraform.NodeApplyableOutput)
2021/02/17 06:23:20 [TRACE] vertex "output.subnetwork_name": evaluating
2021/02/17 06:23:20 [TRACE] [walkApply] Entering eval tree: output.subnetwork_name
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/02/17 06:23:20 [TRACE] EvalWriteOutput: Saving value for output.subnetwork_name in state
2021/02/17 06:23:20 [TRACE] EvalWriteOutput: Saving Create change for output.subnetwork_name in changeset
2021/02/17 06:23:20 [TRACE] [walkApply] Exiting eval tree: output.subnetwork_name
2021/02/17 06:23:20 [TRACE] vertex "output.subnetwork_name": visit complete
2021/02/17 06:23:20 [TRACE] dag/walk: visiting "provider.google (close)"
2021/02/17 06:23:20 [TRACE] vertex "provider.google (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/17 06:23:20 [TRACE] vertex "provider.google (close)": evaluating
2021/02/17 06:23:20 [TRACE] [walkApply] Entering eval tree: provider.google (close)
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2021/02/17 06:23:20 [TRACE] GRPCProvider: Close
2021/02/17 06:23:20 [TRACE] dag/walk: visiting "output.cluster_location"
2021/02/17 06:23:20 [TRACE] vertex "output.cluster_location": starting visit (*terraform.NodeApplyableOutput)
2021/02/17 06:23:20 [TRACE] vertex "output.cluster_location": evaluating
2021/02/17 06:23:20 [TRACE] [walkApply] Entering eval tree: output.cluster_location
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/02/17 06:23:20 [TRACE] dag/walk: visiting "output.cluster_name"
2021/02/17 06:23:20 [TRACE] vertex "output.cluster_name": starting visit (*terraform.NodeApplyableOutput)
2021/02/17 06:23:20 [TRACE] vertex "output.cluster_name": evaluating
2021/02/17 06:23:20 [TRACE] [walkApply] Entering eval tree: output.cluster_name
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/02/17 06:23:20 [TRACE] dag/walk: visiting "output.network"
2021/02/17 06:23:20 [TRACE] vertex "output.network": starting visit (*terraform.NodeApplyableOutput)
2021/02/17 06:23:20 [TRACE] vertex "output.network": evaluating
2021/02/17 06:23:20 [TRACE] [walkApply] Entering eval tree: output.network
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/02/17 06:23:20 [TRACE] EvalWriteOutput: Saving value for output.network in state
2021/02/17 06:23:20 [TRACE] EvalWriteOutput: Saving Create change for output.network in changeset
2021/02/17 06:23:20 [TRACE] [walkApply] Exiting eval tree: output.network
2021/02/17 06:23:20 [TRACE] vertex "output.network": visit complete
2021/02/17 06:23:20 [TRACE] EvalWriteOutput: Saving value for output.cluster_name in state
2021/02/17 06:23:20 [TRACE] EvalWriteOutput: Saving Create change for output.cluster_name in changeset
2021/02/17 06:23:20 [TRACE] [walkApply] Exiting eval tree: output.cluster_name
2021/02/17 06:23:20 [TRACE] vertex "output.cluster_name": visit complete
2021/02/17 06:23:20 [TRACE] EvalWriteOutput: Saving value for output.cluster_location in state
2021/02/17 06:23:20 [TRACE] EvalWriteOutput: Saving Create change for output.cluster_location in changeset
2021/02/17 06:23:20 [TRACE] [walkApply] Exiting eval tree: output.cluster_location
2021/02/17 06:23:20 [TRACE] vertex "output.cluster_location": visit complete
2021-02-17T06:23:20.446Z [DEBUG] plugin: plugin process exited: path=/home/codingdog2020/terraform-k8s-demo/.terraform/plugins/linux_amd64/terraform-provider-google_v3.57.0_x5 pid=70069
2021-02-17T06:23:20.447Z [DEBUG] plugin: plugin exited
2021/02/17 06:23:20 [TRACE] [walkApply] Exiting eval tree: provider.google (close)
2021/02/17 06:23:20 [TRACE] vertex "provider.google (close)": visit complete
2021/02/17 06:23:20 [TRACE] GRPCProvider: Configure
2021-02-17T06:23:20.524Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:20 [INFO] Successfully loaded config file (/home/codingdog2020/.kube/config; default context)
2021/02/17 06:23:20 [TRACE] [walkApply] Exiting eval tree: provider.kubectl
2021/02/17 06:23:20 [TRACE] vertex "provider.kubectl": visit complete
2021/02/17 06:23:20 [TRACE] dag/walk: visiting "kubectl_manifest.test[7] (destroy)"
2021/02/17 06:23:20 [TRACE] vertex "kubectl_manifest.test[7] (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/17 06:23:20 [TRACE] vertex "kubectl_manifest.test[7] (destroy)": evaluating
2021/02/17 06:23:20 [TRACE] [walkApply] Entering eval tree: kubectl_manifest.test[7] (destroy)
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/02/17 06:23:20 [TRACE] EvalReadDiff: Read DeleteThenCreate change from plan for kubectl_manifest.test[7]
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2021/02/17 06:23:20 [TRACE] EvalReduceDiff: kubectl_manifest.test[7] change simplified from DeleteThenCreate to Delete for destroy node
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:20 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:20 [TRACE] EvalReadState: reading state for kubectl_manifest.test[7]
2021/02/17 06:23:20 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[7] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:20 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:20 [TRACE] dag/walk: visiting "data.kubectl_filename_list.manifests (prepare state)"
2021/02/17 06:23:20 [TRACE] vertex "data.kubectl_filename_list.manifests (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/02/17 06:23:20 [TRACE] vertex "data.kubectl_filename_list.manifests (prepare state)": evaluating
2021/02/17 06:23:20 [TRACE] [walkApply] Entering eval tree: data.kubectl_filename_list.manifests (prepare state)
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/02/17 06:23:20 [TRACE] [walkApply] Exiting eval tree: data.kubectl_filename_list.manifests (prepare state)
2021/02/17 06:23:20 [TRACE] vertex "data.kubectl_filename_list.manifests (prepare state)": visit complete
2021/02/17 06:23:20 [TRACE] dag/walk: visiting "kubectl_manifest.test (prepare state)"
2021/02/17 06:23:20 [TRACE] vertex "kubectl_manifest.test (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/02/17 06:23:20 [TRACE] vertex "kubectl_manifest.test (prepare state)": evaluating
2021/02/17 06:23:20 [TRACE] [walkApply] Entering eval tree: kubectl_manifest.test (prepare state)
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/02/17 06:23:20 [TRACE] [walkApply] Exiting eval tree: kubectl_manifest.test (prepare state)
2021/02/17 06:23:20 [TRACE] vertex "kubectl_manifest.test (prepare state)": visit complete
2021/02/17 06:23:20 [TRACE] dag/walk: visiting "kubectl_manifest.test[11] (destroy)"
2021/02/17 06:23:20 [TRACE] vertex "kubectl_manifest.test[11] (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/17 06:23:20 [TRACE] vertex "kubectl_manifest.test[11] (destroy)": evaluating
2021/02/17 06:23:20 [TRACE] [walkApply] Entering eval tree: kubectl_manifest.test[11] (destroy)
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/02/17 06:23:20 [TRACE] EvalReadDiff: Read DeleteThenCreate change from plan for kubectl_manifest.test[11]
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2021/02/17 06:23:20 [TRACE] EvalReduceDiff: kubectl_manifest.test[11] change simplified from DeleteThenCreate to Delete for destroy node
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:20 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:20 [TRACE] EvalReadState: reading state for kubectl_manifest.test[11]
2021/02/17 06:23:20 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[11] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:20 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:20 [TRACE] dag/walk: visiting "kubectl_manifest.test[5]"
2021/02/17 06:23:20 [TRACE] vertex "kubectl_manifest.test[5]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/17 06:23:20 [TRACE] vertex "kubectl_manifest.test[5]": evaluating
2021/02/17 06:23:20 [TRACE] [walkApply] Entering eval tree: kubectl_manifest.test[5]
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/02/17 06:23:20 [TRACE] EvalReadDiff: Read Create change from plan for kubectl_manifest.test[5]
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:20 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:20 [TRACE] EvalReadState: reading state for kubectl_manifest.test[5]
2021/02/17 06:23:20 [TRACE] EvalReadState: no state present for kubectl_manifest.test[5]
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/02/17 06:23:20 [TRACE] EvalReadDiff: Read Create change from plan for kubectl_manifest.test[5]
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:20 [TRACE] Re-validating config for "kubectl_manifest.test[5]"
2021/02/17 06:23:20 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalRequireState
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalApplyPre
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalApply
2021/02/17 06:23:20 [TRACE] dag/walk: visiting "kubectl_manifest.test[0]"
2021/02/17 06:23:20 [TRACE] vertex "kubectl_manifest.test[0]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/17 06:23:20 [DEBUG] kubectl_manifest.test[7]: applying the planned Delete change
2021/02/17 06:23:20 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/17 06:23:20 [TRACE] vertex "kubectl_manifest.test[0]": evaluating
2021/02/17 06:23:20 [TRACE] [walkApply] Entering eval tree: kubectl_manifest.test[0]
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/02/17 06:23:20 [TRACE] EvalReadDiff: Read Create change from plan for kubectl_manifest.test[0]
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:20 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:20 [TRACE] EvalReadState: reading state for kubectl_manifest.test[0]
2021/02/17 06:23:20 [TRACE] EvalReadState: no state present for kubectl_manifest.test[0]
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/02/17 06:23:20 [TRACE] EvalReadDiff: Read Create change from plan for kubectl_manifest.test[0]
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalDiff
2021-02-17T06:23:20.530Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:20 [DEBUG] postgres-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:postgres-deployment] spec:map[replicas:1 selector:map[matchLabels:map[component:postgres]] template:map[metadata:map[labels:map[component:postgres]] spec:map[containers:[map[env:[map[name:POSTGRES_PASSWORD]] image:postgres name:postgres ports:[map[containerPort:5432]] volumeMounts:[map[mountPath:/var/lib/postgresql/data name:postgres-storage subPath:postgres]]]] volumes:[map[name:postgres-storage persistentVolumeClaim:map[claimName:database-persistent-volume-claim]]]]]]]
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:20 [DEBUG] postgres-deployment delete kubernetes resource:
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: apiVersion: apps/v1
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: kind: Deployment
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: metadata:
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   name: postgres-deployment
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: spec:
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   replicas: 1
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   selector:
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     matchLabels:
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:       component: postgres
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   template:
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     metadata:
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:       labels:
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:         component: postgres
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     spec:
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:       volumes:
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:         - name: postgres-storage
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           persistentVolumeClaim:
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             claimName: database-persistent-volume-claim
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:       containers:
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:         - name: postgres
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           image: postgres
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           ports:
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - containerPort: 5432
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           volumeMounts:
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - name: postgres-storage
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               mountPath: /var/lib/postgresql/data
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               subPath: postgres
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           env:
2021-02-17T06:23:20.531Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - name: POSTGRES_PASSWORD
2021/02/17 06:23:20 [TRACE] Re-validating config for "kubectl_manifest.test[0]"
2021/02/17 06:23:20 [TRACE] dag/walk: visiting "kubectl_manifest.test[4]"
2021/02/17 06:23:20 [TRACE] vertex "kubectl_manifest.test[4]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/17 06:23:20 [TRACE] vertex "kubectl_manifest.test[4]": evaluating
2021/02/17 06:23:20 [TRACE] [walkApply] Entering eval tree: kubectl_manifest.test[4]
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/02/17 06:23:20 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:20 [TRACE] EvalReadDiff: Read Update change from plan for kubectl_manifest.test[4]
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:20 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:20 [TRACE] EvalReadState: reading state for kubectl_manifest.test[4]
2021/02/17 06:23:20 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[4] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:20 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/17 06:23:20 [TRACE] GRPCProvider: PlanResourceChange
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalRequireState
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalApplyPre
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalApply
2021/02/17 06:23:20 [DEBUG] kubectl_manifest.test[11]: applying the planned Delete change
2021/02/17 06:23:20 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/17 06:23:20 [TRACE] GRPCProvider: PlanResourceChange
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:20 [DEBUG] server-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:server-deployment] spec:map[replicas:3 selector:map[matchLabels:map[component:server]] template:map[metadata:map[labels:map[component:server]] spec:map[containers:[map[env:[map[name:REDIS_HOST value:redis-cluster-ip-service] map[name:REDIS_PORT value:6379] map[name:PGUSER value:postgres] map[name:PGHOST value:postgres-cluster-ip-service] map[name:PGPORT value:5432] map[name:PGDATABASE value:postgres] map[name:PGPASSWORD valueFrom:map[secretKeyRef:map[key:PGPASSWORD name:pgpassword]]]] image:manbobo2002/multi-server name:server ports:[map[containerPort:5000]]]]]]]]
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:20 [DEBUG] server-deployment delete kubernetes resource:
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: apiVersion: apps/v1
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: kind: Deployment
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: metadata:
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   name: server-deployment
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: spec:
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   replicas: 3
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   selector:
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     matchLabels:
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:       component: server
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   template:
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     metadata:
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:       labels:
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:         component: server
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     spec:
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:       containers:
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:         - name: server
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           image: manbobo2002/multi-server
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           ports:
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - containerPort: 5000
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           env:
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - name: REDIS_HOST
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               value: redis-cluster-ip-service
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - name: REDIS_PORT
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               value: '6379'
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - name: PGUSER
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               value: postgres
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - name: PGHOST
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               value: postgres-cluster-ip-service
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - name: PGPORT
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               value: '5432'
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - name: PGDATABASE
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               value: postgres
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - name: PGPASSWORD
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               valueFrom:
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:                 secretKeyRef:
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:                   name: pgpassword
2021-02-17T06:23:20.536Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:                   key: PGPASSWORD
2021-02-17T06:23:20.538Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:20 [INFO] default/postgres-deployment perform delete of manifest
2021-02-17T06:23:20.541Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:20 [INFO] default/server-deployment perform delete of manifest
2021-02-17T06:23:20.542Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:20 [DEBUG] letsencrypt-prod Unstructed YAML: map[apiVersion:cert-manager.io/v1alpha2 kind:ClusterIssuer metadata:map[name:letsencrypt-prod] spec:map[acme:map[email:youremail@email.com privateKeySecretRef:map[name:letsencrypt-prod] server:https://acme-v02.api.letsencrypt.org/directory solvers:[map[http01:map[ingress:map[class:nginx]]]]]]]
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/02/17 06:23:20 [TRACE] EvalReadDiff: Read Update change from plan for kubectl_manifest.test[4]
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalDiff
2021-02-17T06:23:20.544Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:20 [DEBUG] letsencrypt-prod Unstructed YAML: map[apiVersion:cert-manager.io/v1alpha2 kind:ClusterIssuer metadata:map[name:letsencrypt-prod] spec:map[acme:map[email:youremail@email.com privateKeySecretRef:map[name:letsencrypt-prod] server:https://acme-v02.api.letsencrypt.org/directory solvers:[map[http01:map[ingress:map[class:nginx]]]]]]]
2021/02/17 06:23:20 [TRACE] Re-validating config for "kubectl_manifest.test[4]"
2021/02/17 06:23:20 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:20 [TRACE] GRPCProvider: PlanResourceChange
2021/02/17 06:23:20 [WARN] Provider "registry.terraform.io/-/kubectl" produced an invalid plan for kubectl_manifest.test[5], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .force_new: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .validate_schema: planned value cty.True does not match config value cty.NullVal(cty.Bool)
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2021/02/17 06:23:20 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021-02-17T06:23:20.545Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:20 [DEBUG] gcpcloudtest.ddns.net Unstructed YAML: map[apiVersion:cert-manager.io/v1alpha2 kind:Certificate metadata:map[name:gcpcloudtest.ddns.net] spec:map[acme:map[config:[map[domains:[gcpcloudtest.ddns.net] http01:map[ingressClass:nginx]]]] commonName:gcpcloudtest.ddns.net dnsNames:[gcpcloudtest.ddns.net] issuerRef:map[kind:ClusterIssuer name:letsencrypt-prod] secretName:gcpcloudtest.ddns.net]]
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:20 [TRACE] EvalReadState: reading state for kubectl_manifest.test[5]
2021/02/17 06:23:20 [TRACE] EvalReadState: no state present for kubectl_manifest.test[5]
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:20 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalApplyPre
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalApply
2021-02-17T06:23:20.545Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:20 [DEBUG] gcpcloudtest.ddns.net Unstructed YAML: map[apiVersion:cert-manager.io/v1alpha2 kind:Certificate metadata:map[name:gcpcloudtest.ddns.net] spec:map[acme:map[config:[map[domains:[gcpcloudtest.ddns.net] http01:map[ingressClass:nginx]]]] commonName:gcpcloudtest.ddns.net dnsNames:[gcpcloudtest.ddns.net] issuerRef:map[kind:ClusterIssuer name:letsencrypt-prod] secretName:gcpcloudtest.ddns.net]]
2021/02/17 06:23:20 [DEBUG] kubectl_manifest.test[5]: applying the planned Create change
2021/02/17 06:23:20 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/17 06:23:20 [WARN] Provider "registry.terraform.io/-/kubectl" produced an invalid plan for kubectl_manifest.test[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .validate_schema: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .force_new: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2021/02/17 06:23:20 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:20 [TRACE] EvalReadState: reading state for kubectl_manifest.test[0]
2021/02/17 06:23:20 [TRACE] EvalReadState: no state present for kubectl_manifest.test[0]
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:20 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalApplyPre
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalApply
2021-02-17T06:23:20.547Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:20 [DEBUG] ingress-service Unstructed YAML: map[apiVersion:networking.k8s.io/v1beta1 kind:Ingress metadata:map[annotations:map[cert-manager.io/cluster-issuer:letsencrypt-prod kubernetes.io/ingress.class:nginx nginx.ingress.kubernetes.io/rewrite-target:/$1 nginx.ingress.kubernetes.io/use-regex:true] name:ingress-service] spec:map[rules:[map[http:map[paths:[map[backend:map[serviceName:client-cluster-ip-service servicePort:3000] path:/?(.*)] map[backend:map[serviceName:server-cluster-ip-service servicePort:5000] path:/api/?(.*)]]]]] tls:[map[hosts:[gcpcloudtest.ddns.net] secretName:gcpcloudtest.ddns.net]]]]
2021-02-17T06:23:20.547Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:20 [DEBUG] ingress-service Unstructed YAML: map[apiVersion:networking.k8s.io/v1beta1 kind:Ingress metadata:map[annotations:map[cert-manager.io/cluster-issuer:letsencrypt-prod kubernetes.io/ingress.class:nginx nginx.ingress.kubernetes.io/rewrite-target:/$1 nginx.ingress.kubernetes.io/use-regex:true] name:ingress-service] spec:map[rules:[map[http:map[paths:[map[backend:map[serviceName:client-cluster-ip-service servicePort:3000] path:/?(.*)] map[backend:map[serviceName:server-cluster-ip-service servicePort:5000] path:/api/?(.*)]]]]] tls:[map[hosts:[gcpcloudtest.ddns.net] secretName:gcpcloudtest.ddns.net]]]]
2021/02/17 06:23:20 [DEBUG] kubectl_manifest.test[0]: applying the planned Create change
2021/02/17 06:23:20 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-17T06:23:20.548Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:20 [DEBUG] letsencrypt-prod Unstructed YAML: map[apiVersion:cert-manager.io/v1alpha2 kind:ClusterIssuer metadata:map[name:letsencrypt-prod] spec:map[acme:map[email:youremail@email.com privateKeySecretRef:map[name:letsencrypt-prod] server:https://acme-v02.api.letsencrypt.org/directory solvers:[map[http01:map[ingress:map[class:nginx]]]]]]]
2021-02-17T06:23:20.548Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:20 [DEBUG] letsencrypt-prod apply kubernetes resource:
2021-02-17T06:23:20.548Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: apiVersion: cert-manager.io/v1alpha2
2021-02-17T06:23:20.548Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: kind: ClusterIssuer
2021-02-17T06:23:20.548Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: metadata:
2021-02-17T06:23:20.548Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   name: letsencrypt-prod
2021-02-17T06:23:20.548Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: spec:
2021-02-17T06:23:20.548Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   acme:
2021-02-17T06:23:20.548Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     server: https://acme-v02.api.letsencrypt.org/directory
2021-02-17T06:23:20.548Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     email: "youremail@email.com"
2021-02-17T06:23:20.548Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     privateKeySecretRef:
2021-02-17T06:23:20.548Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:       name: letsencrypt-prod
2021-02-17T06:23:20.548Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     solvers:
2021-02-17T06:23:20.548Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:       - http01:
2021-02-17T06:23:20.548Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           ingress:
2021-02-17T06:23:20.548Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             class: nginx
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2021/02/17 06:23:20 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Update) matches planned change (action Update)
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:20 [TRACE] EvalReadState: reading state for kubectl_manifest.test[4]
2021/02/17 06:23:20 [TRACE] UpgradeResourceState: schema version of kubectl_manifest.test[4] is still 0; calling provider "registry.terraform.io/-/kubectl" for any other minor fixups
2021/02/17 06:23:20 [TRACE] GRPCProvider: UpgradeResourceState
2021-02-17T06:23:20.550Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:20 [DEBUG] gcpcloudtest.ddns.net Unstructed YAML: map[apiVersion:cert-manager.io/v1alpha2 kind:Certificate metadata:map[name:gcpcloudtest.ddns.net] spec:map[acme:map[config:[map[domains:[gcpcloudtest.ddns.net] http01:map[ingressClass:nginx]]]] commonName:gcpcloudtest.ddns.net dnsNames:[gcpcloudtest.ddns.net] issuerRef:map[kind:ClusterIssuer name:letsencrypt-prod] secretName:gcpcloudtest.ddns.net]]
2021-02-17T06:23:20.550Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:20 [DEBUG] gcpcloudtest.ddns.net apply kubernetes resource:
2021-02-17T06:23:20.550Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: apiVersion: cert-manager.io/v1alpha2
2021-02-17T06:23:20.550Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: kind: Certificate
2021-02-17T06:23:20.550Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: metadata:
2021-02-17T06:23:20.550Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   name: gcpcloudtest.ddns.net
2021-02-17T06:23:20.550Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: spec:
2021-02-17T06:23:20.550Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   secretName: gcpcloudtest.ddns.net
2021-02-17T06:23:20.550Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   issuerRef:
2021-02-17T06:23:20.550Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     name: letsencrypt-prod
2021-02-17T06:23:20.550Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     kind: ClusterIssuer
2021-02-17T06:23:20.550Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   commonName: gcpcloudtest.ddns.net
2021-02-17T06:23:20.550Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   dnsNames:
2021-02-17T06:23:20.550Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     - gcpcloudtest.ddns.net
2021-02-17T06:23:20.550Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   acme:
2021-02-17T06:23:20.550Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     config:
2021-02-17T06:23:20.550Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:       - http01:
2021-02-17T06:23:20.550Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           ingressClass: nginx
2021-02-17T06:23:20.550Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:         domains:
2021-02-17T06:23:20.550Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           - gcpcloudtest.ddns.net
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:20 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalApplyPre
2021/02/17 06:23:20 [TRACE] <root>: eval: *terraform.EvalApply
2021/02/17 06:23:20 [DEBUG] kubectl_manifest.test[4]: applying the planned Update change
2021/02/17 06:23:20 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:20 [DEBUG] ingress-service Unstructed YAML: map[apiVersion:networking.k8s.io/v1beta1 kind:Ingress metadata:map[annotations:map[cert-manager.io/cluster-issuer:letsencrypt-prod kubernetes.io/ingress.class:nginx nginx.ingress.kubernetes.io/rewrite-target:/$1 nginx.ingress.kubernetes.io/use-regex:true] name:ingress-service] spec:map[rules:[map[http:map[paths:[map[backend:map[serviceName:client-cluster-ip-service servicePort:3000] path:/?(.*)] map[backend:map[serviceName:server-cluster-ip-service servicePort:5000] path:/api/?(.*)]]]]] tls:[map[hosts:[gcpcloudtest.ddns.net] secretName:gcpcloudtest.ddns.net]]]]
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:20 [DEBUG] ingress-service apply kubernetes resource:
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: apiVersion: networking.k8s.io/v1beta1
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: # UPDATE THE API
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: kind: Ingress
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: metadata:
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   name: ingress-service
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   annotations:
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     kubernetes.io/ingress.class: nginx
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     nginx.ingress.kubernetes.io/use-regex: 'true'
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     nginx.ingress.kubernetes.io/rewrite-target: /$1
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     cert-manager.io/cluster-issuer: "letsencrypt-prod"
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: spec:
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   tls:
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     - hosts:
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:         - gcpcloudtest.ddns.net
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:       secretName: gcpcloudtest.ddns.net
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   rules:
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     - http:
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:         paths:
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           - path: /?(.*)
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           # UPDATE THIS LINE ABOVE
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             backend:
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               serviceName: client-cluster-ip-service
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               servicePort: 3000
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           - path: /api/?(.*)
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           # UPDATE THIS LINE ABOVE
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             backend:
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               serviceName: server-cluster-ip-service
2021-02-17T06:23:20.554Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               servicePort: 5000
2021-02-17T06:23:20.557Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:20 [INFO] default/ingress-service perform apply of manifest
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:21 [TRACE] EvalWriteState: removing state object for kubectl_manifest.test[11]
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalApplyPost
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:21 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/17 06:23:21 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 54
2021/02/17 06:23:21 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/17 06:23:21 [TRACE] [walkApply] Exiting eval tree: kubectl_manifest.test[11] (destroy)
2021/02/17 06:23:21 [TRACE] vertex "kubectl_manifest.test[11] (destroy)": visit complete
2021/02/17 06:23:21 [TRACE] dag/walk: visiting "kubectl_manifest.test[11]"
2021/02/17 06:23:21 [TRACE] vertex "kubectl_manifest.test[11]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/17 06:23:21 [TRACE] vertex "kubectl_manifest.test[11]": evaluating
2021/02/17 06:23:21 [TRACE] [walkApply] Entering eval tree: kubectl_manifest.test[11]
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/02/17 06:23:21 [TRACE] EvalWriteState: removing state object for kubectl_manifest.test[7]
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalApplyPost
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2021/02/17 06:23:21 [TRACE] EvalReadDiff: Read DeleteThenCreate change from plan for kubectl_manifest.test[11]
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:21 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:21 [TRACE] EvalReadState: reading state for kubectl_manifest.test[11]
2021/02/17 06:23:21 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/17 06:23:21 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 55
2021/02/17 06:23:21 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/17 06:23:21 [TRACE] [walkApply] Exiting eval tree: kubectl_manifest.test[7] (destroy)
2021/02/17 06:23:21 [TRACE] vertex "kubectl_manifest.test[7] (destroy)": visit complete
2021/02/17 06:23:21 [TRACE] dag/walk: visiting "kubectl_manifest.test[7]"
2021/02/17 06:23:21 [TRACE] vertex "kubectl_manifest.test[7]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/17 06:23:21 [TRACE] vertex "kubectl_manifest.test[7]": evaluating
2021/02/17 06:23:21 [TRACE] [walkApply] Entering eval tree: kubectl_manifest.test[7]
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalSequence
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/02/17 06:23:21 [TRACE] EvalReadState: no state present for kubectl_manifest.test[11]
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/02/17 06:23:21 [TRACE] EvalReadDiff: Read DeleteThenCreate change from plan for kubectl_manifest.test[11]
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:21 [TRACE] Re-validating config for "kubectl_manifest.test[11]"
2021/02/17 06:23:21 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:21 [TRACE] EvalReadDiff: Read DeleteThenCreate change from plan for kubectl_manifest.test[7]
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:21 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:21 [TRACE] EvalReadState: reading state for kubectl_manifest.test[7]
2021/02/17 06:23:21 [TRACE] EvalReadState: no state present for kubectl_manifest.test[7]
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/02/17 06:23:21 [TRACE] EvalReadDiff: Read DeleteThenCreate change from plan for kubectl_manifest.test[7]
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalDiff
2021/02/17 06:23:21 [TRACE] GRPCProvider: PlanResourceChange
2021/02/17 06:23:21 [TRACE] Re-validating config for "kubectl_manifest.test[7]"
2021/02/17 06:23:21 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/17 06:23:21 [TRACE] GRPCProvider: PlanResourceChange
2021-02-17T06:23:21.058Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [DEBUG] server-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:server-deployment] spec:map[replicas:3 selector:map[matchLabels:map[component:server]] template:map[metadata:map[labels:map[component:server]] spec:map[containers:[map[env:[map[name:REDIS_HOST value:redis-cluster-ip-service] map[name:REDIS_PORT value:6379] map[name:PGUSER value:postgres] map[name:PGHOST value:postgres-cluster-ip-service] map[name:PGPORT value:5432] map[name:PGDATABASE value:postgres] map[name:PGPASSWORD valueFrom:map[secretKeyRef:map[key:PGPASSWORD name:pgpassword]]]] image:manbobo2002/multi-server name:server ports:[map[containerPort:5000]]]]]]]]
2021-02-17T06:23:21.058Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [DEBUG] postgres-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:postgres-deployment] spec:map[replicas:1 selector:map[matchLabels:map[component:postgres]] template:map[metadata:map[labels:map[component:postgres]] spec:map[containers:[map[env:[map[name:POSTGRES_PASSWORD]] image:postgres name:postgres ports:[map[containerPort:5432]] volumeMounts:[map[mountPath:/var/lib/postgresql/data name:postgres-storage subPath:postgres]]]] volumes:[map[name:postgres-storage persistentVolumeClaim:map[claimName:database-persistent-volume-claim]]]]]]]
2021-02-17T06:23:21.059Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [DEBUG] server-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:server-deployment] spec:map[replicas:3 selector:map[matchLabels:map[component:server]] template:map[metadata:map[labels:map[component:server]] spec:map[containers:[map[env:[map[name:REDIS_HOST value:redis-cluster-ip-service] map[name:REDIS_PORT value:6379] map[name:PGUSER value:postgres] map[name:PGHOST value:postgres-cluster-ip-service] map[name:PGPORT value:5432] map[name:PGDATABASE value:postgres] map[name:PGPASSWORD valueFrom:map[secretKeyRef:map[key:PGPASSWORD name:pgpassword]]]] image:manbobo2002/multi-server name:server ports:[map[containerPort:5000]]]]]]]]
2021-02-17T06:23:21.059Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [DEBUG] postgres-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:postgres-deployment] spec:map[replicas:1 selector:map[matchLabels:map[component:postgres]] template:map[metadata:map[labels:map[component:postgres]] spec:map[containers:[map[env:[map[name:POSTGRES_PASSWORD]] image:postgres name:postgres ports:[map[containerPort:5432]] volumeMounts:[map[mountPath:/var/lib/postgresql/data name:postgres-storage subPath:postgres]]]] volumes:[map[name:postgres-storage persistentVolumeClaim:map[claimName:database-persistent-volume-claim]]]]]]]
2021/02/17 06:23:21 [WARN] Provider "registry.terraform.io/-/kubectl" produced an invalid plan for kubectl_manifest.test[11], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .force_new: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .validate_schema: planned value cty.True does not match config value cty.NullVal(cty.Bool)
2021/02/17 06:23:21 [TRACE] EvalDiff: kubectl_manifest.test[11] treating Create change as DeleteThenCreate change to match with earlier plan
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2021/02/17 06:23:21 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action DeleteThenCreate) matches planned change (action DeleteThenCreate)
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:21 [TRACE] EvalReadState: reading state for kubectl_manifest.test[11]
2021/02/17 06:23:21 [TRACE] EvalReadState: no state present for kubectl_manifest.test[11]
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2021/02/17 06:23:21 [TRACE] EvalReduceDiff: kubectl_manifest.test[11] change simplified from DeleteThenCreate to Create for apply node
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:21 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalApplyPre
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalApply
2021/02/17 06:23:21 [DEBUG] kubectl_manifest.test[11]: applying the planned Create change
2021/02/17 06:23:21 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/17 06:23:21 [WARN] Provider "registry.terraform.io/-/kubectl" produced an invalid plan for kubectl_manifest.test[7], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .validate_schema: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .force_new: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/17 06:23:21 [TRACE] EvalDiff: kubectl_manifest.test[7] treating Create change as DeleteThenCreate change to match with earlier plan
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2021/02/17 06:23:21 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action DeleteThenCreate) matches planned change (action DeleteThenCreate)
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalReadState
2021/02/17 06:23:21 [TRACE] EvalReadState: reading state for kubectl_manifest.test[7]
2021/02/17 06:23:21 [TRACE] EvalReadState: no state present for kubectl_manifest.test[7]
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2021/02/17 06:23:21 [TRACE] EvalReduceDiff: kubectl_manifest.test[7] change simplified from DeleteThenCreate to Create for apply node
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:21 [TRACE] <root>: eval: terraform.EvalNoop
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalApplyPre
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalApply
2021/02/17 06:23:21 [DEBUG] kubectl_manifest.test[7]: applying the planned Create change
2021/02/17 06:23:21 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-17T06:23:21.066Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [DEBUG] server-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:server-deployment] spec:map[replicas:3 selector:map[matchLabels:map[component:server]] template:map[metadata:map[labels:map[component:server]] spec:map[containers:[map[env:[map[name:REDIS_HOST value:redis-cluster-ip-service] map[name:REDIS_PORT value:6379] map[name:PGUSER value:postgres] map[name:PGHOST value:postgres-cluster-ip-service] map[name:PGPORT value:5432] map[name:PGDATABASE value:postgres] map[name:PGPASSWORD valueFrom:map[secretKeyRef:map[key:PGPASSWORD name:pgpassword]]]] image:manbobo2002/multi-server name:server ports:[map[containerPort:5000]]]]]]]]
2021-02-17T06:23:21.066Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [DEBUG] server-deployment apply kubernetes resource:
2021-02-17T06:23:21.066Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: apiVersion: apps/v1
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: kind: Deployment
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: metadata:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   name: server-deployment
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: spec:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   replicas: 3
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   selector:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     matchLabels:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:       component: server
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   template:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     metadata:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:       labels:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:         component: server
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     spec:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:       containers:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:         - name: server
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           image: manbobo2002/multi-server
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           ports:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - containerPort: 5000
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           env:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - name: REDIS_HOST
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               value: redis-cluster-ip-service
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - name: REDIS_PORT
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               value: '6379'
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - name: PGUSER
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               value: postgres
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - name: PGHOST
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               value: postgres-cluster-ip-service
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - name: PGPORT
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               value: '5432'
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - name: PGDATABASE
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               value: postgres
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - name: PGPASSWORD
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               valueFrom:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:                 secretKeyRef:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:                   name: pgpassword
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:                   key: PGPASSWORD
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [DEBUG] postgres-deployment Unstructed YAML: map[apiVersion:apps/v1 kind:Deployment metadata:map[name:postgres-deployment] spec:map[replicas:1 selector:map[matchLabels:map[component:postgres]] template:map[metadata:map[labels:map[component:postgres]] spec:map[containers:[map[env:[map[name:POSTGRES_PASSWORD]] image:postgres name:postgres ports:[map[containerPort:5432]] volumeMounts:[map[mountPath:/var/lib/postgresql/data name:postgres-storage subPath:postgres]]]] volumes:[map[name:postgres-storage persistentVolumeClaim:map[claimName:database-persistent-volume-claim]]]]]]]
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [DEBUG] postgres-deployment apply kubernetes resource:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: apiVersion: apps/v1
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: kind: Deployment
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: metadata:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   name: postgres-deployment
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: spec:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   replicas: 1
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   selector:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     matchLabels:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:       component: postgres
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   template:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     metadata:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:       labels:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:         component: postgres
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     spec:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:       volumes:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:         - name: postgres-storage
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           persistentVolumeClaim:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             claimName: database-persistent-volume-claim
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:       containers:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:         - name: postgres
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           image: postgres
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           ports:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - containerPort: 5432
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           volumeMounts:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - name: postgres-storage
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               mountPath: /var/lib/postgresql/data
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:               subPath: postgres
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           env:
2021-02-17T06:23:21.067Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             - name: POSTGRES_PASSWORD
2021-02-17T06:23:21.070Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [INFO] default/server-deployment perform apply of manifest
2021-02-17T06:23:21.070Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [INFO] default/postgres-deployment perform apply of manifest
2021-02-17T06:23:21.136Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [INFO] default/ingress-service manifest applied, fetch resource from kubernetes
2021-02-17T06:23:21.317Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [DEBUG] default/ingress-service fetched successfully, set id to: /apis/networking.k8s.io/v1beta1/namespaces/default/ingresses/ingress-service
2021-02-17T06:23:21.320Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [DEBUG] default/ingress-service fetch from kubernetes
2021/02/17 06:23:21 [WARN] Provider "registry.terraform.io/-/kubectl" produced an unexpected new value for kubectl_manifest.test[4], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .live_resource_version: was cty.StringVal("10342"), but now cty.StringVal("15725")
      - .resource_version: was cty.StringVal("10342"), but now cty.StringVal("15725")
      - .live_manifest_incluster: inconsistent values for sensitive attribute
      - .yaml_incluster: inconsistent values for sensitive attribute
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:21 [TRACE] EvalWriteState: recording 0 dependencies for kubectl_manifest.test[4]
2021/02/17 06:23:21 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[4]
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2021/02/17 06:23:21 [TRACE] EvalApplyProvisioners: kubectl_manifest.test[4] is not freshly-created, so no provisioning is required
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:21 [TRACE] EvalWriteState: recording 0 dependencies for kubectl_manifest.test[4]
2021/02/17 06:23:21 [TRACE] EvalWriteState: writing current state object for kubectl_manifest.test[4]
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalApplyPost
2021/02/17 06:23:21 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2021/02/17 06:23:21 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/17 06:23:21 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 56
2021/02/17 06:23:21 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/17 06:23:21 [TRACE] [walkApply] Exiting eval tree: kubectl_manifest.test[4]
2021/02/17 06:23:21 [TRACE] vertex "kubectl_manifest.test[4]": visit complete
2021-02-17T06:23:21.477Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [INFO] default/postgres-deployment manifest applied, fetch resource from kubernetes
2021-02-17T06:23:21.485Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [INFO] default/server-deployment manifest applied, fetch resource from kubernetes
2021-02-17T06:23:21.523Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [ERROR] creating manifest failed: letsencrypt-prod failed to create kubernetes rest client for update of resource: resource [cert-manager.io/v1alpha2/ClusterIssuer] isn't valid for cluster, check the APIVersion and Kind fields are valid
2021-02-17T06:23:21.595Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [DEBUG] default/postgres-deployment fetched successfully, set id to: /apis/apps/v1/namespaces/default/deployments/postgres-deployment
2021-02-17T06:23:21.595Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [INFO] default/postgres-deployment waiting for deployment rollout for 10min
2021-02-17T06:23:21.595Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [DEBUG] Waiting for state to become: [success]
2021-02-17T06:23:21.606Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [DEBUG] default/server-deployment fetched successfully, set id to: /apis/apps/v1/namespaces/default/deployments/server-deployment
2021-02-17T06:23:21.607Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [INFO] default/server-deployment waiting for deployment rollout for 10min
2021-02-17T06:23:21.607Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [DEBUG] Waiting for state to become: [success]
2021-02-17T06:23:21.642Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [ERROR] creating manifest failed: gcpcloudtest.ddns.net failed to create kubernetes rest client for update of resource: resource [cert-manager.io/v1alpha2/Certificate] isn't valid for cluster, check the APIVersion and Kind fields are valid
2021-02-17T06:23:21.723Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [TRACE] Waiting 500ms before next try
2021-02-17T06:23:21.729Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:21 [TRACE] Waiting 500ms before next try
2021-02-17T06:23:22.346Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:22 [TRACE] Waiting 1s before next try
2021-02-17T06:23:22.353Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:22 [TRACE] Waiting 1s before next try
2021-02-17T06:23:23.468Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:23 [TRACE] Waiting 2s before next try
2021-02-17T06:23:23.476Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:23 [TRACE] Waiting 2s before next try
2021-02-17T06:23:24.838Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:24 [DEBUG] letsencrypt-prod Unstructed YAML: map[apiVersion:cert-manager.io/v1alpha2 kind:ClusterIssuer metadata:map[name:letsencrypt-prod] spec:map[acme:map[email:youremail@email.com privateKeySecretRef:map[name:letsencrypt-prod] server:https://acme-v02.api.letsencrypt.org/directory solvers:[map[http01:map[ingress:map[class:nginx]]]]]]]
2021-02-17T06:23:24.838Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:24 [DEBUG] letsencrypt-prod apply kubernetes resource:
2021-02-17T06:23:24.838Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: apiVersion: cert-manager.io/v1alpha2
2021-02-17T06:23:24.838Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: kind: ClusterIssuer
2021-02-17T06:23:24.838Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: metadata:
2021-02-17T06:23:24.838Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   name: letsencrypt-prod
2021-02-17T06:23:24.838Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: spec:
2021-02-17T06:23:24.838Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   acme:
2021-02-17T06:23:24.838Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     server: https://acme-v02.api.letsencrypt.org/directory
2021-02-17T06:23:24.838Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     email: "youremail@email.com"
2021-02-17T06:23:24.838Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     privateKeySecretRef:
2021-02-17T06:23:24.838Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:       name: letsencrypt-prod
2021-02-17T06:23:24.838Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     solvers:
2021-02-17T06:23:24.838Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:       - http01:
2021-02-17T06:23:24.838Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           ingress:
2021-02-17T06:23:24.838Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:             class: nginx
2021/02/17 06:23:25 [TRACE] dag/walk: vertex "root" is waiting for "provider.kubectl (close)"
2021/02/17 06:23:25 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubectl_manifest.test[0]"
2021-02-17T06:23:25.589Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:25 [ERROR] creating manifest failed: letsencrypt-prod failed to create kubernetes rest client for update of resource: resource [cert-manager.io/v1alpha2/ClusterIssuer] isn't valid for cluster, check the APIVersion and Kind fields are valid
2021/02/17 06:23:25 [DEBUG] kubectl_manifest.test[5]: apply errored, but we're indicating that via the Error pointer rather than returning it: letsencrypt-prod failed to create kubernetes rest client for update of resource: resource [cert-manager.io/v1alpha2/ClusterIssuer] isn't valid for cluster, check the APIVersion and Kind fields are valid
2021/02/17 06:23:25 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2021/02/17 06:23:25 [TRACE] EvalMaybeTainted: kubectl_manifest.test[5] encountered an error during creation, so it is now marked as tainted
2021/02/17 06:23:25 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:25 [TRACE] EvalWriteState: removing state object for kubectl_manifest.test[5]
2021/02/17 06:23:25 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2021/02/17 06:23:25 [TRACE] EvalApplyProvisioners: kubectl_manifest.test[5] has no state, so skipping provisioners
2021/02/17 06:23:25 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2021/02/17 06:23:25 [TRACE] EvalMaybeTainted: kubectl_manifest.test[5] encountered an error during creation, so it is now marked as tainted
2021/02/17 06:23:25 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:25 [TRACE] EvalWriteState: removing state object for kubectl_manifest.test[5]
2021/02/17 06:23:25 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:25 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:25 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:23:25 [TRACE] <root>: eval: *terraform.EvalApplyPost
2021/02/17 06:23:25 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: letsencrypt-prod failed to create kubernetes rest client for update of resource: resource [cert-manager.io/v1alpha2/ClusterIssuer] isn't valid for cluster, check the APIVersion and Kind fields are valid
2021/02/17 06:23:25 [ERROR] <root>: eval: *terraform.EvalSequence, err: letsencrypt-prod failed to create kubernetes rest client for update of resource: resource [cert-manager.io/v1alpha2/ClusterIssuer] isn't valid for cluster, check the APIVersion and Kind fields are valid
2021/02/17 06:23:25 [TRACE] [walkApply] Exiting eval tree: kubectl_manifest.test[5]
2021/02/17 06:23:25 [TRACE] vertex "kubectl_manifest.test[5]": visit complete
2021-02-17T06:23:25.592Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:25 [TRACE] Waiting 4s before next try
2021-02-17T06:23:25.600Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:25 [TRACE] Waiting 4s before next try
2021-02-17T06:23:25.964Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:25 [DEBUG] gcpcloudtest.ddns.net Unstructed YAML: map[apiVersion:cert-manager.io/v1alpha2 kind:Certificate metadata:map[name:gcpcloudtest.ddns.net] spec:map[acme:map[config:[map[domains:[gcpcloudtest.ddns.net] http01:map[ingressClass:nginx]]]] commonName:gcpcloudtest.ddns.net dnsNames:[gcpcloudtest.ddns.net] issuerRef:map[kind:ClusterIssuer name:letsencrypt-prod] secretName:gcpcloudtest.ddns.net]]
2021-02-17T06:23:25.964Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:25 [DEBUG] gcpcloudtest.ddns.net apply kubernetes resource:
2021-02-17T06:23:25.964Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: apiVersion: cert-manager.io/v1alpha2
2021-02-17T06:23:25.964Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: kind: Certificate
2021-02-17T06:23:25.964Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: metadata:
2021-02-17T06:23:25.964Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   name: gcpcloudtest.ddns.net
2021-02-17T06:23:25.964Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: spec:
2021-02-17T06:23:25.964Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   secretName: gcpcloudtest.ddns.net
2021-02-17T06:23:25.964Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   issuerRef:
2021-02-17T06:23:25.964Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     name: letsencrypt-prod
2021-02-17T06:23:25.964Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     kind: ClusterIssuer
2021-02-17T06:23:25.964Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   commonName: gcpcloudtest.ddns.net
2021-02-17T06:23:25.964Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   dnsNames:
2021-02-17T06:23:25.964Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     - gcpcloudtest.ddns.net
2021-02-17T06:23:25.964Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:   acme:
2021-02-17T06:23:25.964Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:     config:
2021-02-17T06:23:25.964Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:       - http01:
2021-02-17T06:23:25.964Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           ingressClass: nginx
2021-02-17T06:23:25.964Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:         domains:
2021-02-17T06:23:25.965Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0:           - gcpcloudtest.ddns.net
2021/02/17 06:23:26 [TRACE] dag/walk: vertex "provider.kubectl (close)" is waiting for "kubectl_manifest.test[7]"
2021-02-17T06:23:26.716Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:26 [ERROR] creating manifest failed: gcpcloudtest.ddns.net failed to create kubernetes rest client for update of resource: resource [cert-manager.io/v1alpha2/Certificate] isn't valid for cluster, check the APIVersion and Kind fields are valid
2021/02/17 06:23:26 [DEBUG] kubectl_manifest.test[0]: apply errored, but we're indicating that via the Error pointer rather than returning it: gcpcloudtest.ddns.net failed to create kubernetes rest client for update of resource: resource [cert-manager.io/v1alpha2/Certificate] isn't valid for cluster, check the APIVersion and Kind fields are valid
2021/02/17 06:23:26 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2021/02/17 06:23:26 [TRACE] EvalMaybeTainted: kubectl_manifest.test[0] encountered an error during creation, so it is now marked as tainted
2021/02/17 06:23:26 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:26 [TRACE] EvalWriteState: removing state object for kubectl_manifest.test[0]
2021/02/17 06:23:26 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2021/02/17 06:23:26 [TRACE] EvalApplyProvisioners: kubectl_manifest.test[0] has no state, so skipping provisioners
2021/02/17 06:23:26 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2021/02/17 06:23:26 [TRACE] EvalMaybeTainted: kubectl_manifest.test[0] encountered an error during creation, so it is now marked as tainted
2021/02/17 06:23:26 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:23:26 [TRACE] EvalWriteState: removing state object for kubectl_manifest.test[0]
2021/02/17 06:23:26 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:26 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:23:26 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:23:26 [TRACE] <root>: eval: *terraform.EvalApplyPost
2021/02/17 06:23:26 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: gcpcloudtest.ddns.net failed to create kubernetes rest client for update of resource: resource [cert-manager.io/v1alpha2/Certificate] isn't valid for cluster, check the APIVersion and Kind fields are valid
2021/02/17 06:23:26 [ERROR] <root>: eval: *terraform.EvalSequence, err: gcpcloudtest.ddns.net failed to create kubernetes rest client for update of resource: resource [cert-manager.io/v1alpha2/Certificate] isn't valid for cluster, check the APIVersion and Kind fields are valid
2021/02/17 06:23:26 [TRACE] [walkApply] Exiting eval tree: kubectl_manifest.test[0]
2021/02/17 06:23:26 [TRACE] vertex "kubectl_manifest.test[0]": visit complete
2021-02-17T06:23:29.715Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:29 [TRACE] Waiting 8s before next try
2021-02-17T06:23:29.724Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:29 [TRACE] Waiting 8s before next try
2021/02/17 06:23:30 [TRACE] dag/walk: vertex "root" is waiting for "provider.kubectl (close)"
2021/02/17 06:23:31 [TRACE] dag/walk: vertex "provider.kubectl (close)" is waiting for "kubectl_manifest.test[7]"
2021/02/17 06:23:31 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubectl_manifest.test[11]"
2021/02/17 06:23:35 [TRACE] dag/walk: vertex "root" is waiting for "provider.kubectl (close)"
2021/02/17 06:23:36 [TRACE] dag/walk: vertex "provider.kubectl (close)" is waiting for "kubectl_manifest.test[7]"
2021/02/17 06:23:36 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubectl_manifest.test[11]"
2021-02-17T06:23:37.840Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:37 [TRACE] Waiting 10s before next try
2021-02-17T06:23:37.847Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:37 [TRACE] Waiting 10s before next try
2021/02/17 06:23:40 [TRACE] dag/walk: vertex "root" is waiting for "provider.kubectl (close)"
2021/02/17 06:23:41 [TRACE] dag/walk: vertex "provider.kubectl (close)" is waiting for "kubectl_manifest.test[7]"
2021/02/17 06:23:41 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubectl_manifest.test[11]"
2021/02/17 06:23:45 [TRACE] dag/walk: vertex "root" is waiting for "provider.kubectl (close)"
2021/02/17 06:23:46 [TRACE] dag/walk: vertex "provider.kubectl (close)" is waiting for "kubectl_manifest.test[7]"
2021/02/17 06:23:46 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubectl_manifest.test[11]"
2021-02-17T06:23:47.966Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:47 [TRACE] Waiting 10s before next try
2021-02-17T06:23:47.970Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:47 [TRACE] Waiting 10s before next try
2021/02/17 06:23:50 [TRACE] dag/walk: vertex "root" is waiting for "provider.kubectl (close)"
2021/02/17 06:23:51 [TRACE] dag/walk: vertex "provider.kubectl (close)" is waiting for "kubectl_manifest.test[7]"
2021/02/17 06:23:51 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubectl_manifest.test[11]"
2021/02/17 06:23:55 [TRACE] dag/walk: vertex "root" is waiting for "provider.kubectl (close)"
2021/02/17 06:23:56 [TRACE] dag/walk: vertex "provider.kubectl (close)" is waiting for "kubectl_manifest.test[7]"
2021/02/17 06:23:56 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubectl_manifest.test[11]"
2021-02-17T06:23:58.138Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:58 [TRACE] Waiting 10s before next try
2021-02-17T06:23:58.144Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:23:58 [TRACE] Waiting 10s before next try
2021/02/17 06:24:00 [TRACE] dag/walk: vertex "root" is waiting for "provider.kubectl (close)"
2021/02/17 06:24:01 [TRACE] dag/walk: vertex "provider.kubectl (close)" is waiting for "kubectl_manifest.test[7]"
2021/02/17 06:24:01 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubectl_manifest.test[11]"
2021/02/17 06:24:05 [TRACE] dag/walk: vertex "root" is waiting for "provider.kubectl (close)"
2021/02/17 06:24:06 [TRACE] dag/walk: vertex "provider.kubectl (close)" is waiting for "kubectl_manifest.test[7]"
2021/02/17 06:24:06 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubectl_manifest.test[11]"
2021-02-17T06:24:08.264Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:24:08 [TRACE] Waiting 10s before next try
2021-02-17T06:24:08.266Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 2021/02/17 06:24:08 [TRACE] Waiting 10s before next try
2021/02/17 06:24:10 [TRACE] dag/walk: vertex "root" is waiting for "provider.kubectl (close)"
2021/02/17 06:24:11 [TRACE] dag/walk: vertex "provider.kubectl (close)" is waiting for "kubectl_manifest.test[7]"
2021/02/17 06:24:11 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubectl_manifest.test[11]"
2021/02/17 06:24:13 [TRACE] backend/local: waiting for the running operation to stop
2021/02/17 06:24:13 [WARN] terraform: Stop called, initiating interrupt sequence
2021/02/17 06:24:13 [WARN] terraform: run context exists, stopping
2021/02/17 06:24:13 [INFO] terraform: waiting for graceful stop to complete
2021/02/17 06:24:13 [TRACE] Context: requesting providers and provisioners to gracefully stop
2021/02/17 06:24:13 [TRACE] GRPCProvider: Stop
2021-02-17T06:24:13.452Z [TRACE] plugin.terraform-provider-kubectl_v1.10.0: plugin received interrupt signal, ignoring: count=1 timestamp=2021-02-17T06:24:13.452Z
2021-02-17T06:24:13.455Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: panic: close of nil channel
2021-02-17T06:24:13.455Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 
2021-02-17T06:24:13.455Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: goroutine 1113 [running]:
2021-02-17T06:24:13.455Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: github.com/hashicorp/terraform-plugin-go/tfprotov5/server.(*server).stop(0xc000904040)
2021-02-17T06:24:13.455Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 	github.com/hashicorp/terraform-plugin-go@v0.1.0/tfprotov5/server/server.go:201 +0x71
2021-02-17T06:24:13.455Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: github.com/hashicorp/terraform-plugin-go/tfprotov5/server.(*server).Stop(0xc000904040, 0x2373760, 0xc000b1e240, 0xc000b1e270, 0xc000904040, 0xc000b1e240, 0xc000950ba0)
2021-02-17T06:24:13.455Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 	github.com/hashicorp/terraform-plugin-go@v0.1.0/tfprotov5/server/server.go:215 +0xa5
2021-02-17T06:24:13.455Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: github.com/hashicorp/terraform-plugin-go/tfprotov5/internal/tfplugin5._Provider_Stop_Handler(0x1f743a0, 0xc000904040, 0x2373760, 0xc000b1e240, 0xc0003b7f20, 0x0, 0x2373760, 0xc000b1e240, 0x0, 0x0)
2021-02-17T06:24:13.455Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 	github.com/hashicorp/terraform-plugin-go@v0.1.0/tfprotov5/internal/tfplugin5/tfplugin5_grpc.pb.go:434 +0x214
2021-02-17T06:24:13.455Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: google.golang.org/grpc.(*Server).processUnaryRPC(0xc00026a380, 0x238cec0, 0xc000582d80, 0xc000642600, 0xc0003f2cf0, 0x31dd5a8, 0x0, 0x0, 0x0)
2021-02-17T06:24:13.455Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 	google.golang.org/grpc@v1.32.0/server.go:1194 +0x522
2021-02-17T06:24:13.455Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: google.golang.org/grpc.(*Server).handleStream(0xc00026a380, 0x238cec0, 0xc000582d80, 0xc000642600, 0x0)
2021-02-17T06:24:13.455Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 	google.golang.org/grpc@v1.32.0/server.go:1517 +0xd05
2021-02-17T06:24:13.455Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: google.golang.org/grpc.(*Server).serveStreams.func1.2(0xc0004b6260, 0xc00026a380, 0x238cec0, 0xc000582d80, 0xc000642600)
2021-02-17T06:24:13.455Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 	google.golang.org/grpc@v1.32.0/server.go:859 +0xa5
2021-02-17T06:24:13.455Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: created by google.golang.org/grpc.(*Server).serveStreams.func1
2021-02-17T06:24:13.455Z [DEBUG] plugin.terraform-provider-kubectl_v1.10.0: 	google.golang.org/grpc@v1.32.0/server.go:857 +0x1fd
2021-02-17T06:24:13.458Z [DEBUG] plugin: plugin process exited: path=/home/codingdog2020/.terraform.d/plugins/terraform-provider-kubectl_v1.10.0 pid=70078 error="exit status 2"
2021/02/17 06:24:13 [DEBUG] kubectl_manifest.test[11]: apply errored, but we're indicating that via the Error pointer rather than returning it: rpc error: code = Unavailable desc = transport is closing
2021/02/17 06:24:13 [DEBUG] kubectl_manifest.test[7]: apply errored, but we're indicating that via the Error pointer rather than returning it: rpc error: code = Unavailable desc = transport is closing
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2021/02/17 06:24:13 [TRACE] EvalMaybeTainted: kubectl_manifest.test[11] encountered an error during creation, so it is now marked as tainted
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:24:13 [TRACE] EvalWriteState: removing state object for kubectl_manifest.test[11]
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2021/02/17 06:24:13 [TRACE] EvalApplyProvisioners: kubectl_manifest.test[11] has no state, so skipping provisioners
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2021/02/17 06:24:13 [TRACE] EvalMaybeTainted: kubectl_manifest.test[11] encountered an error during creation, so it is now marked as tainted
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:24:13 [TRACE] EvalWriteState: removing state object for kubectl_manifest.test[11]
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalApplyPost
2021/02/17 06:24:13 [WARN] Early exit triggered by hook: *terraform.stopHook
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalApplyPost, early exit err: early exit
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2021/02/17 06:24:13 [TRACE] [walkApply] Exiting eval tree: kubectl_manifest.test[11]
2021/02/17 06:24:13 [TRACE] vertex "kubectl_manifest.test[11]": visit complete
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2021/02/17 06:24:13 [TRACE] EvalMaybeTainted: kubectl_manifest.test[7] encountered an error during creation, so it is now marked as tainted
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:24:13 [TRACE] EvalWriteState: removing state object for kubectl_manifest.test[7]
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2021/02/17 06:24:13 [TRACE] EvalApplyProvisioners: kubectl_manifest.test[7] has no state, so skipping provisioners
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2021/02/17 06:24:13 [TRACE] EvalMaybeTainted: kubectl_manifest.test[7] encountered an error during creation, so it is now marked as tainted
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/02/17 06:24:13 [TRACE] EvalWriteState: removing state object for kubectl_manifest.test[7]
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalIf
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalApplyPost
2021/02/17 06:24:13 [WARN] Early exit triggered by hook: *terraform.stopHook
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalApplyPost, early exit err: early exit
2021/02/17 06:24:13 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2021/02/17 06:24:13 [TRACE] [walkApply] Exiting eval tree: kubectl_manifest.test[7]
2021/02/17 06:24:13 [TRACE] vertex "kubectl_manifest.test[7]": visit complete
2021/02/17 06:24:13 [TRACE] dag/walk: upstream of "provider.kubectl (close)" errored, so skipping
2021/02/17 06:24:13 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2021/02/17 06:24:13 [TRACE] dag/walk: upstream of "root" errored, so skipping
2021/02/17 06:24:13 [WARN] terraform: stop complete
2021/02/17 06:24:13 [TRACE] backend/local: graceful stop has completed
2021/02/17 06:24:13 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/17 06:24:13 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 57
2021/02/17 06:24:13 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/17 06:24:13 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/17 06:24:13 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021-02-17T06:24:13.488Z [DEBUG] plugin: plugin exited
